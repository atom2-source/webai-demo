/*! For license information please see main.c00d1159.js.LICENSE.txt */
(()=>{var e={44:(e,t,n)=>{"use strict";n.d(t,{e:()=>c});var r=n(8804),a=n(4148),s=n(4974),o=n(7457),i=n(7892),l=n(3986),u=n(3290);const c=(0,i.op)({divNoNan_:function(e,t){let n=(0,a.YT)(e,"a","div"),i=(0,a.YT)(t,"b","div");[n,i]=(0,r.makeTypesMatch)(n,i);const c=(0,s.y)(n,i),d=(0,u.P)(c),p=(0,o.L)(i,d);return(0,l._)(p,d,c)}})},63:(e,t,n)=>{"use strict";n.d(t,{BF:()=>o,lw:()=>l,tJ:()=>u});var r=n(5743),a=n(2312),s=n(5101);const o=(0,a.Z)(((e,t)=>e*t)),i=(0,s.B)(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n}))),l=(0,s.j)(r.Multiply,o,i),u={kernelName:r.Multiply,backendName:"cpu",kernelFunc:l}},135:(e,t,n)=>{"use strict";n.d(t,{E:()=>l});var r=n(2164),a=n(9554),s=n(8804),o=n(4148),i=n(8805);const l=(0,n(7892).op)({notEqual_:function(e,t){let n=(0,o.YT)(e,"a","notEqual","string_or_numeric"),l=(0,o.YT)(t,"b","notEqual","string_or_numeric");[n,l]=(0,s.makeTypesMatch)(n,l),(0,i.assertAndGetBroadcastShape)(n.shape,l.shape);const u={a:n,b:l};return r.T2.runKernel(a.ylV,u)}})},191:(e,t,n)=>{"use strict";n.d(t,{R:()=>o});var r=n(2164),a=n(9554),s=n(4148);const o=(0,n(7892).op)({sqrt_:function(e){const t={x:(0,s.YT)(e,"x","sqrt","float32")};return r.T2.runKernel(a.dFH,t)}})},208:(e,t,n)=>{"use strict";n.d(t,{P:()=>l});var r=n(2164),a=n(9554),s=n(8804),o=n(4148),i=n(8805);const l=(0,n(7892).op)({squaredDifference_:function(e,t){let n=(0,o.YT)(e,"a","squaredDifference"),l=(0,o.YT)(t,"b","squaredDifference");[n,l]=(0,s.makeTypesMatch)(n,l),(0,i.assertAndGetBroadcastShape)(n.shape,l.shape);const u={a:n,b:l};return r.T2.runKernel(a.Ddj,u,{})}})},259:(e,t,n)=>{"use strict";n.d(t,{r:()=>s});var r=n(9494),a=n(1426);function s(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32",n=arguments.length>2?arguments[2]:void 0;return t=t||"float32",a.SA(e),new r.yl(e,t,n)}},261:(e,t,n)=>{"use strict";n.d(t,{l:()=>i});var r=n(2164),a=n(9554),s=n(7892),o=n(5583);const i=(0,s.op)({depthwiseConv2dNativeBackpropInput_:function(e,t,n,s,i){let l=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],u=arguments.length>6?arguments[6]:void 0,c=t,d=!1;3===t.rank&&(d=!0,c=(0,o.t)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const p={dy:c,filter:n},h={strides:s,pad:i,dimRoundingMode:u,dilations:l,inputShape:e},f=r.T2.runKernel(a.nVu,p,h);return d?(0,o.t)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},285:(e,t,n)=>{"use strict";n.d(t,{AQ:()=>S,CY:()=>p,Ej:()=>C,P8:()=>T,Rl:()=>I,Xf:()=>$,aG:()=>d,jf:()=>w,l3:()=>k,oR:()=>E,s5:()=>y,zV:()=>N});var r=n(6149),a=n(8032),s=n(1426),o=n(1042),i=n(7131),l=n(8046),u=n(5399);const c=4;async function d(e,t){const n=[],r=[],a=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let s=0;s<a.length;++s){const o=a[s],i=Array.isArray(e)?e[s].tensor:e[o];if("float32"!==i.dtype&&"int32"!==i.dtype&&"bool"!==i.dtype&&"string"!==i.dtype&&"complex64"!==i.dtype)throw new Error(`Unsupported dtype in weight '${o}': ${i.dtype}`);const l={name:o,shape:i.shape,dtype:i.dtype};if("string"===i.dtype){const e=new Promise((async e=>{const t=await i.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+c*t.length,r=new Uint8Array(n);let a=0;for(let s=0;s<t.length;s++){const e=t[s],n=new Uint8Array(new Uint32Array([e.length]).buffer);r.set(n,a),a+=c,r.set(e,a),a+=e.length}e(r)}));r.push(e)}else r.push(i.data());null!=t&&(l.group=t),n.push(l)}return{data:b(await Promise.all(r)),specs:n}}function p(e,t){const n=new i.D(e),r={};let a=0;for(const s of t){const e=h(s,((e,t)=>n.slice(a+e,a+t)));r[s.name]=m(s,n.slice(a,a+e)),a+=e}return r}function h(e,t){const n=(0,s.Ze)(e.shape);let r;if("quantization"in e){const t=e.quantization;r=o.i[t.dtype]}else{if("string"===e.dtype){let e=0;for(let r=0;r<n;r++)e+=c+new Uint32Array(t(e,e+c))[0];return e}r=o.i[e.dtype]}return n*r}async function f(e,t){const n=(0,s.Ze)(e.shape);let r;if("quantization"in e){const t=e.quantization;r=o.i[t.dtype]}else{if("string"===e.dtype){let e=0;for(let r=0;r<n;r++)e+=c+new Uint32Array(await t(e,e+c))[0];return e}r=o.i[e.dtype]}return n*r}function m(e,t){const n=e.name,i=e.dtype,l=e.shape,u=(0,s.Ze)(l);let d,p=0;if("quantization"in e){const r=e.quantization;if("uint8"===r.dtype||"uint16"===r.dtype){if(!("min"in r)||!("scale"in r))throw new Error(`Weight ${e.name} with quantization ${r.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==r.dtype)throw new Error(`Weight ${e.name} has unknown quantization dtype ${r.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==i)throw new Error(`Weight ${e.name} is quantized with ${r.dtype} which only supports weights of type float32 not ${i}.`)}const a=o.i[r.dtype],s="uint8"===r.dtype?new Uint8Array(t):new Uint16Array(t);if("float32"===i)if("uint8"===r.dtype||"uint16"===r.dtype){d=new Float32Array(s.length);for(let e=0;e<s.length;e++){const t=s[e];d[e]=t*r.scale+r.min}}else{if("float16"!==r.dtype)throw new Error(`Unsupported quantization type ${r.dtype} for weight type float32.`);{const e=function(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0===(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let n=1024;n<2048;n++)t[n]=939524096+(n-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{const a=new ArrayBuffer(4*r.length),s=new Uint32Array(a);for(let o=0;o<r.length;o++){const a=r[o],i=e[n[a>>10]+(1023&a)]+t[a>>10];s[o]=i}return new Float32Array(a)}}();d=e(s)}}else{if("int32"!==i)throw new Error(`Unsupported dtype in weight '${n}': ${i}`);if("uint8"!==r.dtype&&"uint16"!==r.dtype)throw new Error(`Unsupported quantization type ${r.dtype} for weight type int32.`);d=new Int32Array(s.length);for(let e=0;e<s.length;e++){const t=s[e];d[e]=Math.round(t*r.scale+r.min)}}p+=u*a}else if("string"===i){const n=(0,s.Ze)(e.shape);d=[];for(let e=0;e<n;e++){const e=new Uint32Array(t.slice(p,p+c))[0];p+=c;const n=new Uint8Array(t.slice(p,p+e));d.push(n),p+=e}}else{const e=o.i[i];if("float32"===i)d=new Float32Array(t);else if("int32"===i)d=new Int32Array(t);else{if("bool"!==i){if("complex64"===i){d=new Float32Array(t);const e=new Float32Array(d.length/2),n=new Float32Array(d.length/2);for(let t=0;t<e.length;t++)e[t]=d[2*t],n[t]=d[2*t+1];const s=(0,a.O)(e,l,"float32"),o=(0,a.O)(n,l,"float32"),i=(0,r.f)(s,o);return s.dispose(),o.dispose(),i}throw new Error(`Unsupported dtype in weight '${n}': ${i}`)}d=new Uint8Array(t)}p+=u*e}return(0,a.O)(d,l,i)}async function g(e,t,n){let r=new Uint8Array(t);for(;r.byteLength<n;){const{done:t,value:a}=await e.read();if(t&&null==a){const e=n-r.byteLength;throw new Error(`Reader is done but ${e} bytes are still expected`)}const s=new Uint8Array(r.length+a.byteLength);s.set(r,0),s.set(new Uint8Array(a),r.length),r=s}return r.buffer}async function y(e,t){const n={},r=e.getReader();let a=new ArrayBuffer(0);for(const o of t){const e=await f(o,(async(e,t)=>(a=await g(r,a,t),a.slice(e,t))));a=await g(r,a,e);const t=a.slice(0,e);a=a.slice(e);const i=m(o,t);if(n[o.name]=i,"webgpu"===(0,l.jz)()){const e=(0,l.Hs)();"uploadToGPU"in e&&(0,s.Ze)(i.shape)>=(0,u._K)().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&e.uploadToGPU(i.dataId)}}return n}function b(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const r=new Uint8Array(t);let a=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),a),a+=e.byteLength})),r.buffer}const v="undefined"!==typeof Buffer&&("undefined"===typeof Blob||"undefined"===typeof atob||"undefined"===typeof btoa);function x(e){return v?Buffer.byteLength(e,"utf8"):new Blob([e]).size}function k(e){if(v)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let r=0,a=t.length;r<a;r++)n+=String.fromCharCode(t[r]);return btoa(n)}function w(e){if(v){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let r=0;r<t.length;++r)n.set([t.charCodeAt(r)],r);return n.buffer}function S(e){return i.D.join(e)}function T(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function N(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(n.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}function I(e,t,n){const r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(r.trainingConfig=e.trainingConfig),null!=e.weightsManifest){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");r.weightSpecs=t,r.weightData=n}return null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(r.initializerSignature=e.initializerSignature),r}async function C(e,t){let n,r;return null!=e.weightsManifest&&([n,r]=await t(e.weightsManifest)),I(e,n,r)}function E(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:x(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:x(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:new i.D(e.weightData).byteLength}}function $(e){const t=[];for(const n of e)t.push(...n.weights);return t}},319:(e,t,n)=>{"use strict";n.d(t,{P:()=>o});var r=n(2164),a=n(9554),s=n(4148);const o=(0,n(7892).op)({step_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n={x:(0,s.YT)(e,"x","step")},o={alpha:t};return r.T2.runKernel(a.pnw,n,o)}})},321:(e,t,n)=>{"use strict";n.d(t,{Dk:()=>o,hd:()=>i});var r=n(5743),a=n(3143),s=n(63);function o(e,t,n){const a=r.util.createScalarValue(-1,n);return(0,s.BF)([],t,a,e,n)}const i={kernelName:r.Neg,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;(0,a.C)(r,"neg");const s=n.data.get(r.dataId).values,[i,l]=o(s,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,i)}}},463:(e,t,n)=>{"use strict";n.d(t,{d:()=>o});var r=n(2164),a=n(9554),s=n(4148);const o=(0,n(7892).op)({slice_:function(e,t,n){const o=(0,s.YT)(e,"x","slice","string_or_numeric");if(0===o.rank)throw new Error("Slicing scalar is not possible");const i={x:o},l={begin:t,size:n};return r.T2.runKernel(a.JiE,i,l)}})},477:(e,t,n)=>{"use strict";n.d(t,{Fx:()=>l,px:()=>o});var r=n(5743),a=n(4084),s=n(4729);const o=(0,a.o)((e=>Math.log(e))),i=(0,s.F)(r.Log,o),l={kernelName:r.Log,backendName:"cpu",kernelFunc:i}},526:(e,t,n)=>{"use strict";n.d(t,{b:()=>a});var r=n(5743);function a(e,t,n,a,s,o,i,l,u,c){const d=[a/s,s],p=e.values,h=t.values;if(0===a)return(0,r.buffer)(n,t.dtype);const f=u instanceof r.TensorBuffer?u:(0,r.buffer)(d,t.dtype);"string"===typeof u||"number"===typeof u?f.values.fill(u):"boolean"===typeof u&&f.values.fill(+u);for(let r=0;r<o;r++){const e=[];let o=0;for(let t=0;t<i;t++){const n=p[r*i+t];e.push(n),o+=n*l[t]}if(o<0||o>=a/s)throw new Error(`Invalid indices: ${e} does not index into ${n}`);for(let n=0;n<s;n++)c?f.values[o*s+n]+=h[r*s+n]:f.values[o*s+n]=0===t.rank?h[0]:h[r*s+n]}return f}},579:(e,t,n)=>{"use strict";e.exports=n(2799)},613:(e,t,n)=>{"use strict";n.d(t,{r:()=>i});var r=n(4148),a=n(1426),s=n(7892),o=n(5583);const i=(0,s.op)({squeeze_:function(e,t){const n=(0,r.YT)(e,"x","squeeze","string_or_numeric");return(0,o.t)(n,(0,a.gx)(n.shape,t).newShape)}})},668:(e,t,n)=>{"use strict";n.d(t,{Ml:()=>d,ct:()=>u,wg:()=>c});var r=n(5743),a=n(2312),s=n(1908),o=n(3075),i=n(3701),l=n(5995);function u(e,t,n,s){if("int32"===s){return[t,"int32",Int32Array.from(e)]}if("bool"===s){const s=r.util.toTypedArray([0],n),[o,i]=(0,a.Z)(((e,t)=>e!==t?1:0))(t,[],e,s,"bool");return[i,"bool",o]}throw new Error(`Error in Cast: failed to cast ${n} to ${s}`)}function c(e){const{inputs:t,backend:n,attrs:a}=e,{x:d}=t,{dtype:p}=a;if("complex64"===p){if("complex64"===d.dtype)return(0,i.D)({inputs:{x:d},backend:n});const e=(0,s.U)(n,d.shape,d.dtype),t=c({inputs:{x:d},backend:n,attrs:{dtype:"float32"}}),r=(0,o.f)({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===d.dtype){const e=(0,l.x)({inputs:{input:d},backend:n}),t=c({inputs:{x:e},backend:n,attrs:{dtype:p}});return n.disposeIntermediateTensorInfo(e),t}if(!r.util.hasEncodingLoss(d.dtype,p)){const e=(0,i.D)({inputs:{x:d},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:p}}const h=n.data.get(d.dataId).values,[f,m,g]=u(h,d.shape,d.dtype,p);return n.makeTensorInfo(f,m,g)}const d={kernelName:r.Cast,backendName:"cpu",kernelFunc:c}},706:(e,t,n)=>{"use strict";n.d(t,{l:()=>a});var r=n(5743);function a(e,t,n,a,s){const o=r.util.sizeFromShape(a),i=t[0],l=s.length,u=[];let c=1,d=-1;for(let g=0;g<l;++g){const e=s[g];if(-1===e){if(-1!==d)throw new Error(r.backend_util.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(d,g));d=g,u.push(1)}else{if(e<0)throw new Error(r.backend_util.getSparseReshapeNegativeOutputDimErrorMessage(g,e));c*=e,u.push(e)}}if(-1!==d){if(c<=0)throw new Error(r.backend_util.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());const e=Math.trunc(o/c);if(c*e!==o)throw new Error(r.backend_util.getSparseReshapeInputOutputMultipleErrorMessage(a,u));u[d]=e}if(r.util.sizeFromShape(u)!==o)throw new Error(r.backend_util.getSparseReshapeInputOutputMismatchErrorMessage(a,u));const p=a.length,h=[];if(p>0){h[p-1]=1;for(let e=p-2;e>=0;--e)h[e]=h[e+1]*a[e+1]}const f=[];if(l>0){f[l-1]=1;for(let e=l-2;e>=0;--e)f[e]=f[e+1]*u[e+1]}const m=r.util.getArrayFromDType(n,i*l);for(let r=0;r<i;++r){let t=0;for(let n=0;n<p;++n)t+=e[r*p+n]*h[n];for(let e=0;e<l;++e)m[r*l+e]=Math.trunc(t/f[e]),t%=f[e]}return[m,[i,l],u]}},803:(e,t,n)=>{"use strict";n.d(t,{l:()=>i});var r=n(2164),a=n(9554),s=n(8804),o=n(4148);const i=(0,n(7892).op)({mul_:function(e,t){let n=(0,o.YT)(e,"a","mul"),i=(0,o.YT)(t,"b","mul");[n,i]=(0,s.makeTypesMatch)(n,i);const l={a:n,b:i};return r.T2.runKernel(a.xu7,l)}})},827:(e,t,n)=>{"use strict";n.d(t,{I:()=>l});var r=n(2164),a=n(9554),s=n(8804),o=n(4148),i=n(8805);const l=(0,n(7892).op)({lessEqual_:function(e,t){let n=(0,o.YT)(e,"a","lessEqual","string_or_numeric"),l=(0,o.YT)(t,"b","lessEqual","string_or_numeric");[n,l]=(0,s.makeTypesMatch)(n,l),(0,i.assertAndGetBroadcastShape)(n.shape,l.shape);const u={a:n,b:l};return r.T2.runKernel(a.CwD,u)}})},843:(e,t,n)=>{"use strict";n.d(t,{Cf:()=>m,Op:()=>c,_5:()=>l,iP:()=>h,kr:()=>p,rY:()=>f,tA:()=>d,vQ:()=>u});var r=n(5399),a=n(7926),s=n(4124);const o=(0,a.m)("kernelRegistry",(()=>new Map)),i=(0,a.m)("gradRegistry",(()=>new Map));function l(e,t){const n=g(e,t);return o.get(n)}function u(e){return i.get(e)}function c(e){const t=o.entries(),n=[];for(;;){const{done:r,value:a}=t.next();if(r)break;const[s,o]=a,[i]=s.split("_");i===e&&n.push(o)}return n}function d(e){const{kernelName:t,backendName:n}=e,r=g(t,n);o.has(r)&&s.i(`The kernel '${t}' for backend '${n}' is already registered`),o.set(r,e)}function p(e){const{kernelName:t}=e;i.has(t)&&(0,r._K)().getBool("DEBUG")&&s.i(`Overriding the gradient for '${t}'`),i.set(t,e)}function h(e,t){const n=g(e,t);if(!o.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);o.delete(n)}function f(e){if(!i.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);i.delete(e)}function m(e,t){c(e).forEach((e=>{d(Object.assign({},e,{backendName:t}))}))}function g(e,t){return`${t}_${e}`}},891:(e,t,n)=>{"use strict";n.d(t,{T:()=>o});var r=n(2164),a=n(9554),s=n(4148);const o=(0,n(7892).op)({max_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const o={x:(0,s.YT)(e,"x","max")},i={reductionIndices:t,keepDims:n};return r.T2.runKernel(a.VAI,o,i)}})},901:(e,t,n)=>{"use strict";n.d(t,{t:()=>i});var r=n(2164),a=n(9554),s=n(4148),o=n(1426);const i=(0,n(7892).op)({stack_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=(0,s.j1)(e,"tensors","stack","string_or_numeric");o.vA(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&o.vA(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const i=n,l={axis:t};return r.T2.runKernel(a.mM$,i,l)}})},945:(e,t,n)=>{"use strict";n.d(t,{RF:()=>o,b2:()=>l});var r=n(5743),a=n(2312),s=n(5101);const o=(0,a.Z)(((e,t)=>{const n=e-t;return n*n})),i=(0,s.j)(r.SquaredDifference,o),l={kernelName:r.SquaredDifference,backendName:"cpu",kernelFunc:i}},983:(e,t,n)=>{"use strict";n.d(t,{F:()=>o});var r=n(2164),a=n(9554),s=n(4148);const o=(0,n(7892).op)({acosh_:function(e){const t={x:(0,s.YT)(e,"x","acosh")};return r.T2.runKernel(a.PH8,t)}})},1011:(e,t,n)=>{"use strict";n.d(t,{H:()=>o});var r=n(2164),a=n(9554),s=n(4148);const o=(0,n(7892).op)({neg_:function(e){const t={x:(0,s.YT)(e,"x","neg")};return r.T2.runKernel(a.l0G,t)}})},1042:(e,t,n)=>{"use strict";n.d(t,{i:()=>r});const r={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8}},1047:(e,t,n)=>{"use strict";n.d(t,{n:()=>o});var r=n(2164),a=n(9554),s=n(4148);const o=(0,n(7892).op)({imag_:function(e){const t={input:(0,s.YT)(e,"input","imag")};return r.T2.runKernel(a.dv8,t)}})},1137:(e,t,n)=>{"use strict";n.d(t,{w:()=>s});var r=n(4148),a=n(1565);const s=(0,n(7892).op)({conv2dTranspose_:function(e,t,n,s,o,i){const l=(0,r.YT)(e,"x","conv2dTranspose"),u=(0,r.YT)(t,"filter","conv2dTranspose");return(0,a.v)(n,l,u,s,o,"NHWC",i)}})},1164:(e,t,n)=>{"use strict";n.d(t,{y:()=>o});var r=n(2164),a=n(9554),s=n(4148);const o=(0,n(7892).op)({cosh_:function(e){const t={x:(0,s.YT)(e,"x","cosh","float32")};return r.T2.runKernel(a.MnK,t)}})},1194:(e,t,n)=>{"use strict";n.d(t,{H:()=>h});var r=n(1839),a=n(4148),s=n(7794),o=n(5462),i=n(5911),l=n(891),u=n(803),c=n(7892),d=n(7951),p=n(7382);const h=(0,c.op)({logSoftmax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=(0,a.YT)(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return(0,r._X)(((e,n)=>{const r=(0,l.T)(e,t,!0),a=(0,d.j)(e,r),c=(0,d.j)((0,s.w)(a,"float32"),(0,i.R)((0,p.c)((0,o.o)(a),t,!0)));n([c]);return{value:c,gradFunc:(e,n)=>{const[r]=n,a=(0,o.o)(r);return(0,d.j)(e,(0,u.l)((0,p.c)(e,t,!0),a))}}}))(n)}})},1206:(e,t,n)=>{"use strict";n.d(t,{S3:()=>i,_B:()=>o});var r=n(5743),a=n(3143),s=n(9868);function o(e,t,n,a){const[s,o]=r.backend_util.computeOutAndReduceShapes(e,a),i=(0,r.upcastType)(t,"int32"),l=r.util.makeZerosTypedArray(r.util.sizeFromShape(s),i),u=r.util.sizeFromShape(o);for(let r=0;r<l.length;++r){const e=r*u;let t=1;for(let r=0;r<u;++r)t*=n[e+r];l[r]=t}return{outVals:l,outShape:s,outDtype:i}}const i={kernelName:r.Prod,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{x:l}=t,{axis:u,keepDims:c}=i;(0,a.C)(l,"prod");const d=l.shape.length,p=r.util.parseAxisParam(u,l.shape),h=r.backend_util.getAxesPermutation(p,d);let f=p,m=l;const g=[];null!=h&&(m=(0,s.m)({inputs:{x:l},backend:n,attrs:{perm:h}}),g.push(m),f=r.backend_util.getInnerMostAxes(f.length,d));const y=n.data.get(m.dataId).values,{outVals:b,outShape:v,outDtype:x}=o(m.shape,m.dtype,y,f);let k=v;return c&&(k=r.backend_util.expandShapeToKeepDim(v,p)),g.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(k,x,b)}}},1217:(e,t,n)=>{"use strict";n.d(t,{rq:()=>o,xp:()=>l});var r=n(5743),a=n(2312),s=n(5101);const o=(0,a.Z)(((e,t)=>e>t?1:0)),i=(0,s.j)(r.Greater,o,null,"bool"),l={kernelName:r.Greater,backendName:"cpu",kernelFunc:i}},1231:(e,t,n)=>{"use strict";n.d(t,{Y:()=>o});var r=n(2164),a=n(9554),s=n(4148);const o=(0,n(7892).op)({stridedSlice_:function(e,t,n,o){let i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,l=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0,u=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0,c=arguments.length>7&&void 0!==arguments[7]?arguments[7]:0,d=arguments.length>8&&void 0!==arguments[8]?arguments[8]:0;const p={x:(0,s.YT)(e,"x","stridedSlice","string_or_numeric")},h={begin:t,end:n,strides:o,beginMask:i,endMask:l,ellipsisMask:u,newAxisMask:c,shrinkAxisMask:d};return r.T2.runKernel(a.UcO,p,h)}})},1234:()=>{},1386:(e,t,n)=>{"use strict";n.d(t,{K:()=>o});var r=n(2164),a=n(9554),s=n(4148);const o=(0,n(7892).op)({log1p_:function(e){const t={x:(0,s.YT)(e,"x","log1p")};return r.T2.runKernel(a.Cg$,t)}})},1405:(e,t,n)=>{"use strict";n.d(t,{K:()=>o});var r=n(2164),a=n(9554),s=n(1426);const o=(0,n(7892).op)({ifft_:function(e){(0,s.vA)("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return r.T2.runKernel(a.OAQ,t)}})},1426:(e,t,n)=>{"use strict";function r(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,i(e,t,n)}function a(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,r=0;for(;n>0;)r=Math.random()*n|0,n--,i(e,n,r),i(t,n,r)}function s(e,t,n){return Math.max(e,Math.min(t,n))}function o(e){return e%2===0?e:e+1}function i(e,t,n){const r=e[t];e[t]=e[n],e[n]=r}function l(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function u(e,t){const n=Math.random();return t*n+(1-n)*e}function c(e,t){let n=0;for(let r=0;r<e.length;r++){const a=Number(e[r])-Number(t[r]);n+=a*a}return n}function d(e,t){if(!e)throw new Error("string"===typeof t?t:t())}function p(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";d(y(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function h(e){d(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function f(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function m(e){return 0===e.length}function g(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(null!==e[n]&&null!==t[n]&&e[n]!==t[n])return!1;return!0}function y(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function b(e){return e%1===0}function v(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}}function x(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function k(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return r(t),t}function w(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function S(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e=>0,n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0;return new Promise(((a,s)=>{let o=0;const i=()=>{if(e())return void a();o++;const l=t(o);null!=n&&o>=n?s():null!=r?r(i,l):setTimeout(i,l)};i()}))}function T(e,t){let n=1,r=-1;for(let s=0;s<e.length;++s)if(e[s]>=0)n*=e[s];else if(-1===e[s]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${s}`);r=s}else if(e[s]<0)throw Error(`Shapes can not be < 0. Found ${e[s]} at dim ${s}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const a=e.slice();return a[r]=t/n,a}function N(e,t){const n=t.length;return d((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),d(e.every((e=>b(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function I(e,t){const n=[],r=[],a=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||a?null:N(t,e).sort();let o=0;for(let i=0;i<e.length;++i){if(null!=s){if(s[o]===i&&1!==e[i])throw new Error(`Can't squeeze axis ${i} since its dim '${e[i]}' is not 1`);(null==s[o]||s[o]>i)&&1===e[i]&&(n.push(e[i]),r.push(i)),s[o]<=i&&o++}1!==e[i]&&(n.push(e[i]),r.push(i))}return{newShape:n,keptDims:r}}function C(e,t){return E(e,t)}function E(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function $(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function A(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function _(e,t){return"complex64"!==t&&(("float32"!==t||"complex64"===e)&&(("int32"!==t||"float32"===e||"complex64"===e)&&("bool"!==t||"bool"!==e)))}function R(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function F(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function O(e){return"string"===typeof e||e instanceof String}function D(e){return"boolean"===typeof e}function M(e){return"number"===typeof e}function P(e){return Array.isArray(e)?P(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":M(e)?"float32":O(e)?"string":D(e)?"bool":"float32"}function L(e){return!!(e&&e.constructor&&e.call&&e.apply)}function z(e,t){for(let n=t;n<e;++n)if(e%n===0)return n;return e}function B(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function V(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const a=new Array;if(1===t.length){const s=t[0]*(r?2:1);for(let t=0;t<s;t++)a[t]=n[e+t]}else{const s=t[0],o=t.slice(1),i=o.reduce(((e,t)=>e*t))*(r?2:1);for(let t=0;t<s;t++)a[t]=V(e+t*i,o,n,r)}return a}function W(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(0===e.length)return t[0];const r=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return V(0,e,t,n)}function U(e,t){if(Array.isArray(e))return e;if("float32"===t)return e instanceof Float32Array?e:new Float32Array(e);if("int32"===t)return e instanceof Int32Array?e:new Int32Array(e);if("bool"===t||"string"===t)return Uint8Array.from(new Int32Array(e));throw new Error(`Unknown dtype ${t}`)}function G(e,t){const n=j(e,t);for(let r=0;r<n.length;r++)n[r]=1;return n}function j(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function H(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return W(e,new Float32Array(n));if("int32"===t)return W(e,new Int32Array(n));if("bool"===t)return W(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function Y(e){e.forEach((t=>{d(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function q(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let a=0;a<e.length-1;++a)r+=n[a]*e[a];return r}function K(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let a=0;a<r.length-1;++a)r[a]=Math.floor(e/n[a]),e-=r[a]*n[a];return r[r.length-1]=e,r}function X(e){return e&&e.then&&"function"===typeof e.then}n.d(t,{Ab:()=>E,BE:()=>_,E6:()=>b,Et:()=>M,FZ:()=>G,HO:()=>h,Kg:()=>O,Lm:()=>D,O3:()=>p,P8:()=>k,SA:()=>Y,SL:()=>F,Sf:()=>m,Tn:()=>L,Ty:()=>j,Ur:()=>B,X$:()=>P,XT:()=>T,Y6:()=>N,Ze:()=>f,_k:()=>K,_q:()=>S,a0:()=>a,av:()=>w,c7:()=>H,ce:()=>C,cz:()=>l,eV:()=>o,e_:()=>g,gS:()=>x,gx:()=>I,jv:()=>R,k4:()=>r,lK:()=>z,nd:()=>$,o2:()=>U,oO:()=>c,qE:()=>s,r1:()=>y,sX:()=>q,so:()=>u,vA:()=>d,wg:()=>i,xn:()=>A,yL:()=>X,ym:()=>v,yw:()=>W})},1465:(e,t,n)=>{"use strict";n.d(t,{j:()=>o});var r=n(2164),a=n(9554),s=n(4148);const o=(0,n(7892).op)({min_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const o={x:(0,s.YT)(e,"x","min")},i={axis:t,keepDims:n};return r.T2.runKernel(a.lNG,o,i)}})},1565:(e,t,n)=>{"use strict";n.d(t,{v:()=>u});var r=n(2164),a=n(9554),s=n(1426),o=n(7538),i=n(7892),l=n(5583);const u=(0,i.op)({conv2DBackpropInput_:function(e,t,n,i,u){let c=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC",d=arguments.length>6?arguments[6]:void 0;s.vA(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let p=e,h=t,f=!1;3===t.rank&&(f=!0,h=(0,l.t)(t,[1,t.shape[0],t.shape[1],t.shape[2]]),p=[1,e[0],e[1],e[2]]),s.vA(4===p.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${p.length}.`)),s.vA(4===h.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${h.rank}`)),s.vA(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const m="NHWC"===c?p[3]:p[1],g="NHWC"===c?h.shape[3]:h.shape[1];s.vA(m===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${m}) must match input depth for filter ${n.shape[2]}.`)),s.vA(g===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${g}) must match output depth for filter ${n.shape[3]}.`)),o.s_("conv2dDerInput",u,d);const y={dy:h,filter:n},b={strides:i,pad:u,dataFormat:c,dimRoundingMode:d,inputShape:p},v=r.T2.runKernel(a.jfg,y,b);return f?(0,l.t)(v,[v.shape[1],v.shape[2],v.shape[3]]):v}})},1667:(e,t,n)=>{"use strict";var r;n.d(t,{i:()=>r}),function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(r||(r={}))},1719:(e,t,n)=>{"use strict";n.d(t,{R:()=>i});var r=n(2164),a=n(9554),s=n(4148),o=n(1426);const i=(0,n(7892).op)({depthToSpace_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"NHWC";const i=(0,s.YT)(e,"x","depthToSpace","float32"),l="NHWC"===n?i.shape[1]:i.shape[2],u="NHWC"===n?i.shape[2]:i.shape[3],c="NHWC"===n?i.shape[3]:i.shape[1];o.vA(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`)),o.vA(l*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${l} and ${t}  for depthToSpace with input shape\n    ${i.shape}`)),o.vA(u*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${u} and ${t} for depthToSpace with input shape\n        ${i.shape}`)),o.vA(c%(t*t)===0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${c} for depthToSpace with input shape ${i.shape}`));const d={x:i},p={blockSize:t,dataFormat:n};return r.T2.runKernel(a.TMz,d,p)}})},1802:(e,t,n)=>{"use strict";n.d(t,{Q:()=>o});var r=n(2164),a=n(9554),s=n(4148);const o=(0,n(7892).op)({all_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const o={x:(0,s.YT)(e,"x","all","bool")},i={axis:t,keepDims:n};return r.T2.runKernel(a.u8Z,o,i)}})},1819:(e,t,n)=>{"use strict";n.d(t,{b:()=>o});var r=n(2164),a=n(9554),s=n(4148);const o=(0,n(7892).op)({any_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const o={x:(0,s.YT)(e,"x","any","bool")},i={axis:t,keepDims:n};return r.T2.runKernel(a.FSt,o,i)}})},1839:(e,t,n)=>{"use strict";n.d(t,{Dv:()=>i,_X:()=>p,jY:()=>u,mu:()=>c,ok:()=>l,y7:()=>d});var r=n(2164),a=n(9494),s=n(4148),o=n(1426);function i(e){return o.vA(o.Tn(e),(()=>"The f passed in grad(f) must be a function")),(t,n)=>{const a=(0,s.YT)(t,"x","tf.grad","string_or_numeric"),i=null!=n?(0,s.YT)(n,"dy","tf.grad"):null;return r.T2.tidy((()=>{const{value:t,grads:n}=r.T2.gradients((()=>e(a)),[a],i);return null!=i&&o.O3(t.shape,i.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),h(n),n[0]}))}}function l(e){return o.vA(o.Tn(e),(()=>"The f passed in grads(f) must be a function")),(t,n)=>{o.vA(Array.isArray(t),(()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s"));const a=(0,s.j1)(t,"args","tf.grads","string_or_numeric"),i=null!=n?(0,s.YT)(n,"dy","tf.grads"):null;return r.T2.tidy((()=>{const{value:t,grads:n}=r.T2.gradients((()=>e(...a)),a,i);return null!=i&&o.O3(t.shape,i.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),h(n),n}))}}function u(e){return o.vA(o.Tn(e),(()=>"The f passed in valueAndGrad(f) must be a function")),(t,n)=>{o.vA(t instanceof a.qY,(()=>"The x passed in valueAndGrad(f)(x) must be a tensor")),o.vA(null==n||n instanceof a.qY,(()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor"));const{grads:s,value:i}=r.T2.gradients((()=>e(t)),[t],n);return h(s),{grad:s[0],value:i}}}function c(e){return o.vA(o.Tn(e),(()=>"The f passed in valueAndGrads(f) must be a function")),(t,n)=>{o.vA(Array.isArray(t)&&t.every((e=>e instanceof a.qY)),(()=>"The args passed in valueAndGrads(f)(args) must be array of tensors")),o.vA(null==n||n instanceof a.qY,(()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor"));const s=r.T2.gradients((()=>e(...t)),t,n);return null!=n&&o.O3(s.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),h(s.grads),s}}function d(e,t){o.vA(o.Tn(e),(()=>"The f passed in variableGrads(f) must be a function")),o.vA(null==t||Array.isArray(t)&&t.every((e=>e instanceof a.rT)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in r.T2.registeredVariables)t.push(r.T2.registeredVariables[e])}const s=n?t.filter((e=>!e.trainable)):null,i=t.length;t=t.filter((e=>e.trainable)),o.vA(t.length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${i} variables is trainable.`));const{value:l,grads:u}=r.T2.gradients(e,t,null,!0);o.vA(u.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),o.vA(0===l.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${l.rank} tensor`));const c={};return t.forEach(((e,t)=>{null!=u[t]&&(c[e.name]=u[t])})),null!=s&&s.forEach((e=>c[e.name]=null)),{value:l,grads:c}}function p(e){return r.T2.customGrad(e)}function h(e){if(e.filter((e=>null==e)).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}},1908:(e,t,n)=>{"use strict";n.d(t,{U:()=>s});var r=n(5743),a=n(3075);function s(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"float32";if("complex64"===n){const n=s(e,t,"float32"),r=s(e,t,"float32");return(0,a.f)({inputs:{real:n,imag:r},backend:e})}const o=r.util.makeZerosTypedArray(r.util.sizeFromShape(t),n);return e.makeTensorInfo(t,n,o)}},1997:(e,t,n)=>{"use strict";n.d(t,{d:()=>s});var r=n(8977),a=n(9914);function s(e,t){if(((0,r.isTypedArray)(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&(0,r.isTypedArray)(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return(0,a.Q)(e,[],[],t)}},2022:(e,t,n)=>{"use strict";n.d(t,{W:()=>o});var r=n(2164),a=n(9554),s=n(4148);const o=(0,n(7892).op)({selu_:function(e){const t={x:(0,s.YT)(e,"x","selu")};return r.T2.runKernel(a.u$b,t)}})},2131:(e,t,n)=>{"use strict";n.d(t,{P:()=>u});var r=n(2164),a=n(9554),s=n(8804),o=n(4148),i=n(8805),l=n(7794);const u=(0,n(7892).op)({maximum_:function(e,t){let n=(0,o.YT)(e,"a","maximum"),u=(0,o.YT)(t,"b","maximum");[n,u]=(0,s.makeTypesMatch)(n,u),"bool"===n.dtype&&(n=(0,l.w)(n,"int32"),u=(0,l.w)(u,"int32")),(0,i.assertAndGetBroadcastShape)(n.shape,u.shape);const c={a:n,b:u};return r.T2.runKernel(a.LDN,c)}})},2137:(e,t,n)=>{"use strict";n.d(t,{_:()=>a});var r=n(5743);function a(e,t,n,a,s){const o=t.length,i=r.util.sizeFromShape(t),l=r.util.computeStrides(t),u=r.util.computeStrides(s),c=r.util.getTypedArrayFromDType(n,r.util.sizeFromShape(s));for(let d=0;d<i;++d){const t=r.util.indexToLoc(d,o,l),n=new Array(t.length);for(let e=0;e<n.length;e++)n[e]=t[a[e]];c[r.util.locToIndex(n,o,u)]=e[d]}return c}},2154:(e,t,n)=>{"use strict";n.d(t,{m:()=>h});var r=n(2164),a=n(8046),s=n(9554),o=n(4148),i=n(1426),l=n(6149),u=n(1047),c=n(1011),d=n(7892),p=n(9477);const h=(0,d.op)({transpose_:function(e,t,n){const d=(0,o.YT)(e,"x","transpose");if(null==t&&(t=d.shape.map(((e,t)=>t)).reverse()),i.vA(d.rank===t.length,(()=>`Error in transpose: rank of input ${d.rank} must match length of perm ${t}.`)),t.forEach((e=>{i.vA(e>=0&&e<d.rank,(()=>"All entries in 'perm' must be between 0 and "+(d.rank-1)+` but got ${t}`))})),d.rank<=1)return d.clone();const h={x:d},f={perm:t};return"complex64"===d.dtype?(0,a.DZ)((()=>{let e=(0,p.x)(d),t=(0,u.n)(d);return e=r.T2.runKernel(s.wx0,{x:e},f),t=r.T2.runKernel(s.wx0,{x:t},f),n&&(t=(0,c.H)(t)),(0,l.f)(e,t)})):r.T2.runKernel(s.wx0,h,f)}})},2155:(e,t,n)=>{"use strict";n.d(t,{x:()=>y});var r=n(4148),a=n(1426),s=n(3753),o=n(9235),i=n(891),l=n(1465),u=n(7892),c=n(7587),d=n(5583),p=n(1997),h=n(191),f=n(7738),m=n(7382);function g(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;if(0===e.rank)return(0,s.t)(e);if(1!==e.rank&&null===n)return g((0,d.t)(e,[-1]),t,n);if(1===e.rank||"number"===typeof n||Array.isArray(n)&&1===n.length){if(1===t)return(0,m.c)((0,s.t)(e),n);if(t===1/0)return(0,i.T)((0,s.t)(e),n);if(t===-1/0)return(0,l.j)((0,s.t)(e),n);if("euclidean"===t||2===t)return(0,h.R)((0,m.c)((0,c.n)((0,s.t)(e),(0,p.d)(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return(0,i.T)((0,m.c)((0,s.t)(e),n[0]),n[1]-1);if(t===1/0)return(0,i.T)((0,m.c)((0,s.t)(e),n[1]),n[0]);if(t===-1/0)return(0,l.j)((0,m.c)((0,s.t)(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return(0,h.R)((0,m.c)((0,f.E)(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const y=(0,u.op)({norm_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"euclidean",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,s=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const i=g(e=(0,r.YT)(e,"x","norm"),t,n);let l=i.shape;if(s){const t=(0,a.Y6)(n,e.shape);l=o.SM(i.shape,t)}return(0,d.t)(i,l)}})},2164:(e,t,n)=>{"use strict";n.d(t,{T2:()=>x,Ye:()=>v});var r=n(6790),a=n(5399),s=n(7926),o=n(9554),i=n(843),l=n(4124),u=n(8977),c=n(1426);class d{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new h)}profileKernel(e,t,n){let r;const s=()=>{r=n()};let o;const i=u.now();if(this.backendTimer.timerAvailable())o=this.backendTimer.time(s);else{s();for(const e of r)e.dataSync();o=Promise.resolve({kernelMs:u.now()-i})}if((0,a._K)().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let a=0;a<r.length;a++){const t=r[a];t.data().then((n=>{p(n,t.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:o.then((e=>e.kernelMs)),extraInfo:o.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:a,extraInfo:s}=e;n.forEach((e=>{Promise.all([e.data(),r,s]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],a,n[2])}))}))}}function p(e,t,n){if("float32"!==t)return!1;for(let r=0;r<e.length;r++){const t=e[r];if(isNaN(t)||!isFinite(t))return console.warn(`Found ${t} in the result of '${n}'`),!0}return!1}class h{logKernelProfile(e,t,n,r,a,s){const o="number"===typeof r?c.av(`${r}ms`,9):r.error,i=c.av(e,25),l=t.rank,u=t.size,d=c.av(t.shape.toString(),14);let p="";for(const c in a){const e=a[c];if(null!=e){const n=e.shape||t.shape,r=n.length;p+=`${c}: ${r}D ${r>0?n:""} `}}console.log(`%c${i}\t%c${o}\t%c${l}D ${d}\t%c${u}\t%c${p}\t%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}var f=n(9494),m=n(8804);function g(e){return null!=e.kernelName}class y{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class b{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new y}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return e in this.registryFactory?(l.i(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new d(this.backendInstance),!0}setupRegisteredKernels(){(0,i.Op)(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){(0,i.Op)(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof r.uI||"function"!==typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,l.i(`Initialization of backend ${e} failed`),l.i(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(n){return l.i(`Initialization of backend ${e} failed`),l.i(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:a}=this.initializeBackend(n);if(a||r)return{name:n,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,a=this.readSync(t),s=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,a,n.shape,n.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!==typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!==typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!==typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(r){throw t(),r}}nextTensorId(){return b.nextTensorId++}nextVariableId(){return b.nextVariableId++}clone(e){const t=x.runKernel(o.lzr,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e},n={dtype:"float32"};return x.runKernel(o.KXH,t,n)}})),[],{}),t}runKernel(e,t,n){null==this.backendName&&this.backend;if(!(null!=(0,i._5)(e,this.backendName)))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let a=0;n.forEach((e=>{a+="complex64"===e.dtype?3:1}));const s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],o=r-t-a-s;if(o>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${o} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),a=this.state.numBytes,s=this.state.numTensors;let o,l;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const u=g(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(g(e)){const{kernelName:t,inputs:a,attrs:s}=e;null==this.backendName&&this.backend;const u=(0,i._5)(t,this.backendName);c.vA(null!=u,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),o=()=>{const e=this.backend.numDataIds();l=u.kernelFunc({inputs:a,attrs:s,backend:this.backend});const o=Array.isArray(l)?l:[l];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,o);const i=o.map((e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e)));if(r){const e=this.getTensorsForGradient(t,a,i);n=this.saveTensorsForBackwardMode(e)}return i}}else{const{forwardFunc:t}=e,a=e=>{r&&(n=e.map((e=>this.keep(this.clone(e)))))};o=()=>{const e=this.backend.numDataIds();l=this.tidy((()=>t(this.backend,a)));const n=Array.isArray(l)?l:[l];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,e,n),n}}const{inputs:d,attrs:p}=e,h=g(e)?null:e.backwardsFunc;let f;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(f=this.profiler.profileKernel(u,d,(()=>o())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(f),t=f.outputs):t=o()})),r&&this.addTapeNode(u,d,t,h,n,p),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-a,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-s,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(d).map((e=>null!=d[e]?d[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:f.timeMs,extraInfo:f.extraInfo}),Array.isArray(l)?t:t[0]}saveTensorsForBackwardMode(e){const t=e.map((e=>this.keep(this.clone(e))));return t}getTensorsForGradient(e,t,n){const r=(0,i.vQ)(e);if(null!=r){const e=r.inputsToSave||[],a=r.outputsToSave||[];let s;r.saveAllInputs?(c.vA(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),s=Object.keys(t).map((e=>t[e]))):s=e.map((e=>t[e]));const o=n.filter(((e,t)=>a[t]));return s.concat(o)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let a=e;"string"===n&&c.Kg(e[0])&&(a=e.map((e=>u.encodeString(e))));const s=r.write(a,t,n),o=new f.qY(t,n,s,this.nextTensorId());if(this.trackTensor(o,r),"string"===n){const e=this.state.tensorInfo.get(s),t=(0,c.SL)(a);this.state.numBytes+=t-e.bytes,e.bytes=t}return o}makeTensorFromDataId(e,t,n,r){const a={dataId:e,shape:t,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(a,r)}makeTensorFromTensorInfo(e,t){const{dataId:n,shape:r,dtype:a}=e,s=new f.qY(r,a,n,this.nextTensorId());return this.trackTensor(s,t),s}makeVariable(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0;n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const a=new f.rT(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*c.jv(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof f.rT||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*c.jv(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const r of this.state.activeProfile.kernels)r.kernelTimeMs=await r.kernelTimeMs,r.extraInfo=await r.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,a,s){const o={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:a},l=(0,i.vQ)(e);null!=l&&(r=l.gradFunc),null!=r&&(o.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],r=c.Ty(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],a,s))),this.state.activeTape.push(o)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=(0,m.getTensorsInContainer)(e),n=new Set(t.map((e=>e.id)));for(let a=0;a<this.state.activeScope.track.length;a++){const e=this.state.activeScope.track[a];e.kept||n.has(e.id)||e.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==r.id||this.track(e)}))}gradients(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(c.vA(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const a=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));c.vA(a instanceof f.qY,(()=>"The result y returned by f() must be a tensor."));const s=function(e,t,n){const r={},a={};for(let l=0;l<t.length;l++)r[t[l].id]=!0;for(let l=0;l<e.length;l++){const n=e[l],s=n.inputs;for(const e in s){const o=s[e];let i=!1;for(let e=0;e<t.length;e++)if(r[o.id]){n.outputs.forEach((e=>r[e.id]=!0)),i=!0,a[n.id]=!0;break}if(i)break}}const s={};s[n.id]=!0;const o={};for(let l=e.length-1;l>=0;l--){const t=e[l],n=t.inputs;for(let e=0;e<t.outputs.length;e++)if(s[t.outputs[e].id]){for(const e in n)s[n[e].id]=!0,o[t.id]=!0;break}}const i=[];for(let l=0;l<e.length;l++){const t=e[l];if(a[t.id]&&o[t.id]){const e={};for(const a in t.inputs){const n=t.inputs[a];r[n.id]&&(e[a]=n)}const n=Object.assign({},t);n.inputs=e,n.outputs=t.outputs,i.push(n)}}return i}(this.state.activeTape,t,a);if(!r&&0===s.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[a.id]=null==n?function(e){const t=(0,c.FZ)((0,c.Ze)(e),"float32");return x.makeTensor(t,e,"float32")}(a.shape):n,function(e,t,n,r){for(let a=t.length-1;a>=0;a--){const s=t[a],o=[];if(s.outputs.forEach((t=>{const n=e[t.id];null!=n?o.push(n):o.push(null)})),null==s.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);const i=s.gradient(o);for(const t in s.inputs){if(!(t in i))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(i)}.`);const a=n((()=>i[t]()));if("float32"!==a.dtype)throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${a.dtype}'`);const o=s.inputs[t];if(!c.r1(a.shape,o.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${t}' has shape '${a.shape}', which does not match the shape of the input '${o.shape}'`);if(null==e[o.id])e[o.id]=a;else{const t=e[o.id];e[o.id]=r(t,a),t.dispose()}}}}(e,s,(e=>this.tidy(e)),k);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:a,grads:r}}))}customGrad(e){var t=this;return c.vA(c.Tn(e),(()=>"The f passed in customGrad(f) must be a function.")),function(){for(var n=arguments.length,r=new Array(n),a=0;a<n;a++)r[a]=arguments[a];let s;c.vA(r.every((e=>e instanceof f.qY)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const o={};r.forEach(((e,t)=>{o[t]=e}));return t.runKernelFunc({forwardFunc:(t,n)=>(s=e(...r,n),c.vA(s.value instanceof f.qY,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),c.vA(c.Tn(s.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),s.value),backwardsFunc:(e,t)=>{const n=s.gradFunc(e,t),a=Array.isArray(n)?n:[n];c.vA(a.length===r.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),c.vA(a.every((e=>e instanceof f.qY)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const o={};return a.forEach(((e,t)=>{o[t]=()=>e})),o},inputs:o})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=(0,u.now)(),n=await this.backend.time(e);return n.wallMs=(0,u.now)()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new y;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function v(){const e=(0,s.L)();if(null==e._tfengine){const t=new a.OH(e);e._tfengine=new b(t)}return(0,a.tj)(e._tfengine.ENV),(0,f.qP)((()=>e._tfengine)),e._tfengine}b.nextTensorId=0,b.nextVariableId=0;const x=v();function k(e,t){const n={a:e,b:t};return x.runKernel(o.OMN,n)}},2175:(e,t,n)=>{"use strict";n.d(t,{V:()=>f});var r=n(4148),a=n(1426),s=n(7242),o=n(9235),i=n(5462),l=n(5911),u=n(891),c=n(7892),d=n(5583),p=n(7951),h=n(7382);const f=(0,c.op)({logSumExp_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const c=(0,r.YT)(e,"x","logSumExp"),f=(0,a.Y6)(t,c.shape),m=(0,u.T)(c,f,!0),g=(0,p.j)(c,m),y=(0,i.o)(g),b=(0,h.c)(y,f),v=(0,l.R)(b),x=(0,s.W)((0,d.t)(m,v.shape),v);if(n){const e=(0,o.SM)(x.shape,f);return(0,d.t)(x,e)}return x}})},2214:(e,t,n)=>{"use strict";n.d(t,{v:()=>u});var r=n(2164),a=n(9554),s=n(4148),o=n(1426),i=n(7892),l=n(5583);const u=(0,i.op)({resizeBilinear_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const u=(0,s.YT)(e,"images","resizeBilinear");o.vA(3===u.rank||4===u.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${u.rank}.`)),o.vA(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),o.vA(!1===i||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let c=u,d=!1;3===u.rank&&(d=!0,c=(0,l.t)(u,[1,u.shape[0],u.shape[1],u.shape[2]]));const[]=t,p={images:c},h={alignCorners:n,halfPixelCenters:i,size:t},f=r.T2.runKernel(a.hgw,p,h);return d?(0,l.t)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},2312:(e,t,n)=>{"use strict";n.d(t,{Z:()=>a});var r=n(5743);function a(e){return(t,n,a,s,o)=>{const i=r.backend_util.assertAndGetBroadcastShape(t,n),l=i.length,u=r.util.computeStrides(i),c=r.util.sizeFromShape(i),d=r.util.getTypedArrayFromDType(o,c),p=t.length,h=n.length,f=r.util.computeStrides(t),m=r.util.computeStrides(n),g=r.backend_util.getBroadcastDims(t,i),y=r.backend_util.getBroadcastDims(n,i);if(g.length+y.length===0)for(let r=0;r<d.length;++r)d[r]=e(a[r%a.length],s[r%s.length]);else for(let b=0;b<d.length;++b){const t=r.util.indexToLoc(b,l,u),n=t.slice(-p);g.forEach((e=>n[e]=0));const o=r.util.locToIndex(n,p,f),i=t.slice(-h);y.forEach((e=>i[e]=0));const c=r.util.locToIndex(i,h,m);d[b]=e(a[o],s[c])}return[d,i]}}},2412:(e,t,n)=>{"use strict";n.d(t,{N:()=>s,X:()=>a});var r=n(5743);function a(e,t,n,a,s){const o=r.util.sizeFromShape(a),i=r.util.makeZerosTypedArray(s,n);for(let r=0;r<e.length;r++){const n=e[r];if(n<0)throw new Error("Input x must be non-negative!");n>=s||(i[n]+=o>0?t[r]:1)}return i}function s(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const s=e.shape[0],o=e.shape[1],i=(0,r.buffer)([s,n],t.dtype);for(let r=0;r<s;r++)for(let s=0;s<o;s++){const o=e.get(r,s);if(o<0)throw new Error("Input x must be non-negative!");o>=n||(a?i.set(1,r,o):t.size>0?i.set(i.get(r,o)+t.get(r,s),r,o):i.set(i.get(r,o)+1,r,o))}return i}},2430:function(e,t,n){var r;!function(a,s,o){var i,l=256,u=o.pow(l,6),c=o.pow(2,52),d=2*c,p=255;function h(e,t,n){var r=[],p=y(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,b(s)]:null==e?function(){try{var e;return i&&(e=i.randomBytes)?e=e(l):(e=new Uint8Array(l),(a.crypto||a.msCrypto).getRandomValues(e)),b(e)}catch(r){var t=a.navigator,n=t&&t.plugins;return[+new Date,a,n,a.screen,b(s)]}}():e,3),r),h=new f(r),v=function(){for(var e=h.g(6),t=u,n=0;e<c;)e=(e+n)*l,t*=l,n=h.g(1);for(;e>=d;)e/=2,t/=2,n>>>=1;return(e+n)/t};return v.int32=function(){return 0|h.g(4)},v.quick=function(){return h.g(4)/4294967296},v.double=v,y(b(h.S),s),(t.pass||n||function(e,t,n,r){return r&&(r.S&&m(r,h),e.state=function(){return m(h,{})}),n?(o.random=e,t):e})(v,p,"global"in t?t.global:this==o,t.state)}function f(e){var t,n=e.length,r=this,a=0,s=r.i=r.j=0,o=r.S=[];for(n||(e=[n++]);a<l;)o[a]=a++;for(a=0;a<l;a++)o[a]=o[s=p&s+e[a%n]+(t=o[a])],o[s]=t;(r.g=function(e){for(var t,n=0,a=r.i,s=r.j,o=r.S;e--;)t=o[a=p&a+1],n=n*l+o[p&(o[a]=o[s=p&s+t])+(o[s]=t)];return r.i=a,r.j=s,n})(l)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,r=[],a=typeof e;if(t&&"object"==a)for(n in e)try{r.push(g(e[n],t-1))}catch(s){}return r.length?r:"string"==a?e:e+"\0"}function y(e,t){for(var n,r=e+"",a=0;a<r.length;)t[p&a]=p&(n^=19*t[p&a])+r.charCodeAt(a++);return b(t)}function b(e){return String.fromCharCode.apply(0,e)}if(y(o.random(),s),e.exports){e.exports=h;try{i=n(1234)}catch(v){}}else void 0===(r=function(){return h}.call(t,n,t,e))||(e.exports=r)}("undefined"!==typeof self?self:this,[],Math)},2491:(e,t,n)=>{"use strict";n.d(t,{Nu:()=>l,hE:()=>o});var r=n(5743),a=n(2312),s=n(5101);const o=(0,a.Z)(((e,t)=>Math.min(e,t))),i=(0,s.j)(r.Minimum,o),l={kernelName:r.Minimum,backendName:"cpu",kernelFunc:i}},2511:(e,t,n)=>{"use strict";n.d(t,{X3:()=>l,ry:()=>i,zv:()=>o});var r=n(5743),a=n(4084),s=n(4729);const o=(0,a.o)((e=>1/(1+Math.exp(-e)))),i=(0,s.v)(r.Sigmoid,(e=>1/(1+Math.exp(-e)))),l={kernelName:r.Sigmoid,backendName:"cpu",kernelFunc:i}},2520:(e,t,n)=>{"use strict";n.d(t,{I:()=>o});var r=n(2164),a=n(9554),s=n(4148);const o=(0,n(7892).op)({expm1_:function(e){const t={x:(0,s.YT)(e,"x","expm1")};return r.T2.runKernel(a.ybj,t)}})},2525:(e,t,n)=>{"use strict";n.d(t,{G:()=>a});var r=n(5743);function a(e,t,n){const a=(0,r.buffer)(n,e.dtype);for(let r=0;r<a.size;++r){const n=a.indexToLoc(r).slice(),s=n[0],o=n[2],i=t.locToIndex([s,o]);n[2]=t.values[i];const l=e.locToIndex(n);0<=l&&l<e.values.length&&(a.values[r]=e.values[l])}return a}},2536:(e,t,n)=>{"use strict";n.d(t,{f:()=>a});var r=n(5743);function a(e,t){const n=r.util.getArrayFromDType("int32",e.length);for(let a=0;a<e.length;++a)n[a]=r.util.fingerPrint64(e[a]).modulo(t).getLowBitsUnsigned();return n}},2557:(e,t,n)=>{"use strict";n.d(t,{G:()=>i});var r=n(2164),a=n(9554),s=n(4148),o=n(1426);const i=(0,n(7892).op)({batchToSpaceND_:function(e,t,n){const i=(0,s.YT)(e,"x","batchToSpaceND"),l=t.reduce(((e,t)=>e*t));o.vA(i.rank>=1+t.length,(()=>`input rank is ${i.rank} but should be > than blockShape.length ${t.length}`)),o.vA(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),o.vA(i.shape[0]%l===0,(()=>`input tensor batch is ${i.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${l}`));const u={x:i},c={blockShape:t,crops:n};return r.T2.runKernel(a.Ik2,u,c)}})},2759:(e,t,n)=>{"use strict";n.d(t,{r:()=>l});var r=n(2164),a=n(9554),s=n(8804),o=n(4148),i=n(8805);const l=(0,n(7892).op)({greater_:function(e,t){let n=(0,o.YT)(e,"a","greater","string_or_numeric"),l=(0,o.YT)(t,"b","greater","string_or_numeric");[n,l]=(0,s.makeTypesMatch)(n,l),(0,i.assertAndGetBroadcastShape)(n.shape,l.shape);const u={a:n,b:l};return r.T2.runKernel(a.XhZ,u)}})},2765:(e,t,n)=>{"use strict";n.d(t,{r:()=>o});var r=n(2164),a=n(9554),s=n(4148);const o=(0,n(7892).op)({topk_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const o=(0,s.YT)(e,"x","topk");if(0===o.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const i=o.shape[o.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>i)throw new Error(`'k' passed to topk() must be <= the last dimension (${i}) but got ${t}`);const l={x:o},u={k:t,sorted:n},[c,d]=r.T2.runKernel(a.TBb,l,u);return{values:c,indices:d}}})},2784:(e,t,n)=>{"use strict";n.d(t,{Q:()=>l,cu:()=>o});var r=n(5743),a=n(2312),s=n(5101);const o=(0,a.Z)(((e,t)=>e<=t?1:0)),i=(0,s.j)(r.LessEqual,o,null,"bool"),l={kernelName:r.LessEqual,backendName:"cpu",kernelFunc:i}},2785:(e,t,n)=>{"use strict";n.d(t,{y:()=>a});var r=n(5743);function a(e,t,n,a,s,o,i){const l=t[0],u=o[0],c=new Array(u),d=new Array(l),p=t[1];if(0===u){if(0!==l)throw new Error(r.backend_util.getSparseFillEmptyRowsIndicesDenseShapeMismatch(l));return[r.util.getArrayFromDType(n,0),[0,p],r.util.getArrayFromDType(s,0),c,d]}let h=!0,f=0;const m=new Array(u).fill(0);for(let y=0;y<l;++y){const t=e[y*p];if(t<0)throw new Error(r.backend_util.getSparseFillEmptyRowsNegativeIndexErrorMessage(y,t));if(t>=u)throw new Error(r.backend_util.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(y,t,u));++m[t],h=h&&t>=f,f=t}let g=!0;for(let r=0;r<u;++r){const e=0===m[r];c[r]=e,g=g&&!e,m[r]=Math.max(m[r],1),r>0&&(m[r]+=m[r-1])}if(g&&h){const t=e,n=a;for(let e=0;e<l;++e)d[e]=e;return[t,[l,p],n,c,d]}{const t=m[u-1],o=r.util.getArrayFromDType(n,t*p),h=r.util.getArrayFromDType(s,t),f=new Array(u).fill(0);for(let n=0;n<l;++n){const t=e[n*p],r=f[t],s=(0===t?0:m[t-1])+r;f[t]++;for(let a=0;a<p;++a)o[s*p+a]=e[n*p+a];h[s]=a[n],d[n]=s}for(let e=0;e<u;++e){if(0===f[e]){const t=0===e?0:m[e-1];o[t*p+0]=e;for(let e=1;e<p;++e)o[t*p+e]=0;h[t]=i}}return[o,[t,p],h,c,d]}}},2799:(e,t)=>{"use strict";var n=Symbol.for("react.transitional.element"),r=Symbol.for("react.fragment");function a(e,t,r){var a=null;if(void 0!==r&&(a=""+r),void 0!==t.key&&(a=""+t.key),"key"in t)for(var s in r={},t)"key"!==s&&(r[s]=t[s]);else r=t;return t=r.ref,{$$typeof:n,type:e,key:a,ref:void 0!==t?t:null,props:r}}t.Fragment=r,t.jsx=a,t.jsxs=a},2823:(e,t,n)=>{"use strict";n.d(t,{b:()=>u});var r=n(2164),a=n(9554),s=n(4148),o=n(1426),i=n(7892),l=n(5583);const u=(0,i.op)({resizeNearestNeighbor_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const u=(0,s.YT)(e,"images","resizeNearestNeighbor");o.vA(3===u.rank||4===u.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${u.rank}.`)),o.vA(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),o.vA("float32"===u.dtype||"int32"===u.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),o.vA(!1===i||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let c=u,d=!1;3===u.rank&&(d=!0,c=(0,l.t)(u,[1,u.shape[0],u.shape[1],u.shape[2]]));const[]=t,p={images:c},h={alignCorners:n,halfPixelCenters:i,size:t},f=r.T2.runKernel(a.jOE,p,h);return d?(0,l.t)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},3010:(e,t,n)=>{"use strict";n.d(t,{q:()=>o});var r=n(2164),a=n(9554),s=n(4148);const o=(0,n(7892).op)({asin_:function(e){const t={x:(0,s.YT)(e,"x","asin")};return r.T2.runKernel(a.QKF,t)}})},3015:(e,t,n)=>{"use strict";n.d(t,{i:()=>o});var r=n(2164),a=n(9554),s=n(4148);const o=(0,n(7892).op)({mean_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const o={x:(0,s.YT)(e,"x","mean")},i={axis:t,keepDims:n};return r.T2.runKernel(a.g5A,o,i)}})},3017:(e,t,n)=>{"use strict";n.d(t,{V:()=>i});var r=n(2164),a=n(9554),s=n(4148),o=n(1426);const i=(0,n(7892).op)({tile_:function(e,t){const n=(0,s.YT)(e,"x","tile","string_or_numeric");o.vA(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const i={x:n},l={reps:t};return r.T2.runKernel(a.FAs,i,l)}})},3062:(e,t,n)=>{"use strict";n.d(t,{h:()=>o});var r=n(2164),a=n(9554),s=n(1426);const o=(0,n(7892).op)({fft_:function(e){(0,s.vA)("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return r.T2.runKernel(a.rGP,t)}})},3068:(e,t,n)=>{"use strict";n.d(t,{F:()=>o});var r=n(2164),a=n(9554),s=n(4148);const o=(0,n(7892).op)({argMax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n={x:(0,s.YT)(e,"x","argMax")},o={axis:t};return r.T2.runKernel(a.Jp_,n,o)}})},3075:(e,t,n)=>{"use strict";function r(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,i=n.makeTensorInfo(r.shape,"complex64");return n.data.get(i.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",s),imag:n.makeTensorInfo(a.shape,"float32",o)},i}n.d(t,{f:()=>r,v:()=>a});const a={kernelName:n(5743).Complex,backendName:"cpu",kernelFunc:r}},3117:(e,t,n)=>{"use strict";n.d(t,{w:()=>u});var r=n(4148),a=n(1426),s=n(4969),o=n(9899),i=n(7892),l=n(5583);const u=(0,i.op)({separableConv2d_:function(e,t,n,i,u){let c=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],d=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"NHWC";const p=(0,r.YT)(e,"x","separableConv2d"),h=(0,r.YT)(t,"depthwiseFilter","separableConv2d"),f=(0,r.YT)(n,"pointwiseFilter","separableConv2d");let m=p,g=!1;if(3===p.rank&&(g=!0,m=(0,l.t)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),"NCHW"===d)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");a.vA(4===m.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${m.rank}.`)),a.vA(4===h.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${h.rank}.`)),a.vA(4===f.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${h.rank}.`)),a.vA(1===f.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${f.shape[0]}.`)),a.vA(1===f.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${f.shape[1]}.`));const y=h.shape[2],b=h.shape[3];a.vA(f.shape[2]===y*b,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${y*b}, but got ${f.shape[2]}.`));const v=(0,o.G)(m,h,i,u,d,c),x=(0,s.X)(v,f,1,"valid",d);return g?(0,l.t)(x,[x.shape[1],x.shape[2],x.shape[3]]):x}})},3143:(e,t,n)=>{"use strict";n.d(t,{C:()=>a});var r=n(5743);function a(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&r.util.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}},3249:(e,t,n)=>{"use strict";n.r(t),n.d(t,{addImpl:()=>a.mx,bincountImpl:()=>s.X,bincountReduceImpl:()=>s.N,bitwiseAndImpl:()=>o.f6,castImpl:()=>i.ct,ceilImpl:()=>l.YG,concatImpl:()=>u.h,equalImpl:()=>c.z3,expImpl:()=>d.sG,expm1Impl:()=>p.uM,floorDivImpl:()=>f.C1,floorImpl:()=>h.vS,gatherNdImpl:()=>m.q,gatherV2Impl:()=>g.G,greaterEqualImpl:()=>b.lg,greaterImpl:()=>y.rq,lessEqualImpl:()=>x.cu,lessImpl:()=>v.WR,linSpaceImpl:()=>k.G,logImpl:()=>w.px,maxImpl:()=>S.j,maximumImpl:()=>T.He,minimumImpl:()=>N.hE,multiplyImpl:()=>I.BF,negImpl:()=>C.Dk,notEqualImpl:()=>E.cl,prodImpl:()=>$._B,raggedGatherImpl:()=>A.u,raggedRangeImpl:()=>_._,raggedTensorToTensorImpl:()=>R.K,rangeImpl:()=>F.q,rsqrtImpl:()=>O.Zy,scatterImpl:()=>D.b,sigmoidImpl:()=>M.zv,simpleAbsImpl:()=>r.dH,sliceImpl:()=>P.HS,sparseFillEmptyRowsImpl:()=>L.y,sparseReshapeImpl:()=>z.l,sparseSegmentReductionImpl:()=>B.z,sqrtImpl:()=>V.x6,squaredDifferenceImpl:()=>W.RF,staticRegexReplaceImpl:()=>U._,stridedSliceImpl:()=>G.e,stringNGramsImpl:()=>j.G,stringSplitImpl:()=>H.S,stringToHashBucketFastImpl:()=>Y.f,subImpl:()=>q.dl,tileImpl:()=>K.D,topKImpl:()=>X.x,transposeImpl:()=>Z._,uniqueImpl:()=>Q.w});var r=n(5903),a=n(9864),s=n(2412),o=n(9475),i=n(668),l=n(4034),u=n(9044),c=n(3439),d=n(4308),p=n(7046),h=n(5361),f=n(9634),m=n(5003),g=n(2525),y=n(1217),b=n(8829),v=n(4861),x=n(2784),k=n(3633),w=n(477),S=n(6238),T=n(8617),N=n(2491),I=n(63),C=n(321),E=n(8440),$=n(1206),A=n(5335),_=n(4417),R=n(8545),F=n(6635),O=n(3555),D=n(526),M=n(2511),P=n(4357),L=n(2785),z=n(706),B=n(3326),V=n(8041),W=n(945),U=n(7844),G=n(3445),j=n(8793),H=n(7185),Y=n(2536),q=n(4413),K=n(8024),X=n(8036),Z=n(2137),Q=n(3705)},3290:(e,t,n)=>{"use strict";n.d(t,{P:()=>o});var r=n(2164),a=n(9554),s=n(4148);const o=(0,n(7892).op)({zerosLike_:function(e){const t={x:(0,s.YT)(e,"x","zerosLike")};return r.T2.runKernel(a.xJ3,t)}})},3326:(e,t,n)=>{"use strict";n.d(t,{z:()=>a});var r=n(5743);function a(e,t,n,a,s){let o=arguments.length>5&&void 0!==arguments[5]&&arguments[5],i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0;const l=a.length,u=[t[0],e.length/t[0]],c=u[1],d=l>0?s[l-1]+1:0;if(d<0)throw new Error(r.backend_util.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());const p=t.slice();p[0]=d;const h=p.reduce(((e,t)=>e*t),1),f=r.util.getArrayFromDType(n,h);if(0===l)return d>0&&f.fill(i),[f,p];if(d<=0)throw new Error(r.backend_util.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let m=0,g=1,y=0,b=s[m];for(;;){let t=0;if(g<l){if(t=s[g],b===t){++g;continue}if(b>=t)throw new Error(r.backend_util.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(b<0||b>=d)throw new Error(r.backend_util.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(b,d));b>y&&f.fill(i,y*c,b*c);for(let n=m;n<g;++n){const t=a[n];if(t<0||t>=u[0])throw new Error(r.backend_util.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(n,a[n],u[0]));for(let n=0;n<c;n++)f[b*c+n]+=e[t*c+n]}if(o)for(let e=0;e<c;e++)f[b*c+e]/=g-m;if(m=g,++g,y=b+1,b=t,g>l)break}return y<d&&f.fill(i,y*c,d*c),[f,p]}},3439:(e,t,n)=>{"use strict";n.d(t,{LC:()=>i,RY:()=>l,z3:()=>o});var r=n(5743),a=n(2312),s=n(5101);const o=(0,a.Z)(((e,t)=>e===t?1:0)),i=(0,s.j)(r.Equal,o,null,"bool"),l={kernelName:r.Equal,backendName:"cpu",kernelFunc:i}},3445:(e,t,n)=>{"use strict";n.d(t,{e:()=>a});var r=n(5743);function a(e,t,n,a){const s=(0,r.buffer)(e,t.dtype);for(let r=0;r<s.size;r++){const e=s.indexToLoc(r),o=new Array(e.length);for(let t=0;t<o.length;t++)o[t]=e[t]*n[t]+a[t];s.set(t.get(...o),...e)}return s}},3467:(e,t,n)=>{"use strict";n.d(t,{y:()=>o});var r=n(2164),a=n(9554),s=n(4148);const o=(0,n(7892).op)({isNaN_:function(e){const t={x:(0,s.YT)(e,"x","isNaN")};return r.T2.runKernel(a.iPs,t)}})},3555:(e,t,n)=>{"use strict";n.d(t,{Lt:()=>l,Zy:()=>o});var r=n(5743),a=n(4084),s=n(4729);const o=(0,a.o)((e=>1/Math.sqrt(e))),i=(0,s.F)(r.Rsqrt,o),l={kernelName:r.Rsqrt,backendName:"cpu",kernelFunc:i}},3585:(e,t,n)=>{"use strict";n.d(t,{e:()=>i});var r=n(2164),a=n(9554),s=n(4148),o=n(1426);const i=(0,n(7892).op)({spaceToBatchND_:function(e,t,n){const i=(0,s.YT)(e,"x","spaceToBatchND");o.vA(i.rank>=1+t.length,(()=>`input rank ${i.rank} should be > than [blockShape] ${t.length}`)),o.vA(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),o.vA(i.shape.reduce(((e,r,a)=>a>0&&a<=t.length?e&&(r+n[a-1][0]+n[a-1][1])%t[a-1]===0:e),!0),(()=>`input spatial dimensions ${i.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const l={x:i},u={blockShape:t,paddings:n};return r.T2.runKernel(a.A8B,l,u)}})},3612:(e,t,n)=>{"use strict";n.d(t,{w:()=>i});var r=n(2164),a=n(9554),s=n(8804),o=n(4148);const i=(0,n(7892).op)({floorDiv_:function(e,t){let n=(0,o.YT)(e,"a","floorDiv"),i=(0,o.YT)(t,"b","floorDiv");[n,i]=(0,s.makeTypesMatch)(n,i);const l={a:n,b:i};return r.T2.runKernel(a.ElG,l)}})},3617:(e,t,n)=>{"use strict";n.d(t,{z:()=>i});var r=n(2164),a=n(9554),s=n(8804),o=n(4148);const i=(0,n(7892).op)({mod_:function(e,t){let n=(0,o.YT)(e,"a","mod"),i=(0,o.YT)(t,"b","mod");[n,i]=(0,s.makeTypesMatch)(n,i);const l={a:n,b:i};return r.T2.runKernel(a.BLA,l)}})},3633:(e,t,n)=>{"use strict";n.d(t,{G:()=>a});var r=n(5743);function a(e,t,n){const a=(t-e)/(n-1),s=r.util.makeZerosTypedArray(n,"float32");s[0]=e;for(let r=1;r<s.length;r++)s[r]=s[r-1]+a;return s}},3645:(e,t,n)=>{"use strict";n.d(t,{P:()=>o});var r=n(2164),a=n(9554),s=n(4148);const o=(0,n(7892).op)({elu_:function(e){const t={x:(0,s.YT)(e,"x","elu","float32")};return r.T2.runKernel(a.Pah,t)}})},3701:(e,t,n)=>{"use strict";function r(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}n.d(t,{D:()=>r,F:()=>a});const a={kernelName:n(5743).Identity,backendName:"cpu",kernelFunc:r}},3705:(e,t,n)=>{"use strict";n.d(t,{w:()=>a});var r=n(5743);function a(e,t,n,a){const s=r.util.parseAxisParam(t,n)[0],o=[1,n[0],1];for(let r=0;r<s;r++)o[0]*=n[r];o[1]=n[s];for(let r=s+1;r<n.length;r++)o[2]*=n[r];const i=new Map,l=new Int32Array(n[s]),u=new r.TensorBuffer(o,a,e),c=[],d=1===o[0]&&1===o[2];for(let r=0;r<n[s];r++){let t;if(d)t=e[r].toString();else{const e=[];for(let t=0;t<o[0];t++)for(let n=0;n<o[2];n++)e.push(u.get(t,r,n));t=e.join(",")}const n=i.get(t);if(null!=n)l[r]=n;else{const e=i.size;i.set(t,e),l[r]=e,c.push(r)}}const p=o.slice();p[1]=i.size;const h=new r.TensorBuffer(p,a);c.forEach(((e,t)=>{for(let n=0;n<o[0];n++)for(let r=0;r<o[2];r++)h.set(u.get(n,e,r),n,t,r)}));const f=n.slice();return f[s]=p[1],{outputValues:h.values,outputShape:f,indices:l}}},3708:(e,t,n)=>{"use strict";n.d(t,{r:()=>l});var r=n(4148),a=n(8805),s=n(5692),o=n(5344),i=n(7920);const l=(0,n(7892).op)({logicalXor_:function(e,t){const n=(0,r.YT)(e,"a","logicalXor","bool"),l=(0,r.YT)(t,"b","logicalXor","bool");return(0,a.assertAndGetBroadcastShape)(n.shape,l.shape),(0,s.n)((0,i.z)(e,t),(0,o.N)((0,s.n)(e,t)))}})},3739:(e,t,n)=>{"use strict";n.d(t,{L:()=>o});var r=n(2164),a=n(9554),s=n(4148);const o=(0,n(7892).op)({cumprod_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],o=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const i={x:(0,s.YT)(e,"x","cumprod")},l={axis:t,exclusive:n,reverse:o};return r.T2.runKernel(a.jj_,i,l)}})},3753:(e,t,n)=>{"use strict";n.d(t,{t:()=>o});var r=n(2164),a=n(9554),s=n(4148);const o=(0,n(7892).op)({abs_:function(e){const t=(0,s.YT)(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return r.T2.runKernel(a.$zE,e)}{const e={x:t};return r.T2.runKernel(a.ljI,e)}}})},3765:(e,t,n)=>{"use strict";n.d(t,{X:()=>a,j:()=>r});const r=1.7580993408473768,a=1.0507009873554805},3789:(e,t,n)=>{"use strict";n.d(t,{X:()=>u});var r=n(2164),a=n(9554),s=n(4148),o=n(1426),i=n(7892),l=n(5583);const u=(0,i.op)({dilation2d_:function(e,t,n,i){let u=arguments.length>4&&void 0!==arguments[4]?arguments[4]:[1,1],c=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC";const d=(0,s.YT)(e,"x","dilation2d"),p=(0,s.YT)(t,"filter","dilation2d");o.vA(3===d.rank||4===d.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${d.rank}.`)),o.vA(3===p.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${p.rank}.`)),o.vA("NHWC"===c,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${c}`));let h=d,f=!1;3===d.rank&&(h=(0,l.t)(d,[1,d.shape[0],d.shape[1],d.shape[2]]),f=!0),o.vA(h.shape[3]===p.shape[2],(()=>`Error in dilation2d:  input and filter must have the same depth: ${h.shape[3]} vs ${p.shape[2]}`));const m={x:h,filter:p},g={strides:n,pad:i,dilations:u},y=r.T2.runKernel(a.jxD,m,g);return f?(0,l.t)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}})},3829:(e,t,n)=>{"use strict";n.d(t,{z:()=>l});var r=n(2164),a=n(9554),s=n(4148),o=n(1426),i=n(4660);const l=(0,n(7892).op)({clipByValue_:function(e,t,n){const l=(0,s.YT)(e,"x","clipByValue");if(o.vA(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`)),t===n)return(0,i.G)(l.shape,t,l.dtype);const u={x:l},c={clipValueMin:t,clipValueMax:n};return r.T2.runKernel(a.vaV,u,c)}})},3915:function(e,t,n){!function(e,t,n){"use strict";const r={1:{name:"/m/01g317",id:1,displayName:"person"},2:{name:"/m/0199g",id:2,displayName:"bicycle"},3:{name:"/m/0k4j",id:3,displayName:"car"},4:{name:"/m/04_sv",id:4,displayName:"motorcycle"},5:{name:"/m/05czz6l",id:5,displayName:"airplane"},6:{name:"/m/01bjv",id:6,displayName:"bus"},7:{name:"/m/07jdr",id:7,displayName:"train"},8:{name:"/m/07r04",id:8,displayName:"truck"},9:{name:"/m/019jd",id:9,displayName:"boat"},10:{name:"/m/015qff",id:10,displayName:"traffic light"},11:{name:"/m/01pns0",id:11,displayName:"fire hydrant"},13:{name:"/m/02pv19",id:13,displayName:"stop sign"},14:{name:"/m/015qbp",id:14,displayName:"parking meter"},15:{name:"/m/0cvnqh",id:15,displayName:"bench"},16:{name:"/m/015p6",id:16,displayName:"bird"},17:{name:"/m/01yrx",id:17,displayName:"cat"},18:{name:"/m/0bt9lr",id:18,displayName:"dog"},19:{name:"/m/03k3r",id:19,displayName:"horse"},20:{name:"/m/07bgp",id:20,displayName:"sheep"},21:{name:"/m/01xq0k1",id:21,displayName:"cow"},22:{name:"/m/0bwd_0j",id:22,displayName:"elephant"},23:{name:"/m/01dws",id:23,displayName:"bear"},24:{name:"/m/0898b",id:24,displayName:"zebra"},25:{name:"/m/03bk1",id:25,displayName:"giraffe"},27:{name:"/m/01940j",id:27,displayName:"backpack"},28:{name:"/m/0hnnb",id:28,displayName:"umbrella"},31:{name:"/m/080hkjn",id:31,displayName:"handbag"},32:{name:"/m/01rkbr",id:32,displayName:"tie"},33:{name:"/m/01s55n",id:33,displayName:"suitcase"},34:{name:"/m/02wmf",id:34,displayName:"frisbee"},35:{name:"/m/071p9",id:35,displayName:"skis"},36:{name:"/m/06__v",id:36,displayName:"snowboard"},37:{name:"/m/018xm",id:37,displayName:"sports ball"},38:{name:"/m/02zt3",id:38,displayName:"kite"},39:{name:"/m/03g8mr",id:39,displayName:"baseball bat"},40:{name:"/m/03grzl",id:40,displayName:"baseball glove"},41:{name:"/m/06_fw",id:41,displayName:"skateboard"},42:{name:"/m/019w40",id:42,displayName:"surfboard"},43:{name:"/m/0dv9c",id:43,displayName:"tennis racket"},44:{name:"/m/04dr76w",id:44,displayName:"bottle"},46:{name:"/m/09tvcd",id:46,displayName:"wine glass"},47:{name:"/m/08gqpm",id:47,displayName:"cup"},48:{name:"/m/0dt3t",id:48,displayName:"fork"},49:{name:"/m/04ctx",id:49,displayName:"knife"},50:{name:"/m/0cmx8",id:50,displayName:"spoon"},51:{name:"/m/04kkgm",id:51,displayName:"bowl"},52:{name:"/m/09qck",id:52,displayName:"banana"},53:{name:"/m/014j1m",id:53,displayName:"apple"},54:{name:"/m/0l515",id:54,displayName:"sandwich"},55:{name:"/m/0cyhj_",id:55,displayName:"orange"},56:{name:"/m/0hkxq",id:56,displayName:"broccoli"},57:{name:"/m/0fj52s",id:57,displayName:"carrot"},58:{name:"/m/01b9xk",id:58,displayName:"hot dog"},59:{name:"/m/0663v",id:59,displayName:"pizza"},60:{name:"/m/0jy4k",id:60,displayName:"donut"},61:{name:"/m/0fszt",id:61,displayName:"cake"},62:{name:"/m/01mzpv",id:62,displayName:"chair"},63:{name:"/m/02crq1",id:63,displayName:"couch"},64:{name:"/m/03fp41",id:64,displayName:"potted plant"},65:{name:"/m/03ssj5",id:65,displayName:"bed"},67:{name:"/m/04bcr3",id:67,displayName:"dining table"},70:{name:"/m/09g1w",id:70,displayName:"toilet"},72:{name:"/m/07c52",id:72,displayName:"tv"},73:{name:"/m/01c648",id:73,displayName:"laptop"},74:{name:"/m/020lf",id:74,displayName:"mouse"},75:{name:"/m/0qjjc",id:75,displayName:"remote"},76:{name:"/m/01m2v",id:76,displayName:"keyboard"},77:{name:"/m/050k8",id:77,displayName:"cell phone"},78:{name:"/m/0fx9l",id:78,displayName:"microwave"},79:{name:"/m/029bxz",id:79,displayName:"oven"},80:{name:"/m/01k6s3",id:80,displayName:"toaster"},81:{name:"/m/0130jx",id:81,displayName:"sink"},82:{name:"/m/040b_t",id:82,displayName:"refrigerator"},84:{name:"/m/0bt_c3",id:84,displayName:"book"},85:{name:"/m/01x3z",id:85,displayName:"clock"},86:{name:"/m/02s195",id:86,displayName:"vase"},87:{name:"/m/01lsmm",id:87,displayName:"scissors"},88:{name:"/m/0kmg4",id:88,displayName:"teddy bear"},89:{name:"/m/03wvsk",id:89,displayName:"hair drier"},90:{name:"/m/012xff",id:90,displayName:"toothbrush"}};class a{constructor(e,t){this.modelPath=t||`https://storage.googleapis.com/tfjs-models/savedmodel/${this.getPrefix(e)}/model.json`}getPrefix(e){return"lite_mobilenet_v2"===e?`ssd${e}`:`ssd_${e}`}async load(){this.model=await t.loadGraphModel(this.modelPath);const e=n.zeros([1,300,300,3],"int32"),r=await this.model.executeAsync(e);await Promise.all(r.map((e=>e.data()))),r.map((e=>e.dispose())),e.dispose()}async infer(e,t,r){const a=n.tidy((()=>(e instanceof n.Tensor||(e=n.browser.fromPixels(e)),n.expandDims(e)))),s=a.shape[1],o=a.shape[2],i=await this.model.executeAsync(a),l=i[0].dataSync(),u=i[1].dataSync();a.dispose(),n.dispose(i);const[c,d]=this.calculateMaxScores(l,i[0].shape[1],i[0].shape[2]),p=n.getBackend();"webgl"===n.getBackend()&&n.setBackend("cpu");const h=n.tidy((()=>{const e=n.tensor2d(u,[i[1].shape[1],i[1].shape[3]]);return n.image.nonMaxSuppression(e,c,t,r,r)})),f=h.dataSync();return h.dispose(),p!==n.getBackend()&&n.setBackend(p),this.buildDetectedObjects(o,s,u,c,f,d)}buildDetectedObjects(e,t,n,a,s,o){const i=s.length,l=[];for(let u=0;u<i;u++){const i=[];for(let e=0;e<4;e++)i[e]=n[4*s[u]+e];const c=i[0]*t,d=i[1]*e,p=i[2]*t,h=i[3]*e;i[0]=d,i[1]=c,i[2]=h-d,i[3]=p-c,l.push({bbox:i,class:r[o[s[u]]+1].displayName,score:a[s[u]]})}return l}calculateMaxScores(e,t,n){const r=[],a=[];for(let s=0;s<t;s++){let t=Number.MIN_VALUE,o=-1;for(let r=0;r<n;r++)e[s*n+r]>t&&(t=e[s*n+r],o=r);r[s]=t,a[s]=o}return[r,a]}async detect(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:20,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:.5;return this.infer(e,t,n)}dispose(){null!=this.model&&this.model.dispose()}}e.ObjectDetection=a,e.load=async function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(null==n)throw new Error("Cannot find TensorFlow.js. If you are using a <script> tag, please also include @tensorflow/tfjs on the page before using this model.");const t=e.base||"lite_mobilenet_v2",r=e.modelUrl;if(-1===["mobilenet_v1","mobilenet_v2","lite_mobilenet_v2"].indexOf(t))throw new Error(`ObjectDetection constructed with invalid base model ${t}. Valid names are 'mobilenet_v1', 'mobilenet_v2' and 'lite_mobilenet_v2'.`);const s=new a(t,r);return await s.load(),s},e.version="2.2.3",Object.defineProperty(e,"__esModule",{value:!0})}(t,n(5452),n(5743))},3984:(e,t,n)=>{"use strict";n.d(t,{K:()=>i});var r=n(2164),a=n(9554),s=n(4148),o=n(1426);const i=(0,n(7892).op)({unstack_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=(0,s.YT)(e,"x","unstack","string_or_numeric");o.vA(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const i={value:n},l={axis:t};return r.T2.runKernel(a.dXR,i,l)}})},3986:(e,t,n)=>{"use strict";n.d(t,{_:()=>l});var r=n(2164),a=n(9554),s=n(4148),o=n(4920),i=n(8805);const l=(0,n(7892).op)({where_:function(e,t,n){const l=(0,s.YT)(t,"a","where"),u=(0,s.YT)(n,"b","where"),c=(0,s.YT)(e,"condition","where","bool"),d=(0,i.assertAndGetBroadcastShape)((0,i.assertAndGetBroadcastShape)(c.shape,l.shape),u.shape),p={condition:(0,o.h)(c,d),t:(0,o.h)(l,d),e:(0,o.h)(u,d)};return r.T2.runKernel(a.l6P,p)}})},4023:(e,t,n)=>{"use strict";n.d(t,{U:()=>i});var r=n(2164),a=n(9554),s=n(4148),o=n(1426);const i=(0,n(7892).op)({expandDims_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=(0,s.YT)(e,"x","expandDims","string_or_numeric");o.vA(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const i={input:n},l={dim:t};return r.T2.runKernel(a.ybN,i,l)}})},4034:(e,t,n)=>{"use strict";n.d(t,{YG:()=>o,uf:()=>l});var r=n(5743),a=n(4084),s=n(4729);const o=(0,a.o)((e=>Math.ceil(e))),i=(0,s.F)(r.Ceil,o),l={kernelName:r.Ceil,backendName:"cpu",kernelFunc:i}},4083:(e,t,n)=>{"use strict";n.r(t),n.d(t,{calculateShapes:()=>o,validateInput:()=>s,validateUpdateShape:()=>a});var r=n(1426);function a(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${a}.`;if(n.rank<a)throw new Error(s+` update.rank < ${a}. `);if(e.length<r+(n.rank-a))throw new Error(s+` Output shape length < ${r+(n.rank-a)}`);if(n.rank!==a+e.length-r)throw new Error(s+" update.rank != "+(a+e.length-r));for(let o=0;o<a;++o)if(n.shape[o]!==t.shape[o])throw new Error(s+` updates.shape[${o}] (${n.shape[o]}) != indices.shape[${o}] (${t.shape[o]}).`);for(let o=0;o<n.rank-a;++o)if(n.shape[o+a]!==e[o+r])throw new Error(s+` updates.shape[${o+a}] (${n.shape[o+a]}) != shape[${o+a}] (${e[o+a]})`)}function s(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}a(n,t,e)}function o(e,t,n){const a=t.shape.length,s=a>1?t.shape[a-1]:1,o=n.length;let i=1;for(let r=s;r<o;++r)i*=n[r];const l=s<1?1:s;return{sliceRank:s,numUpdates:(0,r.Ze)(t.shape)/l,sliceSize:i,strides:[...(0,r.Ur)(n.slice(0,s)),1],outputSize:(0,r.Ze)(n)}}},4084:(e,t,n)=>{"use strict";n.d(t,{o:()=>a});var r=n(5743);function a(e){return(t,n,a)=>{const s=r.util.getArrayFromDType(n,t.length);for(let r=0;r<t.length;++r)s[r]=e(t[r],a);return s}}},4100:(e,t,n)=>{"use strict";n.d(t,{P:()=>o});var r=n(2164),a=n(9554),s=n(4148);const o=(0,n(7892).op)({onesLike_:function(e){const t={x:(0,s.YT)(e,"x","onesLike")};return r.T2.runKernel(a.LWX,t)}})},4124:(e,t,n)=>{"use strict";n.d(t,{R:()=>s,i:()=>a});var r=n(5399);function a(){(0,r._K)().getBool("IS_TEST")||(0,r._K)().getBool("PROD")||console.warn(...arguments)}function s(){(0,r._K)().getBool("IS_TEST")||(0,r._K)().getBool("PROD")||console.log(...arguments)}},4148:(e,t,n)=>{"use strict";n.d(t,{MZ:()=>u,YT:()=>p,j1:()=>h});var r=n(2164),a=n(5399),s=n(9494),o=n(8075),i=n(8977),l=n(1426);function u(e,t){let n=e;if((0,i.isTypedArray)(e))return"string"===t?[]:[e.length];if((0,o.Oj)(e)){const t=e.channels||"RGBA";return[e.height,e.width*t.length]}if((0,o.Nw)(e))return[e.buffer.size/(null==t?4:(0,l.jv)(t))];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||(0,i.isTypedArray)(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&(0,a._K)().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&c(e,r,[]),r}function c(e,t,n){if(n=n||[],!Array.isArray(e)&&!(0,i.isTypedArray)(e))return void(0,l.vA)(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));(0,l.vA)(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),(0,l.vA)(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let a=0;a<e.length;++a)c(e[a],r,n.concat(a))}function d(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function p(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"numeric";if(e instanceof(0,s.tp)())return d(a,e.dtype,t,n),e;let o=(0,l.X$)(e);if("string"!==o&&["bool","int32","float32"].indexOf(a)>=0&&(o=a),d(a,o,t,n),null==e||!(0,i.isTypedArray)(e)&&!Array.isArray(e)&&"number"!==typeof e&&"boolean"!==typeof e&&"string"!==typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const c=u(e,o);(0,i.isTypedArray)(e)||Array.isArray(e)||(e=[e]);const p="string"!==o?(0,i.toTypedArray)(e,o):(0,i.flatten)(e,[],!0);return r.T2.makeTensor(p,c,o)}function h(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"numeric";if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,a)=>p(e,`${t}[${a}]`,n,r)))}},4213:(e,t,n)=>{"use strict";n.d(t,{r:()=>o});var r=n(2164),a=n(9554),s=n(4148);const o=(0,n(7892).op)({sigmoid_:function(e){const t={x:(0,s.YT)(e,"x","sigmoid","float32")};return r.T2.runKernel(a.vI1,t)}})},4218:(e,t,n)=>{"use strict";n.d(t,{U:()=>o});var r=n(2164),a=n(1426),s=n(6149);function o(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32";if((0,a.SA)(e),"complex64"===t){const t=o(e,"float32"),n=o(e,"float32");return(0,s.f)(t,n)}const n=(0,a.Ty)((0,a.Ze)(e),t);return r.T2.makeTensor(n,e,t)}},4252:(e,t,n)=>{"use strict";n.d(t,{F:()=>i});var r=n(2164),a=n(9554),s=n(4148),o=n(1426);const i=(0,n(7892).op)({mirrorPad_:function(e,t,n){o.vA("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const i=(0,s.YT)(e,"x","mirrorPad");if(0===i.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");o.vA(t.length===i.rank,(()=>`Padding doesn't match input. Must be ${i.rank}. Got ${t.length}.`));const l="reflect"===n?1:0;for(let r=0;r<i.rank;r++)o.vA(2===t[r].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),o.vA(t[r][0]>=0&&t[r][0]<=i.shape[r]-l&&t[r][1]>=0&&t[r][1]<=i.shape[r]-l,(()=>`Padding in dimension ${r} cannot be greater than or equal to ${i.shape[r]-l} or less than 0 for input of shape ${i.shape}`));const u={paddings:t,mode:n},c={x:i};return r.T2.runKernel(a.x7F,c,u)}})},4288:(e,t)=>{"use strict";var n=Symbol.for("react.transitional.element"),r=Symbol.for("react.portal"),a=Symbol.for("react.fragment"),s=Symbol.for("react.strict_mode"),o=Symbol.for("react.profiler"),i=Symbol.for("react.consumer"),l=Symbol.for("react.context"),u=Symbol.for("react.forward_ref"),c=Symbol.for("react.suspense"),d=Symbol.for("react.memo"),p=Symbol.for("react.lazy"),h=Symbol.iterator;var f={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},m=Object.assign,g={};function y(e,t,n){this.props=e,this.context=t,this.refs=g,this.updater=n||f}function b(){}function v(e,t,n){this.props=e,this.context=t,this.refs=g,this.updater=n||f}y.prototype.isReactComponent={},y.prototype.setState=function(e,t){if("object"!==typeof e&&"function"!==typeof e&&null!=e)throw Error("takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,t,"setState")},y.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},b.prototype=y.prototype;var x=v.prototype=new b;x.constructor=v,m(x,y.prototype),x.isPureReactComponent=!0;var k=Array.isArray,w={H:null,A:null,T:null,S:null,V:null},S=Object.prototype.hasOwnProperty;function T(e,t,r,a,s,o){return r=o.ref,{$$typeof:n,type:e,key:t,ref:void 0!==r?r:null,props:o}}function N(e){return"object"===typeof e&&null!==e&&e.$$typeof===n}var I=/\/+/g;function C(e,t){return"object"===typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function E(){}function $(e,t,a,s,o){var i=typeof e;"undefined"!==i&&"boolean"!==i||(e=null);var l,u,c=!1;if(null===e)c=!0;else switch(i){case"bigint":case"string":case"number":c=!0;break;case"object":switch(e.$$typeof){case n:case r:c=!0;break;case p:return $((c=e._init)(e._payload),t,a,s,o)}}if(c)return o=o(e),c=""===s?"."+C(e,0):s,k(o)?(a="",null!=c&&(a=c.replace(I,"$&/")+"/"),$(o,t,a,"",(function(e){return e}))):null!=o&&(N(o)&&(l=o,u=a+(null==o.key||e&&e.key===o.key?"":(""+o.key).replace(I,"$&/")+"/")+c,o=T(l.type,u,void 0,0,0,l.props)),t.push(o)),1;c=0;var d,f=""===s?".":s+":";if(k(e))for(var m=0;m<e.length;m++)c+=$(s=e[m],t,a,i=f+C(s,m),o);else if("function"===typeof(m=null===(d=e)||"object"!==typeof d?null:"function"===typeof(d=h&&d[h]||d["@@iterator"])?d:null))for(e=m.call(e),m=0;!(s=e.next()).done;)c+=$(s=s.value,t,a,i=f+C(s,m++),o);else if("object"===i){if("function"===typeof e.then)return $(function(e){switch(e.status){case"fulfilled":return e.value;case"rejected":throw e.reason;default:switch("string"===typeof e.status?e.then(E,E):(e.status="pending",e.then((function(t){"pending"===e.status&&(e.status="fulfilled",e.value=t)}),(function(t){"pending"===e.status&&(e.status="rejected",e.reason=t)}))),e.status){case"fulfilled":return e.value;case"rejected":throw e.reason}}throw e}(e),t,a,s,o);throw t=String(e),Error("Objects are not valid as a React child (found: "+("[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t)+"). If you meant to render a collection of children, use an array instead.")}return c}function A(e,t,n){if(null==e)return e;var r=[],a=0;return $(e,r,"","",(function(e){return t.call(n,e,a++)})),r}function _(e){if(-1===e._status){var t=e._result;(t=t()).then((function(t){0!==e._status&&-1!==e._status||(e._status=1,e._result=t)}),(function(t){0!==e._status&&-1!==e._status||(e._status=2,e._result=t)})),-1===e._status&&(e._status=0,e._result=t)}if(1===e._status)return e._result.default;throw e._result}var R="function"===typeof reportError?reportError:function(e){if("object"===typeof window&&"function"===typeof window.ErrorEvent){var t=new window.ErrorEvent("error",{bubbles:!0,cancelable:!0,message:"object"===typeof e&&null!==e&&"string"===typeof e.message?String(e.message):String(e),error:e});if(!window.dispatchEvent(t))return}else if("object"===typeof process&&"function"===typeof process.emit)return void process.emit("uncaughtException",e);console.error(e)};function F(){}t.Children={map:A,forEach:function(e,t,n){A(e,(function(){t.apply(this,arguments)}),n)},count:function(e){var t=0;return A(e,(function(){t++})),t},toArray:function(e){return A(e,(function(e){return e}))||[]},only:function(e){if(!N(e))throw Error("React.Children.only expected to receive a single React element child.");return e}},t.Component=y,t.Fragment=a,t.Profiler=o,t.PureComponent=v,t.StrictMode=s,t.Suspense=c,t.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE=w,t.__COMPILER_RUNTIME={__proto__:null,c:function(e){return w.H.useMemoCache(e)}},t.cache=function(e){return function(){return e.apply(null,arguments)}},t.cloneElement=function(e,t,n){if(null===e||void 0===e)throw Error("The argument must be a React element, but you passed "+e+".");var r=m({},e.props),a=e.key;if(null!=t)for(s in void 0!==t.ref&&void 0,void 0!==t.key&&(a=""+t.key),t)!S.call(t,s)||"key"===s||"__self"===s||"__source"===s||"ref"===s&&void 0===t.ref||(r[s]=t[s]);var s=arguments.length-2;if(1===s)r.children=n;else if(1<s){for(var o=Array(s),i=0;i<s;i++)o[i]=arguments[i+2];r.children=o}return T(e.type,a,void 0,0,0,r)},t.createContext=function(e){return(e={$$typeof:l,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider=e,e.Consumer={$$typeof:i,_context:e},e},t.createElement=function(e,t,n){var r,a={},s=null;if(null!=t)for(r in void 0!==t.key&&(s=""+t.key),t)S.call(t,r)&&"key"!==r&&"__self"!==r&&"__source"!==r&&(a[r]=t[r]);var o=arguments.length-2;if(1===o)a.children=n;else if(1<o){for(var i=Array(o),l=0;l<o;l++)i[l]=arguments[l+2];a.children=i}if(e&&e.defaultProps)for(r in o=e.defaultProps)void 0===a[r]&&(a[r]=o[r]);return T(e,s,void 0,0,0,a)},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:u,render:e}},t.isValidElement=N,t.lazy=function(e){return{$$typeof:p,_payload:{_status:-1,_result:e},_init:_}},t.memo=function(e,t){return{$$typeof:d,type:e,compare:void 0===t?null:t}},t.startTransition=function(e){var t=w.T,n={};w.T=n;try{var r=e(),a=w.S;null!==a&&a(n,r),"object"===typeof r&&null!==r&&"function"===typeof r.then&&r.then(F,R)}catch(s){R(s)}finally{w.T=t}},t.unstable_useCacheRefresh=function(){return w.H.useCacheRefresh()},t.use=function(e){return w.H.use(e)},t.useActionState=function(e,t,n){return w.H.useActionState(e,t,n)},t.useCallback=function(e,t){return w.H.useCallback(e,t)},t.useContext=function(e){return w.H.useContext(e)},t.useDebugValue=function(){},t.useDeferredValue=function(e,t){return w.H.useDeferredValue(e,t)},t.useEffect=function(e,t,n){var r=w.H;if("function"===typeof n)throw Error("useEffect CRUD overload is not enabled in this build of React.");return r.useEffect(e,t)},t.useId=function(){return w.H.useId()},t.useImperativeHandle=function(e,t,n){return w.H.useImperativeHandle(e,t,n)},t.useInsertionEffect=function(e,t){return w.H.useInsertionEffect(e,t)},t.useLayoutEffect=function(e,t){return w.H.useLayoutEffect(e,t)},t.useMemo=function(e,t){return w.H.useMemo(e,t)},t.useOptimistic=function(e,t){return w.H.useOptimistic(e,t)},t.useReducer=function(e,t,n){return w.H.useReducer(e,t,n)},t.useRef=function(e){return w.H.useRef(e)},t.useState=function(e){return w.H.useState(e)},t.useSyncExternalStore=function(e,t,n){return w.H.useSyncExternalStore(e,t,n)},t.useTransition=function(){return w.H.useTransition()},t.version="19.1.0"},4308:(e,t,n)=>{"use strict";n.d(t,{AC:()=>l,oN:()=>i,sG:()=>o});var r=n(5743),a=n(4084),s=n(4729);const o=(0,a.o)((e=>Math.exp(e))),i=(0,s.F)(r.Exp,o,"float32"),l={kernelName:r.Exp,backendName:"cpu",kernelFunc:i}},4334:(e,t,n)=>{var r=n(7359),a=n(7066),s=n(9016),o=n(9538),i=n(6288),l=n(5262),u=n(2430);u.alea=r,u.xor128=a,u.xorwow=s,u.xorshift7=o,u.xor4096=i,u.tychei=l,e.exports=u},4357:(e,t,n)=>{"use strict";n.d(t,{HS:()=>s,di:()=>o,lv:()=>i});var r=n(5743),a=n(3143);function s(e,t,n,a,s){const o=r.slice_util.isSliceContinous(a,t,n),i=r.util.sizeFromShape(n),l=r.util.computeStrides(a);if(o){const n=r.slice_util.computeFlatOffset(t,l);return"string"===s?e.slice(n,n+i):e.subarray(n,n+i)}const u="string"===s?r.backend_util.fromUint8ToStringArray(e):e,c=(0,r.buffer)(a,s,u),d=(0,r.buffer)(n,s);for(let r=0;r<d.size;++r){const e=d.indexToLoc(r),n=e.map(((e,n)=>e+t[n]));d.set(c.get(...n),...e)}return"string"===s?r.backend_util.fromStringArrayToUint8(d.values):d.values}function o(e){const{inputs:t,backend:n,attrs:o}=e,{x:i}=t,{begin:l,size:u}=o;(0,a.C)(i,"slice");const[c,d]=r.slice_util.parseSliceParams(i,l,u);r.slice_util.assertParamsValid(i,c,d);const p=s(n.data.get(i.dataId).values,c,d,i.shape,i.dtype);return n.makeTensorInfo(d,i.dtype,p)}const i={kernelName:r.Slice,backendName:"cpu",kernelFunc:o}},4391:(e,t,n)=>{"use strict";!function e(){if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(t){console.error(t)}}(),e.exports=n(7004)},4413:(e,t,n)=>{"use strict";n.d(t,{Zl:()=>u,dl:()=>o,jb:()=>l});var r=n(5743),a=n(2312),s=n(5101);const o=(0,a.Z)(((e,t)=>e-t)),i=(0,s.B)(((e,t,n,r)=>({real:e-n,imag:t-r}))),l=(0,s.j)(r.Sub,o,i),u={kernelName:r.Sub,backendName:"cpu",kernelFunc:l}},4417:(e,t,n)=>{"use strict";n.d(t,{_:()=>s});var r=n(5743);const a=2147483647;function s(e,t,n,s,o,i,l){if(t.length>1)throw new Error("starts must be a scalar or vector");if(o.length>1)throw new Error("limits must be a scalar or vector");if(l.length>1)throw new Error("deltas must be a scalar or vector");const u=0===t.length,c=0===o.length,d=0===l.length,p=[];u||p.push(t[0]),c||p.push(o[0]),d||p.push(l[0]);for(let r=1;r<p.length;++r)if(p[r]!==p[r-1])throw new Error("starts, limits, and deltas must have the same shape");const h=0===p.length?1:p[0],f=r.util.getArrayFromDType("int32",h+1);f[0]=0;for(let r=0;r<h;++r){const t=u?e[0]:e[r],n=c?s[0]:s[r],o=d?i[0]:i[r];if(0===o)throw new Error("Requires delta != 0");let l;if(o>0&&n<t||o<0&&n>t)l=0;else if(l=Math.ceil(Math.abs((n-t)/o)),l>a)throw new Error(`Requires ((limit - start) / delta) <= ${a}`);f[r+1]=f[r]+l}const m=f[h],g=r.util.getArrayFromDType(n,m);let y=0;for(let r=0;r<h;++r){const t=f[r+1]-f[r];let n=u?e[0]:e[r];const a=d?i[0]:i[r];for(let e=0;e<t;++e)g[y++]=n,n+=a}return[f,g]}},4429:(e,t,n)=>{"use strict";n.d(t,{x:()=>l});var r=n(2164),a=n(9554),s=n(4148),o=n(1426),i=n(9820);const l=(0,n(7892).op)({concat_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;(0,o.vA)(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=(0,s.j1)(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return(0,i.o)(n[0]);const l=n,u={axis:t};return r.T2.runKernel(a.$dB,l,u)}})},4616:(e,t,n)=>{"use strict";n.d(t,{S:()=>i});var r=n(2164),a=n(1426),s=n(6149),o=n(4218);function i(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32";if((0,a.SA)(e),"complex64"===t){const t=i(e,"float32"),n=(0,o.U)(e,"float32");return(0,s.f)(t,n)}const n=(0,a.FZ)((0,a.Ze)(e),t);return r.T2.makeTensor(n,e,t)}},4642:(e,t,n)=>{"use strict";n.r(t),n.d(t,{assertParamsValid:()=>o,computeFlatOffset:()=>v,computeOutShape:()=>l,getNormalizedAxes:()=>p,isSliceContinous:()=>b,maskToAxes:()=>i,parseSliceParams:()=>x,sliceInfo:()=>k,startForAxis:()=>g,startIndicesWithElidedDims:()=>h,stopForAxis:()=>y,stopIndicesWithElidedDims:()=>f,stridesForAxis:()=>m,stridesWithElidedDims:()=>u});var r=n(1426);const a=-2,s=-1;function o(e,t,n){const a=e.shape.length;r.vA(a===t.length,(()=>`Error in slice${a}D: Length of begin ${t} must match the rank of the array (${a}).`)),r.vA(a===n.length,(()=>`Error in slice${a}D: Length of size ${n} must match the rank of the array (${a}).`));for(let s=0;s<a;++s)r.vA(t[s]+n[s]<=e.shape[s],(()=>`Error in slice${a}D: begin[${s}] + size[${s}] (${t[s]+n[s]}) would overflow input.shape[${s}] (${e.shape[s]})`))}function i(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function l(e,t,n){const r=[];for(let a=0;a<e.length;a++)r[a]=Math.ceil((t[a]-e[a])/n[a]);return r}function u(e,t,n,r){const a=[...e];for(let s=a.length;s<r.length;s++)a.push(1);for(let s=0;s<n;s++)0===s?a[t]=1:(a.splice(t,0,1),a.pop());return a}function c(e,t,n){return n<=e?n:n-(t-1)}function d(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function p(e,t,n,r,a,s,o,i,l){const c=e.length;let d=new Array(c),p=new Array(c),b=new Array(c);if(t.length&&n>0){const l=t[0],c=n+1;d=h(o,l,c,r,e),p=f(i,l,c,a,e),b=u(s,l,c,e)}else for(let u=0;u<c;u++)d[u]=g(o,r,s,e,u,l),p[u]=y(i,a,s,e,u,l),b[u]=m(s,u,l);return{begin:d,end:p,strides:b}}function h(e,t,n,r,a){const s=[...a],o=d(n,t);for(let i=0;i<s.length;i++)if(o.indexOf(i)>-1)s[i]=0;else{const a=c(t,n,i);let o=r[a];e&1<<a&&(o=0),s[i]=o}return s}function f(e,t,n,a,s){const o=[...s],i=d(n,t);for(let r=0;r<o.length;r++)if(i.indexOf(r)>-1)o[r]=Number.MAX_SAFE_INTEGER;else{const s=c(t,n,r);let i=a[s];e&1<<s&&(i=Number.MAX_SAFE_INTEGER),o[r]=i}for(let l=0;l<o.length;l++){const e=s[l];o[l]<0&&(o[l]+=e),o[l]=r.qE(0,o[l],s[l])}return o}function m(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function g(e,t,n,a,s,o){let i=t[s];const l=n[s]||1;(e&1<<s||o&1<<s||null==i)&&(i=l>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const u=a[s];return i<0&&(i+=u),i=r.qE(0,i,u-1),i}function y(e,t,n,a,s,o){let i=t[s];const l=n[s]||1;(e&1<<s||o&1<<s||null==i)&&(i=l>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const u=a[s];return i<0&&(i+=u),i=l>0?r.qE(0,i,u):r.qE(-1,i,u-1),i}function b(e,t,n){let r=n.length;for(let a=0;a<n.length;a++)if(n[a]>1){r=a;break}for(let a=r+1;a<n.length;a++)if(t[a]>0||n[a]!==e[a])return!1;return!0}function v(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function x(e,t,n){let a;const s=e.shape.length;let o;return a="number"===typeof t?[t,...new Array(s-1).fill(0)]:t.length<s?t.concat(new Array(s-t.length).fill(0)):t.slice(),a.forEach((e=>{r.vA(-1!==e,(()=>"slice() does not support negative begin indexing."))})),o=null==n?new Array(s).fill(-1):"number"===typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,o=o.map(((t,n)=>t>=0?t:(r.vA(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-a[n]))),[a,o]}function k(e,t,n,r,o,i,l,u,c){let d;if(null==r?(d=new Array(t.length),d.fill(1)):d=r,null!=l&&0!==(l&l-1))throw new Error("Multiple ellipses in slice is not allowed.");let p=!1;const h={dims:d.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:d.slice(),beginMask:o,endMask:i,ellipsisMask:l,newAxisMask:u,shrinkAxisMask:c};for(let a=0;a<h.dims;a++)p&&0!==(1<<a&u)&&h.numAddAxisAfterEllipsis++,1<<a&l&&(p=!0);p||(h.ellipsisMask|=1<<h.dims,h.dims++);const f={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let r=0;r<e.dims;r++)if(1<<r&e.ellipsisMask){const a=Math.min(t.dims-(e.dims-r)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<a;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&e.newAxisMask)t.finalShapeGatherIndices.push(a),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[r]),null!=e.end&&(t.end[n]=e.end[r]),t.strides[n]=e.strides[r],e.beginMask&1<<r&&(t.beginMask|=1<<n),e.endMask&1<<r&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push(s),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[n]=r,n++}}(h,f);let m=!0,g=!0,y=!0;const b=[],v=[];for(let a=0;a<e.length;++a){if(0===f.strides[a])throw Error(`strides[${a}] must be non-zero`);const t=!!(f.shrinkAxisMask&1<<a),n=e[a];if(-1===n){b.push(t?1:-1);continue}const r=[f.beginMask&1<<a,f.endMask&1<<a],s=[f.strides[a]>0?0:-1,f.strides[a]>0?n:n-1];if(t&&f.strides[a]<=0)throw Error("only stride 1 allowed on non-range indexing.");y=y&&1===f.strides[a];const o=!!(f.beginMask&1<<a&&f.endMask&1<<a);if(f.beginValid&&f.endValid){if(t){const e=f.begin[a]<0?n+f.begin[a]:f.begin[a];if(f.begin[a]=e,f.end[a]=f.begin[a]+1,e<0||e>=n)throw Error(`slice index ${f.begin[a]} of dimension ${a} out of bounds.`)}else f.begin[a]=w(f.begin[a],0,f.strides[a],n,r,s),f.end[a]=w(f.end[a],1,f.strides[a],n,r,s);const e=1===f.strides[a]&&0===f.begin[a]&&f.end[a]===n;m=m&&e,g=g&&(0===a&&1===f.strides[a]||e)}else m=m&&1===f.strides[a]&&o,g=g&&(0===a&&1===f.strides[a]||o);let i,l=!1;if(f.beginValid&&f.endValid?(i=f.end[a]-f.begin[a],l=!0):t?(i=1,l=!0):o&&n>=0&&(i=f.strides[a]<0?-n:n,l=!0),l){let e;e=0===i||i<0!==f.strides[a]<0?0:Math.trunc(i/f.strides[a])+(i%f.strides[a]!==0?1:0),b.push(e)}else b.push(-1)}for(let s=0;s<f.finalShapeGatherIndices.length;++s){const e=f.finalShapeGatherIndices[s];e>=0?v.push(b[e]):e===a&&v.push(1)}return{finalShapeSparse:v.filter(((e,t)=>f.finalShapeGatherIndices[t]!==a)),finalShape:v,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:f.begin,end:f.end,strides:f.strides}}function w(e,t,n,r,a,s){if(a[t])return n>0?s[t]:s[t+1&1];{const t=e<0?r+e:e;return t<s[0]?s[0]:t>s[1]?s[1]:t}}},4660:(e,t,n)=>{"use strict";n.d(t,{G:()=>o});var r=n(2164),a=n(9554),s=n(1426);function o(e,t,n){(0,s.SA)(e);const o={shape:e,value:t,dtype:n=n||(0,s.X$)(t)};return r.T2.runKernel(a.SQl,{},o)}},4729:(e,t,n)=>{"use strict";n.d(t,{F:()=>i,v:()=>o});var r=n(5743),a=n(3143),s=n(4084);function o(e,t,n){return i(e,(0,s.o)(t),n)}function i(e,t,n){return s=>{let{inputs:o,attrs:i,backend:l}=s;const{x:u}=o;(0,a.C)(u,e);const c=l,d=c.data.get(u.dataId).values;let p;if("string"===u.dtype){if(!Array.isArray(d))throw new Error("String tensor's value was not an instance of Array");p=r.backend_util.fromUint8ToStringArray(d)}else p=d;const h=n||u.dtype,f=t(p,h,i);return c.makeTensorInfo(u.shape,h,f)}}},4759:(e,t,n)=>{"use strict";n.d(t,{H:()=>o});var r=n(2164),a=n(9554),s=n(4148);const o=(0,n(7892).op)({acos_:function(e){const t={x:(0,s.YT)(e,"x","acos")};return r.T2.runKernel(a.Vvy,t)}})},4824:(e,t,n)=>{"use strict";n.d(t,{n:()=>c});var r=n(1839),a=n(4148),s=n(803),o=n(1011),i=n(7892),l=n(4213),u=n(9973);const c=(0,i.op)({logSigmoid_:function(e){const t=(0,a.YT)(e,"x","logSigmoid");return(0,r._X)((e=>({value:(0,o.H)((0,u.l)((0,o.H)(e))),gradFunc:t=>(0,s.l)(t,(0,l.r)((0,o.H)(e)))})))(t)}})},4861:(e,t,n)=>{"use strict";n.d(t,{WR:()=>o,YW:()=>l});var r=n(5743),a=n(2312),s=n(5101);const o=(0,a.Z)(((e,t)=>e<t?1:0)),i=(0,s.j)(r.Less,o,null,"bool"),l={kernelName:r.Less,backendName:"cpu",kernelFunc:i}},4894:(e,t,n)=>{"use strict";n.d(t,{M:()=>o});var r=n(2164),a=n(9554),s=n(4148);const o=(0,n(7892).op)({tan_:function(e){const t={x:(0,s.YT)(e,"x","tan","float32")};return r.T2.runKernel(a.oFs,t)}})},4920:(e,t,n)=>{"use strict";n.d(t,{h:()=>c});var r=n(2164),a=n(9554),s=n(4148),o=n(1426),i=n(9820),l=n(7892),u=n(5583);const c=(0,l.op)({broadcastTo_:function(e,t){let n=(0,s.YT)(e,"broadcastTo","x");const l=n.shape;if((0,o.SA)(t),t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=(0,u.t)(n,e)}const c=n.shape,d=Array.from(t);for(let r=t.length-1;r>=0;r--)if(c[r]===t[r])d[r]=1;else if(1!==n.shape[r])throw new Error(`broadcastTo(): [${l}] cannot be broadcast to [${t}].`);if(0===d.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return(0,i.o)(n);const p={x:n},h={reps:d};return r.T2.runKernel(a.FAs,p,h)}})},4969:(e,t,n)=>{"use strict";n.d(t,{X:()=>c});var r=n(2164),a=n(9554),s=n(4148),o=n(1426),i=n(7538),l=n(7892),u=n(5583);const c=(0,l.op)({conv2d_:function(e,t,n,l){let c=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",d=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],p=arguments.length>6?arguments[6]:void 0;const h=(0,s.YT)(e,"x","conv2d","float32"),f=(0,s.YT)(t,"filter","conv2d","float32");let m=h,g=!1;3===h.rank&&(g=!0,m=(0,u.t)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),o.vA(4===m.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${m.rank}.`)),o.vA(4===f.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${f.rank}.`)),i.s_("conv2d",l,p);const y="NHWC"===c?m.shape[3]:m.shape[1];o.vA(y===f.shape[2],(()=>`Error in conv2d: depth of input (${y}) must match input depth for filter ${f.shape[2]}.`)),o.vA(i.G0(n,d),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${d}'`)),o.vA(i.qk(d),(()=>"Error in conv2D: Dilated rates should be larger than 0.")),o.vA(i.qk(n),(()=>"Error in conv2D: Strides should be larger than 0."));const b={x:m,filter:f},v={strides:n,pad:l,dataFormat:c,dilations:d,dimRoundingMode:p},x=r.T2.runKernel(a.p2J,b,v);return g?(0,u.t)(x,[x.shape[1],x.shape[2],x.shape[3]]):x}})},4974:(e,t,n)=>{"use strict";n.d(t,{y:()=>l});var r=n(2164),a=n(9554),s=n(8804),o=n(4148),i=n(3612);const l=(0,n(7892).op)({div_:function(e,t){let n=(0,o.YT)(e,"a","div"),l=(0,o.YT)(t,"b","div");if([n,l]=(0,s.makeTypesMatch)(n,l),"int32"===n.dtype&&"int32"===l.dtype)return(0,i.w)(n,l);const u={a:n,b:l};return r.T2.runKernel(a.sDr,u,{})}})},5003:(e,t,n)=>{"use strict";n.d(t,{q:()=>a});var r=n(5743);function a(e,t,n,a,s,o,i,l,u){const c=(0,r.buffer)([a,o],n);for(let r=0;r<a;r++){const n=[];let a=0;for(let t=0;t<s;t++){const o=e[r*s+t];a+=o*i[t],n.push(o)}if(a<0||a>=u/o)throw new Error(`Invalid indices: ${n} does not index into ${l}`);for(let e=0;e<o;e++)c.values[r*o+e]=t.get(...t.indexToLoc(a*o+e))}return c}},5043:(e,t,n)=>{"use strict";e.exports=n(4288)},5048:(e,t,n)=>{"use strict";n.d(t,{e:()=>o});var r=n(2164),a=n(9554),s=n(4148);const o=(0,n(7892).op)({pad_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const o=(0,s.YT)(e,"x","pad");if(0===o.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const i={paddings:t,constantValue:n},l={x:o};return r.T2.runKernel(a.ODT,l,i)}})},5101:(e,t,n)=>{"use strict";n.d(t,{B:()=>l,j:()=>i});var r=n(5743),a=n(3143),s=n(668),o=n(3075);function i(e,t,n,i){return null==n?n=>{let{inputs:s,backend:o}=n;const{a:l,b:u}=s,c=o;(0,a.C)([l,u],e);const d=c.data.get(l.dataId).values,p=c.data.get(u.dataId).values,h="string"===l.dtype?r.backend_util.fromUint8ToStringArray(d):d,f="string"===l.dtype?r.backend_util.fromUint8ToStringArray(p):p,m=i||l.dtype,[g,y]=t(l.shape,u.shape,h,f,m);return c.makeTensorInfo(y,m,g)}:e=>{let{inputs:r,backend:a}=e;const{a:l,b:u}=r,c=a;if("complex64"===l.dtype||"complex64"===u.dtype){const e=(0,s.wg)({inputs:{x:l},backend:c,attrs:{dtype:"complex64"}}),t=c.data.get(e.dataId),r=t.complexTensorInfos.real,a=t.complexTensorInfos.imag,i=c.data.get(r.dataId).values,d=c.data.get(a.dataId).values,p=(0,s.wg)({inputs:{x:u},backend:c,attrs:{dtype:"complex64"}}),h=c.data.get(p.dataId),f=h.complexTensorInfos.real,m=h.complexTensorInfos.imag,g=c.data.get(f.dataId).values,y=c.data.get(m.dataId).values,[b,v,x]=n(l.shape,u.shape,i,d,g,y),k=c.makeTensorInfo(x,"float32",b),w=c.makeTensorInfo(x,"float32",v),S=(0,o.f)({inputs:{real:k,imag:w},backend:c});return c.disposeIntermediateTensorInfo(e),c.disposeIntermediateTensorInfo(p),c.disposeIntermediateTensorInfo(k),c.disposeIntermediateTensorInfo(w),S}{const e=c.data.get(l.dataId).values,n=c.data.get(u.dataId).values,r=i||l.dtype,[a,s]=t(l.shape,u.shape,e,n,r);return c.makeTensorInfo(s,r,a)}}}function l(e){return(t,n,a,s,o,i)=>{const l=r.backend_util.assertAndGetBroadcastShape(t,n),u=r.util.sizeFromShape(l),c=l.length,d=r.util.computeStrides(l),p=r.util.getTypedArrayFromDType("float32",u),h=r.util.getTypedArrayFromDType("float32",u),f=r.backend_util.getBroadcastDims(t,l),m=r.backend_util.getBroadcastDims(n,l),g=r.backend_util.mergeRealAndImagArrays(a,s),y=r.backend_util.mergeRealAndImagArrays(o,i),b=t.length,v=r.util.computeStrides(t),x=n.length,k=r.util.computeStrides(n);if(f.length+m.length===0)for(let r=0;r<p.length;r++){const t=r%g.length,n=r%y.length,a=e(g[2*t],g[2*t+1],y[2*n],y[2*n+1]);p[r]=a.real,h[r]=a.imag}else for(let w=0;w<p.length;w++){const t=r.util.indexToLoc(w,c,d),n=t.slice(-b);f.forEach((e=>n[e]=0));const a=r.util.locToIndex(n,b,v),s=t.slice(-x);m.forEach((e=>s[e]=0));const o=r.util.locToIndex(s,x,k),i=e(g[2*a],g[2*a+1],y[2*o],y[2*o+1]);p[w]=i.real,h[w]=i.imag}return[p,h,l]}}},5149:(e,t,n)=>{"use strict";n.d(t,{z:()=>i});var r=n(2164),a=n(9554),s=n(4148),o=n(1426);const i=(0,n(7892).op)({unsortedSegmentSum_:function(e,t,n){const i=(0,s.YT)(e,"x","unsortedSegmentSum"),l=(0,s.YT)(t,"segmentIds","unsortedSegmentSum","int32");(0,o.vA)((0,o.E6)(n),(()=>"numSegments must be of dtype int"));const u={x:i,segmentIds:l},c={numSegments:n};return r.T2.runKernel(a.pPe,u,c)}})},5162:(e,t,n)=>{"use strict";n.d(t,{N:()=>i});var r=n(2164),a=n(9554),s=n(8804),o=n(4148);const i=(0,n(7892).op)({matMul_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=arguments.length>3&&void 0!==arguments[3]&&arguments[3],l=(0,o.YT)(e,"a","matMul"),u=(0,o.YT)(t,"b","matMul");[l,u]=(0,s.makeTypesMatch)(l,u);const c={a:l,b:u},d={transposeA:n,transposeB:i};return r.T2.runKernel(a.jAQ,c,d)}})},5181:(e,t,n)=>{"use strict";n.d(t,{l:()=>o});var r=n(2164),a=n(9554),s=n(4148);const o=(0,n(7892).op)({split_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const o={x:(0,s.YT)(e,"x","split")},i={numOrSizeSplits:t,axis:n};return r.T2.runKernel(a.Blb,o,i)}})},5251:(e,t,n)=>{"use strict";n.d(t,{V:()=>o});var r=n(2164),a=n(9554),s=n(4148);const o=(0,n(7892).op)({relu_:function(e){const t={x:(0,s.YT)(e,"x","relu")};return r.T2.runKernel(a.fUj,t)}})},5262:function(e,t,n){var r;!function(e,a){function s(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function i(e,t){var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=i:n.amdD&&n.amdO?void 0===(r=function(){return i}.call(t,n,t,a))||(a.exports=r):this.tychei=i}(0,e=n.nmd(e),n.amdD)},5284:(e,t,n)=>{"use strict";n.r(t),n.d(t,{MathBackendCPU:()=>o,shared:()=>i,version_cpu:()=>l});var r=n(5743),a=n(3143);const s=r.kernel_impls.whereImpl;class o extends r.KernelBackend{nextDataId(){return o.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new r.DataStorage(this,(0,r.engine)())}write(e,t,n){this.firstUse&&(this.firstUse=!1,(0,r.env)().get("IS_NODE")&&r.backend_util.warn("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));const a={id:this.nextDataId()};return this.data.set(a,{values:e,dtype:n,refCount:1}),a}makeTensorInfo(e,t,n){let a;if("string"===t&&null!=n&&n.length>0&&r.util.isString(n[0])){const s=n.map((e=>r.util.encodeString(e)));a=this.write(s,e,t)}else a=this.write(n,e,t);return{dataId:a,shape:e,dtype:t}}refCount(e){if(this.data.has(e)){return this.data.get(e).refCount}return 0}incRef(e){this.data.get(e).refCount++}decRef(e){if(this.data.has(e)){this.data.get(e).refCount--}}move(e,t,n,r,a){this.data.set(e,{values:t,dtype:r,refCount:a})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){const e=this.readSync(n.real.dataId),t=this.readSync(n.imag.dataId);return r.backend_util.mergeRealAndImagArrays(e,t)}return r.util.convertBackendValuesAndArrayBuffer(this.data.get(e).values,t)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>r.util.decodeString(e)));return(0,r.buffer)(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return(0,r.buffer)(e.shape,e.dtype,t)}makeOutput(e,t,n){return(0,r.engine)().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=r.util.now();e();return{kernelMs:r.util.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){(0,a.C)([e],"where");const t=this.readSync(e.dataId);return s(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}o.nextDataId=0;var i=n(3249);const l="4.22.0";(0,r.registerBackend)("cpu",(()=>new o),1);var u=n(4729);const c=(0,u.v)(r.Elu,(e=>e>=0?e:Math.exp(e)-1)),d={kernelName:r.Elu,backendName:"cpu",kernelFunc:c};var p=n(3701);function h(e){const{inputs:t,backend:n,attrs:s}=e,{x:o}=t,{alpha:i}=s;(0,a.C)([o],"leakyRelu");const l=r.util.sizeFromShape(o.shape),u=n.data.get(o.dataId).values,c=r.util.getTypedArrayFromDType("float32",l);for(let r=0;r<u.length;r++)c[r]=u[r]<0?i*u[r]:u[r];return n.makeTensorInfo(o.shape,"float32",c)}const f={kernelName:r.LeakyRelu,backendName:"cpu",kernelFunc:h};var m=n(2312);const g=(0,m.Z)(((e,t)=>e<0?t*e:e));function y(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t;(0,a.C)([r,s],"prelu");const o=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,[l,u]=g(r.shape,s.shape,o,i,"float32");return n.makeTensorInfo(u,"float32",l)}const b={kernelName:r.Prelu,backendName:"cpu",kernelFunc:y},v=(0,u.v)(r.Relu,(e=>Math.max(0,e))),x={kernelName:r.Relu,backendName:"cpu",kernelFunc:v},k=(0,u.v)(r.Relu6,(e=>Math.min(Math.max(0,e),6))),w={kernelName:r.Relu6,backendName:"cpu",kernelFunc:k};var S=n(2511);function T(e,t,n,r,a){if("linear"===n)return(0,p.D)({inputs:{x:t},backend:e});if("relu"===n)return v({inputs:{x:t},backend:e});if("elu"===n)return c({inputs:{x:t},backend:e});if("relu6"===n)return k({inputs:{x:t},backend:e});if("prelu"===n)return y({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return h({inputs:{x:t},backend:e,attrs:{alpha:a}});if("sigmoid"===n)return(0,S.ry)({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}var N=n(9864);function I(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{shape:o}=a,i=r.util.sizeFromShape(s.shape),l=r.util.inferFromImplicitShape(o,i),u=r.util.sizeFromShape(l);r.util.assert(i===u,(()=>`The new shape (${l}) has ${u} elements and the old shape (${s.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(s.dataId);const c=n.data.get(s.dataId);if(null!=c.complexTensorInfos){const e=c.complexTensorInfos.real,t=c.complexTensorInfos.imag;e.shape=l,t.shape=l}return{dataId:s.dataId,shape:l,dtype:s.dtype}}const C={kernelName:r.Reshape,backendName:"cpu",kernelFunc:I};function E(e){const{inputs:t,backend:n,attrs:s}=e,{a:o,b:i}=t,{transposeA:l,transposeB:u}=s;(0,a.C)([o,i],"matMul");const c=o.shape.length,d=i.shape.length,p=l?o.shape[c-2]:o.shape[c-1],h=u?i.shape[d-1]:i.shape[d-2],f=l?o.shape[c-1]:o.shape[c-2],m=u?i.shape[d-2]:i.shape[d-1],g=o.shape.slice(0,-2),y=i.shape.slice(0,-2),b=r.util.sizeFromShape(g),v=r.util.sizeFromShape(y),x=r.broadcast_util.assertAndGetBroadcastShape(o.shape.slice(0,-2),i.shape.slice(0,-2)).concat([f,m]);r.util.assert(p===h,(()=>`Error in matMul: inner shapes (${p}) and (${h}) of Tensors with shapes ${o.shape} and ${i.shape} and transposeA=${l} and transposeB=${u} must match.`));const k=u?[v,m,h]:[v,h,m],w=I({inputs:{x:o},backend:n,attrs:{shape:l?[b,p,f]:[b,f,p]}}),S=I({inputs:{x:i},backend:n,attrs:{shape:k}}),T=l?w.shape[1]:w.shape[2],N=l?w.shape[2]:w.shape[1],C=u?S.shape[1]:S.shape[2],E=Math.max(b,v),$=n.data.get(w.dataId).values,A=n.data.get(S.dataId).values,_=r.util.computeStrides(w.shape),R=r.util.computeStrides(S.shape),[F,O,D]=l?[_[0],1,_[1]]:[_[0],_[1],1],[M,P,L]=u?[1,R[1],R[0]]:[R[1],1,R[0]],z=N*C,B=(0,r.buffer)([E,N,C],w.dtype),V=B.values,W=n.blockSize;for(let r=0;r<E;r++){const e=r%b,t=r%v;for(let n=0;n<N;n+=W){const a=Math.min(n+W,N);for(let s=0;s<C;s+=W){const o=Math.min(s+W,C);for(let i=0;i<T;i+=W){const l=Math.min(i+W,T);for(let u=n;u<a;u++)for(let n=s;n<o;n++){let a=0;for(let r=i;r<l;r++){a+=$[e*F+u*O+r*D]*A[r*M+n*P+t*L]}V[r*z+(u*C+n)]+=a}}}}}return n.disposeIntermediateTensorInfo(w),n.disposeIntermediateTensorInfo(S),n.makeTensorInfo(x,B.dtype,B.values)}const $={kernelName:r.BatchMatMul,backendName:"cpu",kernelFunc:E};const A={kernelName:r._FusedMatMul,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:s,bias:o,preluActivationWeights:i}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:d}=r;let p,h,f;const m=[];p=E({inputs:{a:a,b:s},attrs:{transposeA:l,transposeB:u},backend:n}),o&&(h=(0,N.WQ)({inputs:{a:p,b:o},backend:n}),m.push(p),p=h),c&&(f=T(n,p,c,i,d),m.push(p),p=f);for(const g of m)n.disposeIntermediateTensorInfo(g);return p}};var _=n(5903);const R=(0,u.v)(r.Acos,(e=>Math.acos(e))),F={kernelName:r.Acos,backendName:"cpu",kernelFunc:R},O=(0,u.v)(r.Acosh,(e=>Math.acosh(e))),D={kernelName:r.Acosh,backendName:"cpu",kernelFunc:O};const M={kernelName:r.AddN,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,s=t;(0,a.C)(t,"addN");const o=s.map((e=>n.data.get(e.dataId).values)),i=(0,r.buffer)(s[0].shape,s[0].dtype),l=i.values;for(let r=0;r<s.length;r++){const e=o[r];for(let t=0;t<l.length;t++)l[t]+=e[t]}return n.makeTensorInfo(i.shape,i.dtype,i.values)}};var P=n(9868);const L={kernelName:r.All,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:o}=t,{axis:i,keepDims:l}=s;(0,a.C)(o,"all");const u=r.util.parseAxisParam(i,o.shape);let c=u;const d=r.backend_util.getAxesPermutation(c,o.shape.length);let p=o;null!=d&&(p=(0,P.m)({inputs:{x:o},backend:n,attrs:{perm:d}}),c=r.backend_util.getInnerMostAxes(c.length,o.shape.length)),r.backend_util.assertAxesAreInnerMostDims("all",c,p.shape.length);const[h,f]=r.backend_util.computeOutAndReduceShapes(p.shape,c),m=r.util.sizeFromShape(f),g=r.util.makeZerosTypedArray(r.util.sizeFromShape(h),p.dtype),y=n.data.get(p.dataId).values;for(let r=0;r<g.length;++r){const e=r*m;let t=y[e];for(let n=0;n<m;++n){const r=y[e+n];t=t&&r}g[r]=t}null!=d&&n.disposeIntermediateTensorInfo(p);const b=n.makeTensorInfo(h,p.dtype,g);if(l){const e=I({inputs:{x:b},backend:n,attrs:{shape:r.backend_util.expandShapeToKeepDim(h,u)}});return n.disposeIntermediateTensorInfo(b),e}return b}};const z={kernelName:r.Any,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:o}=t,{axis:i,keepDims:l}=s;(0,a.C)(o,"any");const u=r.util.parseAxisParam(i,o.shape);let c=u;const d=r.backend_util.getAxesPermutation(c,o.shape.length);let p=o;null!=d&&(p=(0,P.m)({inputs:{x:o},backend:n,attrs:{perm:d}}),c=r.backend_util.getInnerMostAxes(c.length,o.shape.length)),r.backend_util.assertAxesAreInnerMostDims("any",c,p.shape.length);const[h,f]=r.backend_util.computeOutAndReduceShapes(p.shape,c),m=r.util.sizeFromShape(f),g=r.util.makeZerosTypedArray(r.util.sizeFromShape(h),p.dtype),y=n.data.get(p.dataId).values;for(let r=0;r<g.length;++r){const e=r*m;let t=y[e];for(let n=0;n<m;++n){const r=y[e+n];t=t||r}g[r]=t}null!=d&&n.disposeIntermediateTensorInfo(p);const b=n.makeTensorInfo(h,p.dtype,g);if(l){const e=I({inputs:{x:b},backend:n,attrs:{shape:r.backend_util.expandShapeToKeepDim(h,u)}});return n.disposeIntermediateTensorInfo(b),e}return b}};const B={kernelName:r.ArgMax,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:o}=t,{axis:i}=s;(0,a.C)(o,"argMax");let l=r.util.parseAxisParam(i,o.shape);const u=r.backend_util.getAxesPermutation(l,o.shape.length);let c=o;const d=[];null!=u&&(c=(0,P.m)({inputs:{x:o},backend:n,attrs:{perm:u}}),d.push(c),l=r.backend_util.getInnerMostAxes(l.length,c.shape.length)),l=[l[0]],r.backend_util.assertAxesAreInnerMostDims("argMax",l,c.shape.length);const[p,h]=r.backend_util.computeOutAndReduceShapes(c.shape,l),f=r.util.sizeFromShape(p),m=r.util.makeZerosTypedArray(f,"int32"),g=r.util.sizeFromShape(h),y=n.data.get(c.dataId).values;for(let r=0;r<m.length;++r){const e=r*g;let t=y[e],n=0;for(let r=0;r<g;++r){const a=y[e+r];a>t&&(t=a,n=r)}m[r]=n}return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(p,"int32",m)}};const V={kernelName:r.ArgMin,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:o}=t,{axis:i}=s;(0,a.C)(o,"argMin");let l=r.util.parseAxisParam(i,o.shape);const u=r.backend_util.getAxesPermutation(l,o.shape.length);let c=o;const d=[];null!=u&&(c=(0,P.m)({inputs:{x:o},backend:n,attrs:{perm:u}}),d.push(c),l=r.backend_util.getInnerMostAxes(l.length,c.shape.length)),l=[l[0]],r.backend_util.assertAxesAreInnerMostDims("argMin",l,c.shape.length);const[p,h]=r.backend_util.computeOutAndReduceShapes(c.shape,l),f=r.util.sizeFromShape(p),m=r.util.makeZerosTypedArray(f,"int32"),g=r.util.sizeFromShape(h),y=n.data.get(c.dataId).values;for(let r=0;r<m.length;++r){const e=r*g;let t=y[e],n=0;for(let r=0;r<g;++r){const a=y[e+r];a<t&&(t=a,n=r)}m[r]=n}return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(p,"int32",m)}},W=(0,u.v)(r.Asin,(e=>Math.asin(e))),U={kernelName:r.Asin,backendName:"cpu",kernelFunc:W},G=(0,u.v)(r.Asinh,(e=>Math.asinh(e))),j={kernelName:r.Asinh,backendName:"cpu",kernelFunc:G},H=(0,u.v)(r.Atan,(e=>Math.atan(e))),Y={kernelName:r.Atan,backendName:"cpu",kernelFunc:H};var q=n(5101);const K=(0,m.Z)(((e,t)=>Math.atan2(e,t))),X=(0,q.j)(r.Atan2,K),Z={kernelName:r.Atan2,backendName:"cpu",kernelFunc:X},Q=(0,u.v)(r.Atanh,(e=>Math.atanh(e))),J={kernelName:r.Atanh,backendName:"cpu",kernelFunc:Q};function ee(e,t,n,a,s,o){const i=s.strideHeight,l=s.strideWidth,u=s.dilationHeight,c=s.dilationWidth,d=s.effectiveFilterHeight,p=s.effectiveFilterWidth,h=s.padInfo.top,f=s.padInfo.left,m="max"===o?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,g=(0,r.buffer)(s.outShape,n),y=g.values,b=s.outShape[1]*s.outShape[2]*s.outShape[3],v=s.outShape[2]*s.outShape[3],x=s.outShape[3];for(let r=0;r<s.batchSize;++r){const t=r*b,n=r*a[0];for(let r=0;r<s.inChannels;++r)for(let g=0;g<s.outHeight;++g){const b=g*i-h,k=Math.max(0,b),w=Math.min(s.inHeight,d+b),S=t+g*v;for(let t=0;t<s.outWidth;++t){const i=t*l-f,d=Math.max(0,i),h=Math.min(s.inWidth,p+i);let g=m,b=0,v=0;for(let t=k;t<w;t+=u){const s=n+t*a[1];for(let t=d;t<h;t+=c){const n=e[s+t*a[2]+r];"max"===o&&n>g?g=n:"avg"===o&&(b+=n,v++)}if(isNaN(g))break}y[S+t*x+r]="avg"===o?b/v:g}}}return g}function te(e,t,n,a){let s=arguments.length>4&&void 0!==arguments[4]&&arguments[4],o=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const i=(0,r.buffer)(a.outShape,"int32"),l=a.strideHeight,u=a.strideWidth,c=a.dilationHeight,d=a.dilationWidth,p=a.effectiveFilterHeight,h=a.effectiveFilterWidth,f=a.padInfo.top,m=a.padInfo.left,g=(0,r.buffer)(t,n,e);for(let r=0;r<a.batchSize;++r)for(let e=0;e<a.inChannels;++e)for(let t=0;t<a.outHeight;++t){const n=t*l-f;let y=n;for(;y<0;)y+=c;const b=Math.min(a.inHeight,p+n);for(let l=0;l<a.outWidth;++l){const p=l*u-m;let f=p;for(;f<0;)f+=d;const v=Math.min(a.inWidth,h+p);let x=Number.NEGATIVE_INFINITY,k=-1;for(let t=y;t<b;t+=c){const i=t-n;for(let n=f;n<v;n+=d){const l=n-p,u=g.get(r,t,n,e);u>x&&(x=u,k=s?o?((r*a.inHeight+t)*a.inWidth+n)*a.inChannels+e:(t*a.inWidth+n)*a.inChannels+e:i*h+l)}}i.set(k,r,t,l,e)}}return i}function ne(e,t,n,a,s,o){const i=s.strideDepth,l=s.strideHeight,u=s.strideWidth,c=s.dilationDepth,d=s.dilationHeight,p=s.dilationWidth,h=s.effectiveFilterDepth,f=s.effectiveFilterHeight,m=s.effectiveFilterWidth,g=s.padInfo.front,y=s.padInfo.top,b=s.padInfo.left,v="max"===o?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=(0,r.buffer)(s.outShape,n),k=x.values,w=s.outShape[1]*s.outShape[2]*s.outShape[3]*s.outShape[4],S=s.outShape[2]*s.outShape[3]*s.outShape[4],T=s.outShape[3]*s.outShape[4],N=s.outShape[4];for(let r=0;r<s.batchSize;++r){const t=r*w,n=r*a[0];for(let r=0;r<s.inChannels;++r)for(let x=0;x<s.outDepth;++x){const w=x*i-g;let I=w;for(;I<0;)I+=c;const C=Math.min(s.inDepth,h+w),E=t+x*S;for(let t=0;t<s.outHeight;++t){const i=t*l-y;let h=i;for(;h<0;)h+=d;const g=Math.min(s.inHeight,f+i),x=E+t*T;for(let t=0;t<s.outWidth;++t){const i=t*u-b;let l=i;for(;l<0;)l+=p;const f=Math.min(s.inWidth,m+i),y=x+t*N;let w=v,S=0,T=0;for(let t=I;t<C;t+=c){const s=n+t*a[1];for(let t=h;t<g;t+=d){const n=s+t*a[2];for(let t=l;t<f;t+=p){const s=e[n+t*a[3]+r];if("max"===o&&s>w?w=s:"avg"===o&&(S+=s,T++),isNaN(w))break}if(isNaN(w))break}if(isNaN(w))break}k[y+r]="avg"===o?S/Math.max(T,1):w}}}}return x}const re={kernelName:r.AvgPool,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:o}=t;(0,a.C)(o,"avgPool");const{filterSize:i,strides:l,pad:u,dimRoundingMode:c}=s;r.util.assert(r.backend_util.eitherStridesOrDilationsAreOne(l,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${l} and dilations '1'`));const d=r.backend_util.computePool2DInfo(o.shape,i,l,1,u,c);let h;if(1===d.filterWidth&&1===d.filterHeight&&r.util.arraysEqual(d.inShape,d.outShape))h=(0,p.D)({inputs:{x:o},backend:n});else{const e=n.data.get(o.dataId).values,t=r.util.computeStrides(o.shape),a=ee(e,o.shape,o.dtype,t,d,"avg");h=n.makeTensorInfo(d.outShape,o.dtype,a.values)}return h}};const ae={kernelName:r.AvgPool3D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:o}=t,{filterSize:i,strides:l,pad:u,dimRoundingMode:c,dataFormat:d}=s;(0,a.C)(o,"avgPool3d");const p=r.backend_util.computePool3DInfo(o.shape,i,l,1,u,c,d),h=ne(n.data.get(o.dataId).values,o.shape,o.dtype,r.util.computeStrides(o.shape),p,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}};const se={kernelName:r.AvgPool3DGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:o,input:i}=t,{filterSize:l,strides:u,pad:c,dimRoundingMode:d}=s;(0,a.C)([o,i],"avgPool3DGrad");const p=r.backend_util.computePool3DInfo(i.shape,l,u,1,c,d),h=p.strideDepth,f=p.strideHeight,m=p.strideWidth,g=p.filterDepth,y=p.filterHeight,b=p.filterWidth,v=p.dilationDepth,x=p.dilationHeight,k=p.dilationWidth,w=p.effectiveFilterDepth,S=p.effectiveFilterHeight,T=p.effectiveFilterWidth,N=w-1-p.padInfo.front,I=T-1-p.padInfo.left,C=S-1-p.padInfo.top,E=(0,r.buffer)(i.shape,"float32"),$=1/(g*y*b),A=n.bufferSync(o);for(let r=0;r<p.batchSize;++r)for(let e=0;e<p.inChannels;++e)for(let t=0;t<p.inDepth;++t)for(let n=0;n<p.inHeight;++n)for(let a=0;a<p.inWidth;++a){const s=t-N,o=n-C,i=a-I;let l=0;for(let t=0;t<w;t+=v){const n=(s+t)/h;if(!(n<0||n>=p.outDepth||Math.floor(n)!==n))for(let t=0;t<S;t+=x){const a=(o+t)/f;if(!(a<0||a>=p.outHeight||Math.floor(a)!==a))for(let t=0;t<T;t+=k){const s=(i+t)/m;if(s<0||s>=p.outWidth||Math.floor(s)!==s)continue;l+=A.get(r,n,a,s,e)}}}E.set(l*$,r,t,n,a,e)}return n.makeTensorInfo(E.shape,E.dtype,E.values)}};const oe={kernelName:r.AvgPoolGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:o,input:i}=t,l=i;(0,a.C)([o,i],"avgPoolGrad");const{filterSize:u,strides:c,pad:d}=s,p=r.backend_util.computePool2DInfo(l.shape,u,c,1,d),h=p.strideHeight,f=p.strideWidth,m=p.filterHeight,g=p.filterWidth,y=p.dilationHeight,b=p.dilationWidth,v=p.effectiveFilterHeight,x=p.effectiveFilterWidth,k=x-1-p.padInfo.left,w=v-1-p.padInfo.top,S=(0,r.buffer)(l.shape,"float32"),T=1/(m*g),N=n.data.get(o.dataId).values,I=(0,r.buffer)(o.shape,"float32",N);for(let r=0;r<p.batchSize;++r)for(let e=0;e<p.inChannels;++e)for(let t=0;t<p.inHeight;++t)for(let n=0;n<p.inWidth;++n){const a=t-w,s=n-k;let o=0;for(let t=0;t<v;t+=y){const n=(a+t)/h;if(!(n<0||n>=p.outHeight||Math.floor(n)!==n))for(let t=0;t<x;t+=b){const a=(s+t)/f;if(a<0||a>=p.outWidth||Math.floor(a)!==a)continue;o+=I.get(r,n,a,e)}}S.set(o*T,r,t,n,e)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}};const ie={kernelName:r.FusedBatchNorm,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:o,scale:i,offset:l,mean:u,variance:c}=t;r.util.assert(u.shape.length===c.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),r.util.assert(null==l||u.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),r.util.assert(null==i||u.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),(0,a.C)([o,u,c,i,l],"batchNorm");let{varianceEpsilon:d}=s;null==d&&(d=.001);const p=n.data.get(o.dataId).values,h=n.data.get(u.dataId).values,f=n.data.get(c.dataId).values,m=i?n.data.get(i.dataId).values:new Float32Array([1]),g=l?n.data.get(l.dataId).values:new Float32Array([0]),y=new Float32Array(p.length),b=g.length,v=m.length,x=f.length,k=h.length;let w=0,S=0,T=0,N=0;for(let r=0;r<p.length;++r)y[r]=g[w++]+(p[r]-h[S++])*m[T++]/Math.sqrt(f[N++]+d),w>=b&&(w=0),S>=k&&(S=0),T>=v&&(T=0),N>=x&&(N=0);return n.makeTensorInfo(o.shape,o.dtype,y)}};var le=n(4357);const ue={kernelName:r.BatchToSpaceND,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:o}=t,{blockShape:i,crops:l}=s;(0,a.C)([o],"batchToSpaceND");const u=i.reduce(((e,t)=>e*t)),c=r.backend_util.getReshaped(o.shape,i,u),d=r.backend_util.getPermuted(c.length,i.length),p=r.backend_util.getReshapedPermuted(o.shape,i,u),h=r.backend_util.getSliceBeginCoords(l,i.length),f=r.backend_util.getSliceSize(p,l,i.length),m=I({inputs:{x:o},backend:n,attrs:{shape:c}}),g=(0,P.m)({inputs:{x:m},backend:n,attrs:{perm:d}}),y=I({inputs:{x:g},backend:n,attrs:{shape:p}}),b=(0,le.di)({inputs:{x:y},backend:n,attrs:{begin:h,size:f}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(y),b}};var ce=n(2412);const de={kernelName:r.Bincount,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:o}=r,i=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,u=(0,ce.X)(i,l,s.dtype,s.shape,o);return n.makeTensorInfo([o],s.dtype,u)}};var pe=n(9475);const he={kernelName:r.BroadcastArgs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:a,s1:s}=t,o=n.data.get(a.dataId).values,i=n.data.get(s.dataId).values,l=r.backend_util.assertAndGetBroadcastShape(Array.from(o),Array.from(i));return n.makeTensorInfo([l.length],"int32",Int32Array.from(l))}};var fe=n(668),me=n(4034);const ge=(0,u.v)(r.ClipByValue,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),ye={kernelName:r.ClipByValue,backendName:"cpu",kernelFunc:ge};var be=n(3075);const ve={kernelName:r.ComplexAbs,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,a=new Float32Array(r.util.sizeFromShape(t.shape)),s=n.data.get(t.dataId),o=s.complexTensorInfos.real,i=s.complexTensorInfos.imag,l=n.data.get(o.dataId).values,u=n.data.get(i.dataId).values;for(let r=0;r<l.length;r++){const e=l[r],t=u[r];a[r]=Math.hypot(e,t)}return n.makeOutput(a,t.shape,"float32")}};var xe=n(9044);function ke(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.imag,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}const we={kernelName:r.Imag,backendName:"cpu",kernelFunc:ke};var Se=n(5995);function Te(e){const{inputs:t,backend:n,attrs:a}=e,{axis:s}=a,o=r.util.parseAxisParam(s,t[0].shape)[0],i=t.map((e=>e.shape));r.backend_util.assertParamsConsistent(i,o);let l=r.backend_util.computeOutShape(t.map((e=>e.shape)),o);if(0===r.util.sizeFromShape(l))return n.makeTensorInfo(l,t[0].dtype,[]);const u=t.filter((e=>r.util.sizeFromShape(e.shape)>0));if(1===u.length)return(0,p.D)({inputs:{x:u[0]},backend:n});if("complex64"===u[0].dtype){const e=u.map((e=>(0,Se.x)({inputs:{input:e},backend:n}))),t=u.map((e=>ke({inputs:{input:e},backend:n}))),r=Te({inputs:e,backend:n,attrs:{axis:o}}),a=Te({inputs:t,backend:n,attrs:{axis:o}}),s=(0,be.f)({inputs:{real:r,imag:a},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),s}const c=u.map((e=>{const t=r.util.sizeFromShape(e.shape.slice(o));return I({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),d=c.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));l=r.backend_util.computeOutShape(c.map((e=>e.shape)),1);const h=1===c[0].shape[0],f=(0,xe.h)(d,l,t[0].dtype,h),m=r.backend_util.computeOutShape(u.map((e=>e.shape)),o),g=n.makeTensorInfo(m,t[0].dtype,f);return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}const Ne={kernelName:r.Concat,backendName:"cpu",kernelFunc:Te};function Ie(e){const{inputs:t,backend:n,attrs:s}=e,{x:o,filter:i}=t,{strides:l,pad:u,dataFormat:c,dilations:d,dimRoundingMode:p}=s;(0,a.C)([o,i],"conv2d");const h=r.backend_util.convertConv2DDataFormat(c),f=r.backend_util.computeConv2DInfo(o.shape,i.shape,l,d,u,p,!1,h),m=f.filterHeight,g=f.filterWidth,y=f.dilationHeight,b=f.dilationWidth,v=f.padInfo.left,x=f.padInfo.top,k="channelsLast"===f.dataFormat,w=new r.TensorBuffer(f.outShape,o.dtype),S=r.util.computeStrides(o.shape),T=r.util.computeStrides(i.shape),N=S[0],I=k?S[1]:S[2],C=k?S[2]:1,E=k?1:S[1],$=w.strides[0],A=k?w.strides[1]:w.strides[2],_=k?w.strides[2]:1,R=k?1:w.strides[1],F=n.data.get(o.dataId).values,O=n.data.get(i.dataId).values,D=w.values;for(let r=0;r<f.batchSize;++r){const e=r*N,t=r*$;for(let n=0;n<f.outHeight;++n){const r=t+n*A,a=n*f.strideHeight-x;for(let t=0;t<m;++t){const n=a+t*y;if(n<0||n>=f.inHeight)continue;const s=t*T[0],o=e+n*I;for(let e=0;e<f.outWidth;++e){const t=r+e*_,n=e*f.strideWidth-v;for(let e=0;e<g;++e){const r=n+e*b;if(r<0||r>=f.inWidth)continue;const a=o+r*C;let i=s+e*T[1];for(let e=0;e<f.inChannels;++e){const n=F[a+e*E];for(let e=0;e<f.outChannels;++e)D[t+e*R]+=n*O[i+e];i+=f.outChannels}}}}}}return n.makeTensorInfo(w.shape,w.dtype,D)}const Ce={kernelName:r.Conv2D,backendName:"cpu",kernelFunc:Ie};const Ee={kernelName:r.Conv2DBackpropFilter,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:o,dy:i}=t,{strides:l,pad:u,dataFormat:c,dimRoundingMode:d,filterShape:p}=s;(0,a.C)([o,i],"conv2dBackpropFilter");const h=r.backend_util.convertConv2DDataFormat(c),f=r.backend_util.computeConv2DInfo(o.shape,p,l,1,u,d,!1,h),{strideHeight:m,strideWidth:g,filterHeight:y,filterWidth:b}=f,v="channelsLast"===f.dataFormat,x=new r.TensorBuffer(f.filterShape,"float32"),k=f.padInfo.left,w=f.padInfo.top,S=n.data.get(o.dataId).values,T=n.data.get(i.dataId).values,N=new r.TensorBuffer(o.shape,o.dtype,S),I=new r.TensorBuffer(i.shape,i.dtype,T);for(let r=0;r<y;++r){const e=Math.max(0,Math.ceil((w-r)/m)),t=Math.min(f.outHeight,(f.inHeight+w-r)/m);for(let n=0;n<b;++n){const a=Math.max(0,Math.ceil((k-n)/g)),s=Math.min(f.outWidth,(f.inWidth+k-n)/g);for(let o=0;o<f.inChannels;++o)for(let i=0;i<f.outChannels;++i){let l=0;for(let u=0;u<f.batchSize;++u)for(let c=e;c<t;++c){const e=r+c*m-w;for(let t=a;t<s;++t){const r=n+t*g-k;l+=v?N.get(u,e,r,o)*I.get(u,c,t,i):N.get(u,o,e,r)*I.get(u,i,c,t)}}x.set(l,r,n,o,i)}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}};const $e={kernelName:r.Conv2DBackpropInput,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:o,filter:i}=t,{inputShape:l,strides:u,pad:c,dataFormat:d,dimRoundingMode:p}=s;(0,a.C)([o,i],"conv2dBackpropInput");const h=r.util.computeStrides(i.shape),f=r.util.computeStrides(o.shape);let m=r.backend_util.convertConv2DDataFormat(d);const g=r.backend_util.computeConv2DInfo(l,i.shape,u,1,c,p,!1,m),y=new r.TensorBuffer(g.inShape,"float32"),b=y.values,v=n.data.get(o.dataId).values,x=n.data.get(i.dataId).values,[k,w,S]=h,{batchSize:T,filterHeight:N,filterWidth:I,inChannels:C,inHeight:E,inWidth:$,outChannels:A,outHeight:_,outWidth:R,strideHeight:F,strideWidth:O}=g;m=g.dataFormat;const D=N-1-g.padInfo.top,M=I-1-g.padInfo.left,P="channelsLast"===m,L=y.strides[0],z=P?y.strides[1]:y.strides[2],B=P?y.strides[2]:1,V=P?1:y.strides[1],W=f[0],U=P?f[1]:f[2],G=P?f[2]:1,j=P?1:f[1];for(let r=0;r<T;++r)for(let e=0;e<C;++e)for(let t=0;t<E;++t){const n=t-D,a=Math.max(0,Math.ceil(n/F)),s=Math.min(_,(N+n)/F);for(let o=0;o<$;++o){const i=o-M,l=Math.max(0,Math.ceil(i/O)),u=Math.min(R,(I+i)/O);let c=0;for(let t=a;t<s;++t){const a=t*F-n;for(let n=l;n<u;++n){const s=W*r+U*t+G*n,o=k*(N-1-a)+w*(I-1-(n*O-i))+S*e;for(let e=0;e<A;++e){c+=v[s+j*e]*x[o+e]}}}b[L*r+z*t+B*o+V*e]=c}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}};const Ae={kernelName:r.Conv3D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:o,filter:i}=t,{strides:l,pad:u,dilations:c}=s;(0,a.C)([o,i],"conv3d");const d=r.backend_util.computeConv3DInfo(o.shape,i.shape,l,c,u),{filterDepth:p,filterHeight:h,filterWidth:f,dilationDepth:m,dilationHeight:g,dilationWidth:y,padInfo:b}=d,v=b.front,x=b.left,k=b.top,w=new r.TensorBuffer(d.outShape,o.dtype),S=n.data.get(o.dataId).values,T=n.data.get(i.dataId).values,N=w.values,I=r.util.computeStrides(o.shape),C=r.util.computeStrides(i.shape);for(let r=0;r<d.batchSize;++r){const e=r*I[0],t=r*w.strides[0];for(let n=0;n<d.outDepth;++n){const r=t+n*w.strides[1],a=n*d.strideDepth-v;for(let t=0;t<p;++t){const n=a+t*m;if(n<0||n>=d.inDepth)continue;const s=t*C[0],o=e+n*I[1];for(let e=0;e<d.outHeight;++e){const t=r+e*w.strides[2],n=e*d.strideHeight-k;for(let e=0;e<h;++e){const r=n+e*g;if(r<0||r>=d.inHeight)continue;const a=s+e*C[1],i=o+r*I[2];for(let e=0;e<d.outWidth;++e){const n=t+e*d.outChannels,r=e*d.strideWidth-x;for(let e=0;e<f;++e){const t=r+e*y;if(t<0||t>=d.inWidth)continue;const s=a+e*C[2],o=i+t*d.inChannels;let l=s;for(let e=0;e<d.inChannels;++e){const t=S[o+e];for(let e=0;e<d.outChannels;++e)N[n+e]+=t*T[l+e];l+=d.outChannels}}}}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}};const _e={kernelName:r.Conv3DBackpropFilterV2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:o,dy:i}=t,{strides:l,pad:u,filterShape:c}=s;(0,a.C)([o,i],"conv3dBackpropFilterV2");const d=r.util.computeStrides(o.shape),p=r.util.computeStrides(i.shape),h=r.backend_util.computeConv3DInfo(o.shape,c,l,1,u),f=h.strideDepth,m=h.strideHeight,g=h.strideWidth,y=h.filterDepth,b=h.filterHeight,v=h.filterWidth,x=new r.TensorBuffer(h.filterShape,"float32"),k=x.values,[w,S,T,N]=x.strides,I=n.data.get(i.dataId).values,[C,E,$,A]=p,_=n.data.get(o.dataId).values,[R,F,O,D]=d,M=h.padInfo.front,P=h.padInfo.left,L=h.padInfo.top;for(let r=0;r<y;++r){const e=Math.max(0,Math.ceil((M-r)/f)),t=Math.min(h.outDepth,(h.inDepth+M-r)/f),n=r*w;for(let a=0;a<b;++a){const s=Math.max(0,Math.ceil((L-a)/m)),o=Math.min(h.outHeight,(h.inHeight+L-a)/m),i=a*S+n;for(let n=0;n<v;++n){const l=Math.max(0,Math.ceil((P-n)/g)),u=Math.min(h.outWidth,(h.inWidth+P-n)/g),c=n*T+i;for(let i=0;i<h.inChannels;++i){const d=i*N+c;for(let c=0;c<h.outChannels;++c){let p=0;for(let d=0;d<h.batchSize;++d){const h=d*R,y=d*C;for(let d=e;d<t;++d){const e=(r+d*f-M)*F+h,t=d*E+y;for(let r=s;r<o;++r){const s=(a+r*m-L)*O+e,o=r*$+t;for(let e=l;e<u;++e){const t=e*A+o;p+=_[(n+e*g-P)*D+s+i]*I[t+c]}}}}k[d+c]=p}}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}};const Re={kernelName:r.Conv3DBackpropInputV2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:o,filter:i}=t,{pad:l,strides:u,inputShape:c}=s;(0,a.C)([o],"conv3dBackpropInputV2");const d=r.util.computeStrides(o.shape),p=r.util.computeStrides(i.shape),h=r.backend_util.computeConv3DInfo(c,i.shape,u,1,l),f=new r.TensorBuffer(h.inShape,"float32"),m=f.values,[g,y,b,v]=f.strides,x=n.data.get(o.dataId).values,[k,w,S,T]=d,N=n.data.get(i.dataId).values,[I,C,E,$]=p,{batchSize:A,filterDepth:_,filterHeight:R,filterWidth:F,inChannels:O,inDepth:D,inHeight:M,inWidth:P,outChannels:L,outDepth:z,outHeight:B,outWidth:V,strideDepth:W,strideHeight:U,strideWidth:G}=h,j=_-1-h.padInfo.front,H=R-1-h.padInfo.top,Y=F-1-h.padInfo.left;for(let r=0;r<A;++r)for(let e=0;e<O;++e)for(let t=0;t<D;++t){const n=t-j,a=Math.max(0,Math.ceil(n/W)),s=Math.min(z,(_+n)/W);for(let o=0;o<M;++o){const i=o-H,l=Math.max(0,Math.ceil(i/U)),u=Math.min(B,(R+i)/U);for(let c=0;c<P;++c){const d=c-Y,p=Math.max(0,Math.ceil(d/G)),h=Math.min(V,(F+d)/G);let f=0;for(let t=a;t<s;++t){const a=t*W-n;for(let n=l;n<u;++n){const s=n*U-i;for(let o=p;o<h;++o){const i=k*r+w*t+S*n+T*o,l=I*(_-1-a)+C*(R-1-s)+E*(F-1-(o*G-d))+$*e;for(let e=0;e<L;++e){f+=x[i+e]*N[l+e]}}}}m[g*r+y*t+b*o+v*c+e]=f}}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},Fe=(0,u.v)(r.Cos,(e=>Math.cos(e))),Oe={kernelName:r.Cos,backendName:"cpu",kernelFunc:Fe},De=(0,u.v)(r.Cosh,(e=>Math.cosh(e))),Me={kernelName:r.Cosh,backendName:"cpu",kernelFunc:De};const Pe={kernelName:r.CropAndResize,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{image:s,boxes:o,boxInd:i}=t,{cropSize:l,method:u,extrapolationValue:c}=a,[d,p,h,f]=s.shape,m=o.shape[0],[g,y]=l,b=(0,r.buffer)([m,g,y,f],"float32"),v=n.data.get(o.dataId).values,x=n.data.get(i.dataId).values,k=n.data.get(s.dataId).values,w=r.util.computeStrides(s.shape),S=r.util.computeStrides(b.shape);for(let r=0;r<m;r++){const e=4*r,t=v[e],n=v[e+1],a=v[e+2],s=v[e+3],o=x[r];if(o>=d)continue;const i=g>1?(a-t)*(p-1)/(g-1):0,l=y>1?(s-n)*(h-1)/(y-1):0;for(let d=0;d<g;d++){const e=g>1?t*(p-1)+d*i:.5*(t+a)*(p-1);if(e<0||e>p-1)for(let t=0;t<y;t++)for(let e=0;e<f;e++){const n=e+t*S[2]+d*S[1]+r*S[0];b.values[n]=c}else if("bilinear"===u){const t=Math.floor(e),a=Math.ceil(e),i=e-t;for(let e=0;e<y;e++){const u=y>1?n*(h-1)+e*l:.5*(n+s)*(h-1);if(u<0||u>h-1){for(let t=0;t<f;t++){const n=t+e*S[2]+d*S[1]+r*S[0];b.values[n]=c}continue}const p=Math.floor(u),m=Math.ceil(u),g=u-p;for(let n=0;n<f;n++){let s=n+p*w[2]+t*w[1]+o*w[0];const l=k[s];s=n+m*w[2]+t*w[1]+o*w[0];const u=k[s];s=n+p*w[2]+a*w[1]+o*w[0];const c=k[s];s=n+m*w[2]+a*w[1]+o*w[0];const h=l+(u-l)*g,f=c+(k[s]-c)*g;s=n+e*S[2]+d*S[1]+r*S[0],b.values[s]=h+(f-h)*i}}}else for(let t=0;t<y;++t){const a=y>1?n*(h-1)+t*l:.5*(n+s)*(h-1);if(a<0||a>h-1){for(let e=0;e<f;e++){const n=e+t*S[2]+d*S[1]+r*S[0];b.values[n]=c}continue}const i=Math.round(a),u=Math.round(e);for(let e=0;e<f;e++){const n=e+i*w[2]+u*w[1]+o*w[0],a=e+t*S[2]+d*S[1]+r*S[0];b.values[a]=k[n]}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};const Le={kernelName:r.Cumprod,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:o}=t,{axis:i,exclusive:l,reverse:u}=s;(0,a.C)(o,"cumprod");const c=r.backend_util.getAxesPermutation([i],o.shape.length);let d=o;null!=c&&(d=(0,P.m)({inputs:{x:o},backend:n,attrs:{perm:c}}));const p=r.backend_util.getInnerMostAxes(1,o.shape.length)[0];if(p!==d.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${d.shape.length-1} but got axis=${p}`);const h=(0,r.upcastType)(d.dtype,"int32"),f=r.util.makeOnesTypedArray(r.util.sizeFromShape(d.shape),h),m=n.data.get(d.dataId).values,g=d.shape[d.shape.length-1],y=u?(e,t)=>e+g-t-1:(e,t)=>e+t;for(let r=0;r<m.length;r+=g)for(let e=0;e<g;e++){const t=y(r,e);if(0===e)f[t]=l?1:m[t];else{const n=y(r,e-1);f[t]=l?m[n]*f[n]:m[t]*f[n]}}const b=n.makeTensorInfo(d.shape,h,f);if(null!=c){const e=r.backend_util.getUndoAxesPermutation(c),t=(0,P.m)({inputs:{x:b},backend:n,attrs:{perm:e}});return n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(d),t}return b}};const ze={kernelName:r.Cumsum,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:o}=t,{axis:i,exclusive:l,reverse:u}=s;(0,a.C)(o,"cumsum");const c=r.backend_util.getAxesPermutation([i],o.shape.length);let d=o;null!=c&&(d=(0,P.m)({inputs:{x:o},backend:n,attrs:{perm:c}}));const p=r.backend_util.getInnerMostAxes(1,o.shape.length)[0];if(p!==d.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${d.shape.length-1} but got axis=${p}`);const h=(0,r.upcastType)(d.dtype,"int32"),f=r.util.makeZerosTypedArray(r.util.sizeFromShape(d.shape),h),m=n.data.get(d.dataId).values,g=d.shape[d.shape.length-1],y=u?(e,t)=>e+g-t-1:(e,t)=>e+t;for(let r=0;r<m.length;r+=g)for(let e=0;e<g;e++){const t=y(r,e);if(0===e)f[t]=l?0:m[t];else{const n=y(r,e-1);f[t]=l?m[n]+f[n]:m[t]+f[n]}}const b=n.makeTensorInfo(d.shape,h,f);if(null!=c){const e=r.backend_util.getUndoAxesPermutation(c),t=(0,P.m)({inputs:{x:b},backend:n,attrs:{perm:e}});return n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(d),t}return b}};const Be={kernelName:r.DenseBincount,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:o,binaryOutput:i}=r;if(1===a.shape.length){const e=n.data.get(a.dataId).values,t=n.data.get(s.dataId).values,r=(0,ce.X)(e,t,s.dtype,s.shape,o);return n.makeTensorInfo([o],s.dtype,r)}if(2===a.shape.length){const e=n.bufferSync(a),t=n.bufferSync(s),r=(0,ce.N)(e,t,o,i);return n.makeTensorInfo(r.shape,s.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}};const Ve={kernelName:r.DepthToSpace,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{blockSize:o,dataFormat:i}=a;r.util.assert("NHWC"===i,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`));const l=s.shape[0],u=s.shape[1],c=s.shape[2],d=s.shape[3],p=u*o,h=c*o,f=d/(o*o),m=n.data.get(s.dataId).values,g=new Float32Array(l*p*h*f);let y=0;for(let r=0;r<l;++r)for(let e=0;e<p;++e){const t=Math.floor(e/o),n=e%o;for(let e=0;e<h;++e){const a=Math.floor(e/o),s=(n*o+e%o)*f;for(let e=0;e<f;++e){const n=e+s+d*(a+c*(t+u*r));g[y++]=m[n]}}}return n.makeTensorInfo([l,p,h,f],s.dtype,g)}};function We(e){const{inputs:t,backend:n,attrs:s}=e,{x:o,filter:i}=t,{strides:l,pad:u,dilations:c,dimRoundingMode:d}=s;(0,a.C)([o,i],"depthwiseConv2DNative");const p=r.util.computeStrides(o.shape),h=r.util.computeStrides(i.shape);let f=c;null==f&&(f=[1,1]),r.util.assert(r.backend_util.eitherStridesOrDilationsAreOne(l,f),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${f}'`));const m=r.backend_util.computeConv2DInfo(o.shape,i.shape,l,f,u,d,!0),{filterHeight:g,filterWidth:y,dilationHeight:b,dilationWidth:v,padInfo:x}=m,k=x.left,w=x.top,S=m.outChannels/m.inChannels,T=new r.TensorBuffer(m.outShape,o.dtype),N=n.data.get(o.dataId).values,I=n.data.get(i.dataId).values,C=T.values;for(let r=0;r<m.batchSize;++r){const e=r*p[0],t=r*T.strides[0];for(let n=0;n<m.outHeight;++n){const r=t+n*T.strides[1],a=n*m.strideHeight-w;for(let t=0;t<g;++t){const n=a+t*b;if(n<0||n>=m.inHeight)continue;const s=t*h[0],o=e+n*p[1];for(let e=0;e<m.outWidth;++e){const t=r+e*T.strides[2],n=e*m.strideWidth-k;for(let e=0;e<y;++e){const r=n+e*v;if(r<0||r>=m.inWidth)continue;const a=s+e*h[1],i=o+r*m.inChannels;let l=t,u=a;for(let e=0;e<m.inChannels;++e){const t=N[i+e];for(let e=0;e<S;++e)C[l+e]+=t*I[u+e];l+=S,u+=S}}}}}}return n.makeTensorInfo(T.shape,T.dtype,T.values)}const Ue={kernelName:r.DepthwiseConv2dNative,backendName:"cpu",kernelFunc:We};const Ge={kernelName:r.DepthwiseConv2dNativeBackpropFilter,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:o,dy:i}=t,{strides:l,dilations:u,pad:c,dimRoundingMode:d,filterShape:p}=s;(0,a.C)([o,i],"depthwiseConv2dNativeBackpropFilter");const h=r.backend_util.computeConv2DInfo(o.shape,p,l,u,c,d,!0),{strideHeight:f,strideWidth:m,filterHeight:g,filterWidth:y}=h,b=new r.TensorBuffer(h.filterShape,"float32"),v=h.padInfo.left,x=h.padInfo.top,k=h.outChannels/h.inChannels,w=n.data.get(o.dataId).values,S=new r.TensorBuffer(o.shape,o.dtype,w),T=n.data.get(i.dataId).values,N=new r.TensorBuffer(i.shape,i.dtype,T);for(let r=0;r<g;++r){const e=Math.max(0,Math.ceil((x-r)/f)),t=Math.min(h.outHeight,(h.inHeight+x-r)/f);for(let n=0;n<y;++n){const a=Math.max(0,Math.ceil((v-n)/m)),s=Math.min(h.outWidth,(h.inWidth+v-n)/m);for(let o=0;o<h.outChannels;++o){const i=Math.trunc(o/k),l=o%k;let u=0;for(let c=0;c<h.batchSize;++c)for(let l=e;l<t;++l){const e=r+l*f-x;for(let t=a;t<s;++t){const r=n+t*m-v;u+=S.get(c,e,r,i)*N.get(c,l,t,o)}}b.set(u,r,n,i,l)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};const je={kernelName:r.DepthwiseConv2dNativeBackpropInput,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:o,filter:i}=t,{strides:l,dilations:u,pad:c,dimRoundingMode:d,inputShape:p}=s;(0,a.C)([o,i],"depthwiseConv2DNativeBackpropInput");const h=r.util.computeStrides(o.shape),f=r.util.computeStrides(i.shape),m=r.backend_util.computeConv2DInfo(p,i.shape,l,u,c,d,!0),g=new r.TensorBuffer(m.inShape,"float32"),y=g.values,[b,v,x]=g.strides,k=n.data.get(o.dataId).values,[w,S,T]=h,N=n.data.get(i.dataId).values,[I,C,E]=f,{batchSize:$,filterHeight:A,filterWidth:_,inChannels:R,inHeight:F,inWidth:O,outChannels:D,outHeight:M,outWidth:P,strideHeight:L,strideWidth:z}=m,B=A-1-m.padInfo.top,V=_-1-m.padInfo.left,W=D/R;for(let r=0;r<$;++r)for(let e=0;e<R;++e)for(let t=0;t<F;++t){const n=t-B,a=Math.max(0,Math.ceil(n/L)),s=Math.min(M,(A+n)/L);for(let o=0;o<O;++o){const i=o-V,l=Math.max(0,Math.ceil(i/z)),u=Math.min(P,(_+i)/z);let c=0;for(let t=a;t<s;++t){const a=t*L-n;for(let n=l;n<u;++n){const s=w*r+S*t+T*n,o=I*(A-1-a)+C*(_-1-(n*z-i))+E*e;for(let t=0;t<W;++t){c+=k[s+(e*W+t)]*N[o+t]}}}y[b*r+v*t+x*o+e]=c}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}};const He={kernelName:r.Diag,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,s=r.util.sizeFromShape(a.shape),o=n.data.get(a.dataId).values,i=(0,r.buffer)([s,s],a.dtype),l=i.values;for(let r=0;r<o.length;r++)l[r*s+r]=o[r];const u=[...a.shape,...a.shape];return n.makeTensorInfo(u,i.dtype,i.values)}},Ye={kernelName:r.Dilation2D,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e;const{x:s,filter:o}=t,{strides:i,pad:l,dilations:u}=a,c=n,d=c.data.get(s.dataId).values,p=s.shape.length,h=c.data.get(o.dataId).values,f=o.shape.length,{batchSize:m,inHeight:g,inWidth:y,inChannels:b,outHeight:v,outWidth:x,padInfo:k,strideHeight:w,strideWidth:S,filterHeight:T,filterWidth:N,dilationHeight:I,dilationWidth:C,outShape:E}=r.backend_util.computeDilation2DInfo(s.shape,o.shape,i,l,"NHWC",u),$=r.util.sizeFromShape(E),A=E.length,_=r.util.getArrayFromDType(s.dtype,$);for(let R=0;R<m;++R)for(let e=0;e<v;++e){const t=e*w-k.top;for(let n=0;n<x;++n){const a=n*S-k.left;for(let i=0;i<b;++i){let l=Number.MIN_SAFE_INTEGER;for(let e=0;e<T;++e){const n=t+e*I;if(n>=0&&n<g)for(let t=0;t<N;++t){const u=a+t*C;if(u>=0&&u<y){const a=r.util.locToIndex([R,n,u,i],p,r.util.computeStrides(s.shape)),c=r.util.locToIndex([e,t,i],f,r.util.computeStrides(o.shape)),m=d[a]+h[c];m>l&&(l=m)}}}_[r.util.locToIndex([R,e,n,i],A,r.util.computeStrides(E))]=l}}}return{dataId:c.write(r.util.toTypedArray(_,s.dtype),E,s.dtype),shape:E,dtype:s.dtype}}},qe={kernelName:r.Dilation2DBackpropFilter,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e;const{x:s,filter:o,dy:i}=t,{strides:l,pad:u,dilations:c}=a,d=n,p=r.util.toNestedArray(s.shape,d.data.get(s.dataId).values),h=r.util.toNestedArray(o.shape,d.data.get(o.dataId).values),{batchSize:f,inHeight:m,inWidth:g,inChannels:y,outHeight:b,outWidth:v,padInfo:x,strideHeight:k,strideWidth:w,filterHeight:S,filterWidth:T,dilationHeight:N,dilationWidth:I,outShape:C}=r.backend_util.computeDilation2DInfo(s.shape,o.shape,l,u,"NHWC",c);r.util.assert(i.rank===C.length,(()=>`Error in ${r.Dilation2DBackpropFilter}, dy must have the same rank as output ${C.length}, but got ${i.rank}`));const E=r.util.toNestedArray(C,d.data.get(i.dataId).values),$=r.util.makeZerosNestedTypedArray(o.shape,o.dtype);for(let r=0;r<f;++r)for(let e=0;e<b;++e){const t=e*k-x.top;for(let n=0;n<v;++n){const a=n*w-x.left;for(let s=0;s<y;++s){let o=Number.MIN_SAFE_INTEGER,i=0,l=0;for(let e=0;e<S;++e){const n=t+e*N;if(n>=0&&n<m)for(let t=0;t<T;++t){const u=a+t*I;if(u>=0&&u<g){const a=p[r][n][u][s]+h[e][t][s];a>o&&(o=a,i=e,l=t)}}}$[i][l][s]+=E[r][e][n][s]}}}return{dataId:d.write(r.util.toTypedArray($,s.dtype),o.shape,o.dtype),shape:o.shape,dtype:o.dtype}}},Ke={kernelName:r.Dilation2DBackpropInput,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e;const{x:s,filter:o,dy:i}=t,{strides:l,pad:u,dilations:c}=a,d=n,p=r.util.toNestedArray(s.shape,d.data.get(s.dataId).values),h=r.util.toNestedArray(o.shape,d.data.get(o.dataId).values),{batchSize:f,inHeight:m,inWidth:g,inChannels:y,outHeight:b,outWidth:v,padInfo:x,strideHeight:k,strideWidth:w,filterHeight:S,filterWidth:T,dilationHeight:N,dilationWidth:I,outShape:C}=r.backend_util.computeDilation2DInfo(s.shape,o.shape,l,u,"NHWC",c);r.util.assert(i.rank===C.length,(()=>`Error in ${r.Dilation2DBackpropInput}, dy must have the same rank as output ${C.length}, but got ${i.rank}`));const E=r.util.toNestedArray(C,d.data.get(i.dataId).values),$=r.util.makeZerosNestedTypedArray(s.shape,s.dtype);for(let r=0;r<f;++r)for(let e=0;e<b;++e){const t=e*k-x.top;for(let n=0;n<v;++n){const a=n*w-x.left;for(let s=0;s<y;++s){let o=Number.MIN_SAFE_INTEGER,i=t<0?0:t,l=a<0?0:a;for(let e=0;e<S;++e){const n=t+e*N;if(n>=0&&n<m)for(let t=0;t<T;++t){const u=a+t*I;if(u>=0&&u<g){const a=p[r][n][u][s]+h[e][t][s];a>o&&(o=a,i=n,l=u)}}}$[r][i][l][s]+=E[r][e][n][s]}}}return{dataId:d.write(r.util.toTypedArray($,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};const Xe={kernelName:r.Draw,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a}=t,{canvas:s,options:o}=r,{contextOptions:i,imageOptions:l}=o||{},u=(null===l||void 0===l?void 0:l.alpha)||1,c=(null===i||void 0===i?void 0:i.contextType)||"2d";if("2d"!==c)throw new Error(`Context type ${i.contextType} is not supported by the CPU backend.`);const d=s.getContext(c,(null===i||void 0===i?void 0:i.contextAttributes)||{});if(null==d)throw new Error(`Could not get the context with ${c} type.`);const[p,h]=a.shape.slice(0,2),f=2===a.shape.length?1:a.shape[2],m=n.data.get(a.dataId).values,g="float32"===a.dtype?255:1,y=new Uint8ClampedArray(h*p*4);for(let v=0;v<p*h;++v){const e=[0,0,0,255*u];for(let n=0;n<f;n++){const t=m[v*f+n];if("float32"===a.dtype){if(t<0||t>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${t}.`)}else if("int32"===a.dtype&&(t<0||t>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${t}.`);1===f?(e[0]=t*g,e[1]=t*g,e[2]=t*g):e[n]=t*g}const t=4*v;y[t+0]=Math.round(e[0]),y[t+1]=Math.round(e[1]),y[t+2]=Math.round(e[2]),y[t+3]=Math.round(e[3])}s.width=h,s.height=p;const b=new ImageData(y,h,p);return d.putImageData(b,0,0),a}};var Ze=n(63),Qe=n(1908);function Je(e){const{inputs:t,backend:n,attrs:s}=e,{x:o}=t,{axis:i,keepDims:l}=s;let u;(0,a.C)(o,"sum"),u="bool"===o.dtype?(0,fe.wg)({inputs:{x:o},backend:n,attrs:{dtype:"int32"}}):(0,p.D)({inputs:{x:o},backend:n});const c=u.shape.length,d=r.util.parseAxisParam(i,u.shape),h=r.backend_util.getAxesPermutation(d,c);let f=d,m=u;null!=h&&(m=(0,P.m)({inputs:{x:u},backend:n,attrs:{perm:h}}),f=r.backend_util.getInnerMostAxes(f.length,c)),r.backend_util.assertAxesAreInnerMostDims("sum",f,m.shape.length);const[g,y]=r.backend_util.computeOutAndReduceShapes(m.shape,f),b=r.backend_util.upcastType(m.dtype,"int32");let v=(0,Qe.U)(n,g,b);const x=r.util.sizeFromShape(y),k=n.data.get(v.dataId).values,w=n.data.get(m.dataId).values;for(let r=0;r<k.length;++r){const e=r*x;let t=0;for(let n=0;n<x;++n)t+=w[e+n];k[r]=t}if(l){const e=v;v=I({inputs:{x:v},backend:n,attrs:{shape:r.backend_util.expandShapeToKeepDim(v.shape,d)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(u),null!=h&&n.disposeIntermediateTensorInfo(m),v}const et={kernelName:r.Sum,backendName:"cpu",kernelFunc:Je};const tt={kernelName:r.Einsum,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{equation:s}=a,o=t,{allDims:i,summedDims:l,idDims:u}=r.backend_util.decodeEinsumEquation(s,o.length);r.backend_util.checkEinsumDimSizes(i.length,u,o);const{path:c,steps:d}=r.backend_util.getEinsumComputePath(l,u),p=d.length;let h=null,f=i.length;const m=[];for(let g=0;g<p;++g){for(const e of d[g]){const{permutationIndices:t,expandDims:a}=r.backend_util.getEinsumPermutation(f,u[e]);let s;r.backend_util.isIdentityPermutation(t)?s=o[e]:(s=(0,P.m)({inputs:{x:o[e]},backend:n,attrs:{perm:t}}),m.push(s));const i=s.shape.slice();for(let e=0;e<a.length;++e)i.splice(a[e],0,1);r.util.arraysEqual(s.shape,i)||(s=I({inputs:{x:s},backend:n,attrs:{shape:i}}),m.push(s)),null===h?h=s:(h=(0,Ze.lw)({inputs:{a:s,b:h},backend:n}),m.push(h))}g<p-1&&(c[g]>=0&&(h=Je({inputs:{x:h},backend:n,attrs:{axis:c[g]-(i.length-f),keepDims:!1}}),m.push(h)),f--)}for(const r of m)r!==h&&n.disposeIntermediateTensorInfo(r);return h}};const nt={kernelName:r.EluGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:s,y:o}=t;(0,a.C)([s,o],"eluGrad");const i=new Float32Array(r.util.sizeFromShape(o.shape)),l=n.data.get(o.dataId).values,u=n.data.get(s.dataId).values;for(let r=0;r<l.length;++r){const e=l[r];i[r]=e>=0?u[r]:u[r]*(e+1)}return n.makeTensorInfo(o.shape,"float32",i)}};var rt=n(3439);const at=r.backend_util.ERF_P,st=r.backend_util.ERF_A1,ot=r.backend_util.ERF_A2,it=r.backend_util.ERF_A3,lt=r.backend_util.ERF_A4,ut=r.backend_util.ERF_A5,ct=(0,u.v)(r.Erf,(e=>{const t=Math.sign(e),n=Math.abs(e),r=1/(1+at*n);return t*(1-((((ut*r+lt)*r+it)*r+ot)*r+st)*r*Math.exp(-n*n))})),dt={kernelName:r.Erf,backendName:"cpu",kernelFunc:ct};var pt=n(4308);function ht(e){const{inputs:t,backend:n,attrs:a}=e,{input:s}=t,{dim:o}=a,i=s.shape.length,l=s.shape.slice();let u=o;return o<0&&(r.util.assert(-(i+1)<=o,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),u=i+o+1),l.splice(u,0,1),I({inputs:{x:s},backend:n,attrs:{shape:l}})}const ft={kernelName:r.ExpandDims,backendName:"cpu",kernelFunc:ht};var mt=n(7046);const gt=(0,m.Z)(((e,t)=>e/t)),yt=(0,q.j)(r.RealDiv,gt),bt={kernelName:r.RealDiv,backendName:"cpu",kernelFunc:yt};var vt=n(4413);function xt(e,t,n){const a=e.shape,s=a[0],o=a[1],i=n.data.get(e.dataId),l=i.complexTensorInfos.real,u=i.complexTensorInfos.imag,c=[s,o],d=r.util.sizeFromShape(c),p=r.util.getTypedArrayFromDType("float32",d),h=r.util.getTypedArrayFromDType("float32",d);for(let y=0;y<s;y++){const e=(0,le.di)({inputs:{x:l},backend:n,attrs:{begin:[y,0],size:[1,o]}}),a=(0,le.di)({inputs:{x:u},backend:n,attrs:{begin:[y,0],size:[1,o]}}),s=(0,be.f)({inputs:{real:e,imag:a},backend:n}),{real:i,imag:c}=kt(s,t,n),d=r.backend_util.mergeRealAndImagArrays(i,c);for(let t=0;t<o;t++){const e=r.backend_util.getComplexWithIndex(d,t);p[y*o+t]=e.real,h[y*o+t]=e.imag}n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s)}const f=n.makeTensorInfo(c,"float32",p),m=n.makeTensorInfo(c,"float32",h),g=(0,be.f)({inputs:{real:f,imag:m},backend:n});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}function kt(e,t,n){const a=r.util.sizeFromShape(e.shape),s=n.data.get(e.dataId),o=n.data.get(s.complexTensorInfos.real.dataId).values,i=n.data.get(s.complexTensorInfos.imag.dataId).values;if(0===((l=a)&l-1)){const s=wt(o,i,a,t,n),l=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(l,"float32",s.real),t=n.makeTensorInfo(l,"float32",s.imag),o=n.makeTensorInfo([],"float32",r.util.createScalarValue(a,"float32")),i=(0,p.D)({inputs:{x:o},backend:n}),u=bt.kernelFunc({inputs:{a:e,b:o},backend:n}),c=bt.kernelFunc({inputs:{a:t,b:i},backend:n}),d=n.data.get(u.dataId).values,h=n.data.get(c.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),{real:d,imag:h}}return s}{const e=function(e,t,n){const a=new Float32Array(2*t);for(let s=0;s<t;s++){let o=0,i=0;for(let a=0;a<t;a++){const l=r.backend_util.exponent(s*a,t,n),u=r.backend_util.getComplexWithIndex(e,a);o+=u.real*l.real-u.imag*l.imag,i+=u.real*l.imag+u.imag*l.real}n&&(o/=t,i/=t),r.backend_util.assignToTypedArray(a,o,i,s)}return a}(r.backend_util.mergeRealAndImagArrays(o,i),a,t);return r.backend_util.splitRealAndImagArrays(e)}var l}function wt(e,t,n,a,s){if(1===n)return{real:e,imag:t};const o=r.backend_util.mergeRealAndImagArrays(e,t),i=n/2,l=r.backend_util.complexWithEvenIndex(o),u=l.real,c=l.imag,d=[u.length],p=s.makeTensorInfo(d,"float32",u),h=s.makeTensorInfo(d,"float32",c),f=(0,be.f)({inputs:{real:p,imag:h},backend:s}),m=r.backend_util.complexWithOddIndex(o),g=m.real,y=m.imag,b=[g.length],v=s.makeTensorInfo(b,"float32",g),x=s.makeTensorInfo(b,"float32",y),k=(0,be.f)({inputs:{real:v,imag:x},backend:s}),w=wt(u,c,i,a,s),S=w.real,T=w.imag,I=[S.length],C=s.makeTensorInfo(I,"float32",S),E=s.makeTensorInfo(I,"float32",T),$=(0,be.f)({inputs:{real:C,imag:E},backend:s}),A=wt(g,y,i,a,s),_=A.real,R=A.imag,F=[_.length],O=s.makeTensorInfo(F,"float32",_),D=s.makeTensorInfo(F,"float32",R),M=(0,be.f)({inputs:{real:O,imag:D},backend:s}),P=r.backend_util.exponents(n,a),L=[P.real.length],z=s.makeTensorInfo(L,"float32",P.real),B=s.makeTensorInfo(L,"float32",P.imag),V=(0,be.f)({inputs:{real:z,imag:B},backend:s}),W=(0,Ze.lw)({inputs:{a:V,b:M},backend:s}),U=(0,N.WQ)({inputs:{a:$,b:W},backend:s}),G=(0,vt.jb)({inputs:{a:$,b:W},backend:s}),j=(0,Se.x)({inputs:{input:U},backend:s}),H=(0,Se.x)({inputs:{input:G},backend:s}),Y=ke({inputs:{input:U},backend:s}),q=ke({inputs:{input:G},backend:s}),K=Te({inputs:[j,H],backend:s,attrs:{axis:0}}),X=Te({inputs:[Y,q],backend:s,attrs:{axis:0}}),Z=s.data.get(K.dataId).values,Q=s.data.get(X.dataId).values;return s.disposeIntermediateTensorInfo(p),s.disposeIntermediateTensorInfo(h),s.disposeIntermediateTensorInfo(f),s.disposeIntermediateTensorInfo(v),s.disposeIntermediateTensorInfo(x),s.disposeIntermediateTensorInfo(k),s.disposeIntermediateTensorInfo(C),s.disposeIntermediateTensorInfo(E),s.disposeIntermediateTensorInfo($),s.disposeIntermediateTensorInfo(O),s.disposeIntermediateTensorInfo(D),s.disposeIntermediateTensorInfo(M),s.disposeIntermediateTensorInfo(z),s.disposeIntermediateTensorInfo(B),s.disposeIntermediateTensorInfo(V),s.disposeIntermediateTensorInfo(W),s.disposeIntermediateTensorInfo(U),s.disposeIntermediateTensorInfo(G),s.disposeIntermediateTensorInfo(j),s.disposeIntermediateTensorInfo(Y),s.disposeIntermediateTensorInfo(H),s.disposeIntermediateTensorInfo(q),s.disposeIntermediateTensorInfo(K),s.disposeIntermediateTensorInfo(X),{real:Z,imag:Q}}const St={kernelName:r.FFT,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t,s=r.util.sizeFromShape(a.shape),o=a.shape[a.shape.length-1],i=I({inputs:{x:a},backend:n,attrs:{shape:[s/o,o]}}),l=xt(i,!1,n),u=I({inputs:{x:l},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),u}};function Tt(e){const{backend:t,attrs:n}=e,{shape:a,value:s,dtype:o}=n,i=o||r.util.inferDtype(s),l=r.util.getArrayFromDType(i,r.util.sizeFromShape(a));return function(e,t){e.fill(t)}(l,s),t.makeTensorInfo(a,i,l)}const Nt={kernelName:r.Fill,backendName:"cpu",kernelFunc:Tt};const It={kernelName:r.FlipLeftRight,backendName:"cpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{image:s}=t,o=a,i=r.util.getTypedArrayFromDType(s.dtype,r.util.sizeFromShape(s.shape)),[l,u,c,d]=s.shape,p=o.data.get(s.dataId).values;for(let r=0;r<l;r++){const e=r*c*u*d;for(let t=0;t<u;t++){const n=t*(c*d);for(let t=0;t<c;t++){const r=t*d;for(let a=0;a<d;a++){const s=Math.round(c-t-1),o=e+n+r+a;let l=p[o];if(s>=0&&s<c){l=p[e+n+s*d+a]}i[o]=l}}}}return{dataId:o.write(i,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};var Ct=n(5361),Et=n(9634);const $t={kernelName:r.FusedConv2D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:o,preluActivationWeights:i}=t,{strides:l,pad:u,dataFormat:c,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=r;let m=Ie({inputs:{x:a,filter:s},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:d,dimRoundingMode:p}});if(o){const e=m;if("NCHW"===c&&1===o.shape.length&&1!==o.shape[0]){const e=I({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});m=(0,N.WQ)({inputs:{a:m,b:e},backend:n}),n.disposeIntermediateTensorInfo(e)}else m=(0,N.WQ)({inputs:{a:m,b:o},backend:n});n.disposeIntermediateTensorInfo(e)}if(h){const e=m;if("NCHW"===c&&"prelu"===h&&1===i.shape.length&&1!==i.shape[0]){const e=I({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});m=T(n,m,h,e,f),n.disposeIntermediateTensorInfo(e)}else m=T(n,m,h,i,f);n.disposeIntermediateTensorInfo(e)}return m}};const At={kernelName:r.FusedDepthwiseConv2D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:o,preluActivationWeights:i}=t,{strides:l,pad:u,dataFormat:c,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=r;let m=We({inputs:{x:a,filter:s},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:d,dimRoundingMode:p}});if(o){const e=m;m=(0,N.WQ)({inputs:{a:m,b:o},backend:n}),n.disposeIntermediateTensorInfo(e)}if(h){const e=m;m=T(n,m,h,i,f),n.disposeIntermediateTensorInfo(e)}return m}};var _t=n(5003);const Rt={kernelName:r.GatherNd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:a,indices:s}=t,o=r.util.sizeFromShape(a.shape),i=s.shape,l=i[i.length-1],[u,c,d,p]=r.backend_util.prepareAndValidate(a,s);if(0===c)return n.makeTensorInfo(u,a.dtype,[]);const h=n.data.get(s.dataId).values,f=n.bufferSync(a),m=(0,_t.q)(h,f,a.dtype,c,l,d,p,a.shape,o);return n.makeTensorInfo(u,a.dtype,m.values)}};var Ft=n(2525);const Ot={kernelName:r.GatherV2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:o,indices:i}=t,{axis:l,batchDims:u}=s;(0,a.C)([o,i],"gatherV2");const c=r.util.parseAxisParam(l,o.shape)[0],d=n.data.get(i.dataId).values,p=o.shape[c];for(let a=0;a<d.length;++a){const e=d[a];r.util.assert(e<=p-1&&e>=0,(()=>`GatherV2: the index value ${e} is not in [0, ${p-1}]`))}let h=u;null==u&&(h=0);const f=r.util.sizeFromShape(i.shape),m=r.backend_util.segment_util.collectGatherOpShapeInfo(o,i,c,h),g=I({inputs:{x:o},backend:n,attrs:{shape:[m.batchSize,m.outerSize,m.dimSize,m.sliceSize]}}),y=I({inputs:{x:i},backend:n,attrs:{shape:[m.batchSize,f/m.batchSize]}}),b=[m.batchSize,m.outerSize,f/m.batchSize,m.sliceSize],v=n.bufferSync(y),x=n.bufferSync(g),k=(0,Ft.G)(x,v,b);return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(y),n.makeTensorInfo(m.outputShape,k.dtype,k.values)}};var Dt=n(1217),Mt=n(8829);const Pt={kernelName:r.IFFT,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t,s=r.util.sizeFromShape(a.shape),o=a.shape[a.shape.length-1],i=I({inputs:{x:a},backend:n,attrs:{shape:[s/o,o]}}),l=xt(i,!0,n),u=I({inputs:{x:l},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),u}},Lt=(0,u.v)(r.IsFinite,(e=>Number.isFinite(e)?1:0),"bool"),zt={kernelName:r.IsFinite,backendName:"cpu",kernelFunc:Lt},Bt=(0,u.v)(r.IsInf,(e=>Math.abs(e)===1/0?1:0),"bool"),Vt={kernelName:r.IsInf,backendName:"cpu",kernelFunc:Bt},Wt=(0,u.v)(r.IsNan,(e=>Number.isNaN(e)?1:0),"bool"),Ut={kernelName:r.IsNan,backendName:"cpu",kernelFunc:Wt};var Gt=n(4861),jt=n(2784),Ht=n(3633);const Yt={kernelName:r.LinSpace,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,o=(0,Ht.G)(r,a,s);return t.makeTensorInfo([o.length],"float32",o)}};var qt=n(477);const Kt=(0,u.v)(r.Log1p,(e=>Math.log1p(e))),Xt={kernelName:r.Log1p,backendName:"cpu",kernelFunc:Kt},Zt=(0,m.Z)(((e,t)=>e&&t)),Qt=(0,q.j)(r.LogicalAnd,Zt,null,"bool"),Jt={kernelName:r.LogicalAnd,backendName:"cpu",kernelFunc:Qt},en=(0,u.v)(r.LogicalNot,(e=>e?0:1),"bool"),tn={kernelName:r.LogicalNot,backendName:"cpu",kernelFunc:en},nn=(0,m.Z)(((e,t)=>e||t)),rn=(0,q.j)(r.LogicalOr,nn,null,"bool"),an={kernelName:r.LogicalOr,backendName:"cpu",kernelFunc:rn};const sn={kernelName:r.LRN,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:o}=t,{depthRadius:i,bias:l,alpha:u,beta:c}=s;(0,a.C)(o,"LRN");const d=o.shape[3],p=d-1,h=n.data.get(o.dataId).values,f=r.util.sizeFromShape(o.shape),m=new Float32Array(f);function g(e){const t=e%d;let n=e-t+Math.max(0,t-i);const r=e-t+Math.min(t+i,p);let a=0;for(;n<=r;n++){const e=h[n];a+=e*e}return a}for(let r=0;r<f;r++){const e=g(r),t=h[r]*Math.pow(l+u*e,-c);m[r]=t}return n.makeTensorInfo(o.shape,o.dtype,m)}};const on={kernelName:r.LRNGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:o,y:i,dy:l}=t,{depthRadius:u,bias:c,alpha:d,beta:p}=s;(0,a.C)(l,"LRNGrad");const h=r.util.sizeFromShape(l.shape),f=l.shape[3],m=n.data.get(l.dataId).values,g=n.data.get(o.dataId).values,y=n.data.get(i.dataId).values,b=new Float32Array(h),v=h;for(let r=0;r<v;r++){const e=r%f,t=r-e+Math.max(0,e-u),n=r-e+Math.min(f,e+u+1);let a=0;for(let r=t;r<n;r++)a+=Math.pow(g[r],2);a=d*a+c;for(let s=t;s<n;s++){let e=-2*d*p*g[s]*y[r]/a;r===s&&(e+=Math.pow(a,-p)),e*=m[r],b[s]+=e}}return n.makeTensorInfo(l.shape,o.dtype,b)}};var ln=n(6238),un=n(2137);function cn(e){const{inputs:t,backend:n,attrs:s}=e,{x:o}=t,{reductionIndices:i,keepDims:l}=s,u=n;let c=o.shape;const d=c.length,p=r.util.parseAxisParam(i,c);let h=p;const f=r.backend_util.getAxesPermutation(h,d);let m=u.data.get(o.dataId).values;if(null!=f){const e=new Array(d);for(let t=0;t<e.length;t++)e[t]=c[f[t]];m=(0,un._)(m,c,o.dtype,f,e),h=r.backend_util.getInnerMostAxes(h.length,d),c=e}(0,a.C)(o,"max"),r.backend_util.assertAxesAreInnerMostDims("max",h,d);const[g,y]=r.backend_util.computeOutAndReduceShapes(c,h),b=r.util.sizeFromShape(y),v=(0,ln.j)(m,b,g,o.dtype),x=u.write(v,g,o.dtype);let k=g;if(l){k=r.backend_util.expandShapeToKeepDim(g,p)}return{dataId:x,shape:k,dtype:o.dtype}}const dn={kernelName:r.Max,backendName:"cpu",kernelFunc:cn};var pn=n(8617);const hn={kernelName:r.MaxPool,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:o}=t;(0,a.C)(o,"maxPool");const{filterSize:i,strides:l,pad:u,dimRoundingMode:c}=s;r.util.assert(r.backend_util.eitherStridesOrDilationsAreOne(l,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${l} and dilations '1'`));const d=r.backend_util.computePool2DInfo(o.shape,i,l,1,u,c);let h;if(1===d.filterWidth&&1===d.filterHeight&&r.util.arraysEqual(d.inShape,d.outShape))h=(0,p.D)({inputs:{x:o},backend:n});else{const e=n.data.get(o.dataId).values,t=r.util.computeStrides(o.shape),a=ee(e,o.shape,o.dtype,t,d,"max");h=n.makeTensorInfo(d.outShape,o.dtype,a.values)}return h}};const fn={kernelName:r.MaxPool3D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:o}=t,{filterSize:i,strides:l,pad:u,dimRoundingMode:c,dataFormat:d}=s;(0,a.C)(o,"maxPool3d");const p=r.backend_util.computePool3DInfo(o.shape,i,l,1,u,c,d),h=ne(n.data.get(o.dataId).values,o.shape,o.dtype,r.util.computeStrides(o.shape),p,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}};const mn={kernelName:r.MaxPool3DGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:o,input:i}=t,{filterSize:l,strides:u,pad:c,dimRoundingMode:d}=s;(0,a.C)([o,i],"maxPool3DGrad");const p=r.backend_util.computePool3DInfo(i.shape,l,u,1,c,d),h=function(e,t){const n=(0,r.buffer)(t.outShape,"int32"),a=t.strideDepth,s=t.strideHeight,o=t.strideWidth,i=t.dilationDepth,l=t.dilationHeight,u=t.dilationWidth,c=t.effectiveFilterDepth,d=t.effectiveFilterHeight,p=t.effectiveFilterWidth,h=t.padInfo.front,f=t.padInfo.top,m=t.padInfo.left;for(let r=0;r<t.batchSize;++r)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){const b=y*a-h;let v=b;for(;v<0;)v+=i;const x=Math.min(t.inDepth,c+b);for(let a=0;a<t.outHeight;++a){const c=a*s-f;let h=c;for(;h<0;)h+=l;const k=Math.min(t.inHeight,d+c);for(let s=0;s<t.outWidth;++s){const f=s*o-m;let w=f;for(;w<0;)w+=u;const S=Math.min(t.inWidth,p+f);let T=Number.NEGATIVE_INFINITY,N=-1;for(let t=v;t<x;t+=i){const n=t-b;for(let a=h;a<k;a+=l){const s=a-c;for(let o=w;o<S;o+=u){const i=o-f,l=e.get(r,t,a,o,g);l>=T&&(T=l,N=n*d*p+s*d+i)}}}n.set(N,r,y,a,s,g)}}}return n}(n.bufferSync(i),p),f=p.strideDepth,m=p.strideHeight,g=p.strideWidth,y=p.dilationDepth,b=p.dilationHeight,v=p.dilationWidth,x=p.effectiveFilterDepth,k=p.effectiveFilterHeight,w=p.effectiveFilterWidth,S=x-1-p.padInfo.front,T=w-1-p.padInfo.left,N=k-1-p.padInfo.top,I=(0,r.buffer)(i.shape,"float32"),C=n.bufferSync(o);for(let r=0;r<p.batchSize;++r)for(let e=0;e<p.inChannels;++e)for(let t=0;t<p.inDepth;++t)for(let n=0;n<p.inHeight;++n)for(let a=0;a<p.inWidth;++a){const s=t-S,o=n-N,i=a-T;let l=0;for(let t=0;t<x;t+=y){const n=(s+t)/f;if(!(n<0||n>=p.outDepth||Math.floor(n)!==n))for(let a=0;a<k;a+=b){const s=(o+a)/m;if(!(s<0||s>=p.outHeight||Math.floor(s)!==s))for(let o=0;o<w;o+=v){const u=(i+o)/g;if(u<0||u>=p.outWidth||Math.floor(u)!==u)continue;const c=x*k*w-1-h.get(r,n,s,u,e)===t*k*w+a*w+o?1:0;if(0===c)continue;l+=C.get(r,n,s,u,e)*c}}}I.set(l,r,t,n,a,e)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}};const gn={kernelName:r.MaxPoolGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:o,input:i,output:l}=t,u=i;(0,a.C)([i,l],"maxPoolGrad");const{filterSize:c,strides:d,pad:p,dimRoundingMode:h}=s,f=r.backend_util.computePool2DInfo(u.shape,c,d,1,p,h),m=n.data.get(u.dataId).values,g=(0,r.buffer)(f.outShape,u.dtype,te(m,u.shape,u.dtype,f).values),y=f.strideHeight,b=f.strideWidth,v=f.dilationHeight,x=f.dilationWidth,k=f.effectiveFilterHeight,w=f.effectiveFilterWidth,S=w-1-f.padInfo.left,T=k-1-f.padInfo.top,N=(0,r.buffer)(u.shape,"float32"),I=n.data.get(o.dataId).values,C=(0,r.buffer)(o.shape,"float32",I);for(let r=0;r<f.batchSize;++r)for(let e=0;e<f.inChannels;++e)for(let t=0;t<f.inHeight;++t)for(let n=0;n<f.inWidth;++n){const a=t-T,s=n-S;let o=0;for(let t=0;t<k;t+=v){const n=(a+t)/y;if(!(n<0||n>=f.outHeight||Math.floor(n)!==n))for(let a=0;a<w;a+=x){const i=(s+a)/b;if(i<0||i>=f.outWidth||Math.floor(i)!==i)continue;const l=k*w-1-g.get(r,n,i,e)===t*w+a?1:0;if(0===l)continue;o+=C.get(r,n,i,e)*l}}N.set(o,r,t,n,e)}return n.makeTensorInfo(N.shape,N.dtype,N.values)}};const yn={kernelName:r.MaxPoolWithArgmax,backendName:"cpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:s}=e;const{x:o}=t,{filterSize:i,strides:l,pad:u,includeBatchInIndex:c}=n,d=s;(0,a.C)(o,"MaxPoolWithArgmax");const p=d.data.get(o.dataId).values,h=r.backend_util.computePool2DInfo(o.shape,i,l,[1,1],u),[f,m]=function(e,t,n,a,s){const o=ee(e,0,n,r.util.computeStrides(t),s,"max"),i=te(e,t,n,s,!0,a);return[o.values,i.values]}(p,o.shape,o.dtype,c,h),g=d.write(f,h.outShape,o.dtype),y=d.write(m,h.outShape,o.dtype);return[{dataId:g,shape:h.outShape,dtype:o.dtype},{dataId:y,shape:h.outShape,dtype:"int32"}]}};const bn={kernelName:r.Mean,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{axis:o,keepDims:i}=a,l=r.util.parseAxisParam(o,s.shape),u=r.backend_util.computeOutAndReduceShapes(s.shape,l)[1],c=r.util.sizeFromShape(u),d=[],p=n.makeTensorInfo([],"float32",new Float32Array([c]));d.push(p);const h=(0,fe.wg)({inputs:{x:s},backend:n,attrs:{dtype:"float32"}});d.push(h);const f=yt({inputs:{a:h,b:p},backend:n});d.push(f);const m=Je({inputs:{x:f},backend:n,attrs:{axis:o,keepDims:i}});return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),m}};const vn={kernelName:r.Min,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:o}=t,{axis:i,keepDims:l}=s;(0,a.C)(o,"min");const u=r.util.parseAxisParam(i,o.shape);let c=u;const d=r.backend_util.getAxesPermutation(c,o.shape.length);let p=o;null!=d&&(p=(0,P.m)({inputs:{x:o},backend:n,attrs:{perm:d}}),c=r.backend_util.getInnerMostAxes(c.length,o.shape.length)),r.backend_util.assertAxesAreInnerMostDims("min",c,p.shape.length);const[h,f]=r.backend_util.computeOutAndReduceShapes(p.shape,c),m=r.util.sizeFromShape(f),g=r.util.makeZerosTypedArray(r.util.sizeFromShape(h),p.dtype),y=n.data.get(p.dataId).values;for(let r=0;r<g.length;++r){const e=r*m;let t=y[e];for(let n=0;n<m;++n){const r=y[e+n];(Number.isNaN(r)||r<t)&&(t=r)}g[r]=t}null!=d&&n.disposeIntermediateTensorInfo(p);const b=n.makeTensorInfo(h,p.dtype,g);if(l){const e=I({inputs:{x:b},backend:n,attrs:{shape:r.backend_util.expandShapeToKeepDim(h,u)}});return n.disposeIntermediateTensorInfo(b),e}return b}};var xn=n(2491);const kn={kernelName:r.MirrorPad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:o}=t,{paddings:i,mode:l}=s;(0,a.C)(o,"mirrorPad");const u=i.map(((e,t)=>e[0]+o.shape[t]+e[1])),c=i.map((e=>e[0])),d=i.map(((e,t)=>e[0]+o.shape[t])),p="reflect"===l?0:1,h=n.data.get(o.dataId).values,f=o.shape.length,m=r.util.computeStrides(o.shape),g=r.util.sizeFromShape(u),y=u.length,b=r.util.computeStrides(u),v=r.util.getTypedArrayFromDType(o.dtype,g);for(let a=0;a<g;a++){let e=r.util.indexToLoc(a,y,b);for(let n=0;n<y;n++)e[n]<c[n]?e[n]=2*c[n]-e[n]-p:e[n]>=d[n]&&(e[n]=2*(d[n]-1)-e[n]+p);e=e.map(((e,t)=>e-c[t]));const t=r.util.locToIndex(e,f,m);v[a]=h[t]}return{dataId:n.write(v,u,o.dtype),shape:u,dtype:o.dtype}}},wn=(0,m.Z)(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),Sn=(0,q.j)(r.Mod,wn),Tn={kernelName:r.Mod,backendName:"cpu",kernelFunc:Sn};var Nn=n(4334);function In(e){const{inputs:t,backend:n,attrs:a}=e,{logits:s}=t,{dim:o}=a,i=s.shape.length;let l=o;if(-1===l&&(l=i-1),l!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${l}`);const u=r.util.parseAxisParam([l],s.shape),c=cn({inputs:{x:s},backend:n,attrs:{reductionIndices:u,keepDims:!1}}),d=r.backend_util.expandShapeToKeepDim(c.shape,u),p=I({inputs:{x:c},backend:n,attrs:{shape:d}}),h=(0,vt.jb)({inputs:{a:s,b:p},backend:n}),f=(0,pt.oN)({inputs:{x:h},backend:n}),m=Je({inputs:{x:f},backend:n,attrs:{axis:u,keepDims:!1}}),g=I({inputs:{x:m},backend:n,attrs:{shape:d}}),y=yt({inputs:{a:f,b:g},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),y}const Cn={kernelName:r.Softmax,backendName:"cpu",kernelFunc:In};const En={kernelName:r.Multinomial,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{logits:o}=t,{numSamples:i,seed:l,normalized:u}=s;(0,a.C)(o,"multinomial");const c=u?o:In({inputs:{logits:o},backend:n,attrs:{dim:-1}}),d=c.shape[0],p=c.shape[1],h=n.data.get(c.dataId).values,f=[d,i],m=r.util.makeZerosTypedArray(r.util.sizeFromShape(f),"int32");for(let r=0;r<d;++r){const e=r*p,t=new Float32Array(p-1);t[0]=h[e];for(let r=1;r<t.length;++r)t[r]=t[r-1]+h[e+r];const n=Nn.alea(l.toString()),a=r*i;for(let r=0;r<i;++r){const e=n();m[a+r]=t.length;for(let n=0;n<t.length;n++)if(e<t[n]){m[a+r]=n;break}}}return u||n.disposeIntermediateTensorInfo(c),n.makeTensorInfo(f,"int32",m)}};var $n=n(321);const An=r.kernel_impls.nonMaxSuppressionV3Impl;const _n={kernelName:r.NonMaxSuppressionV3,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:o}=t,{maxOutputSize:i,iouThreshold:l,scoreThreshold:u}=r;(0,a.C)(s,"NonMaxSuppression");const c=n.data.get(s.dataId).values,d=n.data.get(o.dataId).values,{selectedIndices:p}=An(c,d,i,l,u);return n.makeTensorInfo([p.length],"int32",new Int32Array(p))}},Rn=r.kernel_impls.nonMaxSuppressionV4Impl;const Fn={kernelName:r.NonMaxSuppressionV4,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:o}=t,{maxOutputSize:i,iouThreshold:l,scoreThreshold:u,padToMaxOutputSize:c}=r;(0,a.C)(s,"NonMaxSuppressionPadded");const d=n.data.get(s.dataId).values,p=n.data.get(o.dataId).values,{selectedIndices:h,validOutputs:f}=Rn(d,p,i,l,u,c);return[n.makeTensorInfo([h.length],"int32",new Int32Array(h)),n.makeTensorInfo([],"int32",new Int32Array([f]))]}},On=r.kernel_impls.nonMaxSuppressionV5Impl;const Dn={kernelName:r.NonMaxSuppressionV5,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:o}=t,{maxOutputSize:i,iouThreshold:l,scoreThreshold:u,softNmsSigma:c}=r;(0,a.C)(s,"NonMaxSuppressionWithScore");const d=n.data.get(s.dataId).values,p=n.data.get(o.dataId).values,h=i,f=l,m=u,g=c,{selectedIndices:y,selectedScores:b}=On(d,p,h,f,m,g);return[n.makeTensorInfo([y.length],"int32",new Int32Array(y)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}};var Mn=n(8440);const Pn={kernelName:r.OneHot,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{indices:o}=t,{dtype:i,depth:l,onValue:u,offValue:c}=s;(0,a.C)(o,"oneHot");const d=r.util.sizeFromShape(o.shape),p=new Float32Array(d*l);p.fill(c);const h=n.data.get(o.dataId).values;for(let r=0;r<d;++r)h[r]>=0&&h[r]<l&&(p[r*l+h[r]]=u);return n.makeTensorInfo([...o.shape,l],i,p)}};function Ln(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const e=(0,Se.x)({inputs:{input:r},backend:n}),t=Ln({inputs:{x:e},backend:n}),a=ke({inputs:{input:r},backend:n}),s=Ln({inputs:{x:a},backend:n}),o=(0,be.f)({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),o}return Tt({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const zn={kernelName:r.ZerosLike,backendName:"cpu",kernelFunc:Ln};const Bn={kernelName:r.OnesLike,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===a.dtype){const t=(0,Se.x)({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=ke({inputs:{input:a},backend:r}),o=Ln({inputs:{x:s},backend:r}),i=(0,be.f)({inputs:{real:n,imag:o},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(o),i}return Tt({backend:r,attrs:{shape:a.shape,value:1,dtype:a.dtype}})}};function Vn(e){const{inputs:t,backend:n,attrs:a}=e,{axis:s}=a;if(1===t.length)return ht({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const o=t[0].shape,i=t[0].dtype;t.forEach((e=>{r.util.assertShapesMatch(o,e.shape,"All tensors passed to stack must have matching shapes"),r.util.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const l=[],u=Te({inputs:t.map((e=>{const t=ht({inputs:{input:e},backend:n,attrs:{dim:s}});return l.push(t),t})),backend:n,attrs:{axis:s}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}const Wn={kernelName:r.Pack,backendName:"cpu",kernelFunc:Vn};const Un={kernelName:r.PadV2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:o}=t,{paddings:i,constantValue:l}=s;(0,a.C)(o,"pad");const u=i.map(((e,t)=>e[0]+o.shape[t]+e[1])),c=i.map((e=>e[0])),d=n.data.get(o.dataId).values,p=r.util.sizeFromShape(o.shape),h=o.shape.length,f=r.util.computeStrides(o.shape),m=r.util.sizeFromShape(u),g=u.length,y=r.util.computeStrides(u),b=r.util.getTypedArrayFromDType(o.dtype,m);0!==l&&b.fill(l);for(let a=0;a<p;a++){const e=r.util.indexToLoc(a,h,f).map(((e,t)=>e+c[t]));b[r.util.locToIndex(e,g,y)]=d[a]}return{dataId:n.write(b,u,o.dtype),shape:u,dtype:o.dtype}}},Gn=(0,m.Z)(((e,t)=>Math.pow(e,t))),jn=(0,q.j)(r.Pow,Gn),Hn={kernelName:r.Pow,backendName:"cpu",kernelFunc:jn};var Yn=n(1206),qn=n(5335);const Kn={kernelName:r.RaggedGather,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:a,paramsDenseValues:s,indices:o}=t,{outputRaggedRank:i}=r,l=a.map((e=>n.data.get(e.dataId).values)),u=a.map((e=>e.shape)),c=n.data.get(s.dataId).values,d=n.data.get(o.dataId).values,[p,h,f]=(0,qn.u)(l,u,c,s.shape,s.dtype,d,o.shape,i),m=p.map((e=>n.makeTensorInfo([e.length],"int32",e))),g=n.makeTensorInfo(f,s.dtype,h);return m.concat([g])}};var Xn=n(4417);const Zn={kernelName:r.RaggedRange,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:r,limits:a,deltas:s}=t,o=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,[u,c]=(0,Xn._)(o,r.shape,r.dtype,i,a.shape,l,s.shape);return[n.makeTensorInfo([u.length],"int32",u),n.makeTensorInfo([c.length],r.dtype,c)]}};var Qn=n(8545);const Jn={kernelName:r.RaggedTensorToTensor,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{shape:a,values:s,defaultValue:o,rowPartitionTensors:i}=t,{rowPartitionTypes:l}=r,u=n.data.get(a.dataId).values,c=n.data.get(s.dataId).values,d=n.data.get(o.dataId).values,p=i.map((e=>n.data.get(e.dataId).values)),h=i.map((e=>e.shape)),[f,m]=(0,Qn.K)(u,a.shape,c,s.shape,s.dtype,d,o.shape,p,h,l);return n.makeTensorInfo(f,s.dtype,m)}};var er=n(6635);const tr={kernelName:r.Range,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,dtype:s,step:o}=n,i=(0,er.q)(r,a,o,s);return t.makeTensorInfo([i.length],s,i)}},nr=(0,u.v)(r.Reciprocal,(e=>1/e)),rr={kernelName:r.Reciprocal,backendName:"cpu",kernelFunc:nr};const ar={kernelName:r.ResizeBilinear,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:o}=t,{alignCorners:i,halfPixelCenters:l,size:u}=s;(0,a.C)(o,"resizeBilinear");const c=r.util.computeStrides(o.shape),[d,p]=u,[h,f,m,g]=o.shape,y=n.data.get(o.dataId).values,b=new Float32Array(r.util.sizeFromShape([h,d,p,g])),v=[i&&d>1?f-1:f,i&&p>1?m-1:m],x=[i&&d>1?d-1:d,i&&p>1?p-1:p];let k=0;const w=v[0]/x[0],S=v[1]/x[1];for(let r=0;r<h;r++)for(let e=0;e<d;e++){let t;t=l?w*(e+.5)-.5:w*e;const n=Math.max(0,Math.floor(t)),a=t-n,s=Math.min(f-1,Math.ceil(t)),o=r*c[0]+n*c[1],i=r*c[0]+s*c[1];for(let e=0;e<p;e++){let t;t=l?S*(e+.5)-.5:S*e;const n=Math.max(0,Math.floor(t)),r=t-n,s=Math.min(m-1,Math.ceil(t)),u=o+n*c[2],d=i+n*c[2],p=o+s*c[2],h=i+s*c[2];for(let e=0;e<g;e++){const t=y[u+e],n=y[d+e],s=t+(y[p+e]-t)*r,o=s+(n+(y[h+e]-n)*r-s)*a;b[k++]=o}}}return n.makeTensorInfo([h,d,p,g],"float32",b)}};const sr={kernelName:r.ResizeBilinearGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:o,dy:i}=t,{alignCorners:l}=s;(0,a.C)([i,o],"resizeBilinearGrad");const u=r.util.computeStrides(o.shape),[c,d,p,h]=o.shape,[,f,m]=i.shape,g=new Float32Array(c*d*p*h),y=[l&&f>1?d-1:d,l&&m>1?p-1:p],b=[l&&f>1?f-1:f,l&&m>1?m-1:m],v=y[0]/b[0],x=y[1]/b[1],k=n.data.get(i.dataId).values;let w=0;for(let r=0;r<c;r++){const e=r*u[0];for(let t=0;t<f;t++){const n=t*v,r=Math.floor(n),a=Math.min(Math.ceil(n),d-1),s=e+r*u[1],o=e+a*u[1],i=n-r,l=1-i;for(let e=0;e<m;e++){const t=e*x,n=Math.floor(t),r=Math.min(Math.ceil(t),p-1),a=t-n,c=1-a,d=s+n*u[2],f=s+r*u[2],m=o+n*u[2],y=o+r*u[2],b=l*c,v=l*a,S=i*c,T=i*a;for(let e=0;e<h;e++){const t=k[w++];g[d+e]+=t*b,g[f+e]+=t*v,g[m+e]+=t*S,g[y+e]+=t*T}}}}return n.makeTensorInfo([c,p,d,h],"float32",g)}};const or={kernelName:r.ResizeNearestNeighbor,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:o}=t,{alignCorners:i,halfPixelCenters:l,size:u}=s;(0,a.C)(o,"resizeNearestNeighbor");const c=r.util.computeStrides(o.shape),[d,p]=u,[h,f,m,g]=o.shape,y=n.data.get(o.dataId).values,b=new Float32Array(h*d*p*g),v=[i&&d>1?f-1:f,i&&p>1?m-1:m],x=[i&&d>1?d-1:d,i&&p>1?p-1:p],k=v[0]/x[0],w=v[1]/x[1];let S=0;for(let r=0;r<h;r++){const e=r*c[0];for(let t=0;t<d;t++){const n=l?k*(t+.5):k*t;let r=Math.min(f-1,i?Math.round(n):Math.floor(n));l&&(r=Math.max(0,r));const a=e+r*c[1];for(let e=0;e<p;e++){const t=l?w*(e+.5):w*e;let n=Math.min(m-1,i?Math.round(t):Math.floor(t));l&&(n=Math.max(0,n));const r=a+n*c[2];for(let e=0;e<g;e++){const t=y[r+e];b[S++]=t}}}}return n.makeTensorInfo([h,d,p,g],o.dtype,b)}};const ir={kernelName:r.ResizeNearestNeighborGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:o,dy:i}=t,{alignCorners:l}=s;(0,a.C)([i,o],"resizeNearestNeighborGrad");const u=r.util.computeStrides(o.shape),c=r.util.computeStrides(i.shape),[d,p,h,f]=o.shape,[,m,g]=i.shape,y=new Float32Array(d*p*h*f),b=n.data.get(i.dataId).values,v=[l&&m>1?p-1:p,l&&g>1?h-1:h],x=[l&&m>1?m-1:m,l&&g>1?g-1:g],k=v[0]/x[0],w=v[1]/x[1],S=1/k,T=1/w,N=2*Math.ceil(S)+2,I=2*Math.ceil(T)+2;for(let r=0;r<d;r++){const e=r*u[0];for(let t=0;t<p;t++){const n=e+t*u[1],r=Math.floor(t*S),a=Math.floor(r-N/2);for(let s=0;s<h;s++){const r=n+s*u[2],o=Math.floor(s*T),i=Math.floor(o-I/2);for(let n=0;n<f;n++){let o=0;for(let r=0;r<N;r++){const u=r+a;if(u<0||u>=m)continue;const d=e+u*c[1],f=u*k;if(t===Math.min(p-1,l?Math.round(f):Math.floor(f)))for(let e=0;e<I;e++){const t=e+i;if(t<0||t>=g)continue;const r=d+t*c[2],a=t*w;s===Math.min(h-1,l?Math.round(a):Math.floor(a))&&(o+=b[r+n])}}y[r+n]=o}}}}return n.makeTensorInfo(o.shape,o.dtype,y)}};const lr={kernelName:r.Reverse,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:o}=t,{dims:i}=s;(0,a.C)(o,"reverse");const l=o.shape.length,u=r.util.parseAxisParam(i,o.shape);if(0===l)return(0,p.D)({inputs:{x:o},backend:n});const c=new r.TensorBuffer(o.shape,o.dtype),d=n.bufferSync(o);for(let r=0;r<c.size;r++){const e=c.indexToLoc(r),t=e.slice();u.forEach((e=>t[e]=o.shape[e]-1-t[e])),c.set(d.get(...t),...e)}return n.makeTensorInfo(c.shape,c.dtype,c.values)}},ur={kernelName:r.RotateWithOffset,backendName:"cpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{image:s}=t,{radians:o,fillValue:i,center:l}=n,u=a,c=r.util.getTypedArrayFromDType(s.dtype,r.util.sizeFromShape(s.shape)),[d,p,h,f]=s.shape,[m,g]=r.backend_util.getImageCenter(l,p,h),y=Math.sin(o),b=Math.cos(o),v=u.data.get(s.dataId).values;for(let r=0;r<d;r++){const e=r*h*p*f;for(let t=0;t<p;t++){const n=t*(h*f);for(let r=0;r<h;r++){const a=r*f;for(let s=0;s<f;s++){const o=[d,t,r,s],l=o[2],u=o[1];let x=(l-m)*b-(u-g)*y,k=(l-m)*y+(u-g)*b;x=Math.round(x+m),k=Math.round(k+g);let w=i;if("number"!==typeof i&&(w=3===s?255:i[s]),x>=0&&x<h&&k>=0&&k<p){w=v[e+k*(h*f)+x*f+s]}c[e+n+a+s]=w}}}}return{dataId:u.write(c,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},cr=(0,u.v)(r.Round,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2===0?t:t+1})),dr={kernelName:r.Round,backendName:"cpu",kernelFunc:cr};var pr=n(3555),hr=n(526);const fr={kernelName:r.ScatterNd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{indices:s,updates:o}=t,{shape:i}=a,{sliceRank:l,numUpdates:u,sliceSize:c,strides:d,outputSize:p}=r.backend_util.calculateShapes(o,s,i),h=n.bufferSync(s),f=n.bufferSync(o),m=(0,hr.b)(h,f,i,p,c,u,l,d,0,!0);return n.makeTensorInfo(i,m.dtype,m.values)}};function mr(e,t){let n=0,r=e.length,a=0;for(;n<r;)a=Math.floor((n+r)/2),e[a]<t?n=a+1:r=a;return r}function gr(e,t){let n=0,r=e.length,a=0;for(;n<r;)a=Math.floor((n+r)/2),e[a]<=t?n=a+1:r=a;return r}const yr={kernelName:r.SearchSorted,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sortedSequence:s,values:o}=t,{side:i}=a,l=function(e,t,n,a,s,o){const i=r.util.getArrayFromDType("int32",n*s);for(let r=0;r<n;++r){const n=e.slice(r*a,(r+1)*a),l=r*s;for(let e=0;e<s;++e)i[l+e]="left"===o?mr(n,t[e+l]):gr(n,t[e+l])}return i}(n.data.get(s.dataId).values,n.data.get(o.dataId).values,s.shape[0],s.shape[1],o.shape[1],i);return n.makeTensorInfo(o.shape,"int32",l)}};const br={kernelName:r.Select,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:s,t:o,e:i}=t;(0,a.C)([s,o,i],"select");const l=s.shape.length,u=n.data.get(s.dataId).values,c=n.data.get(o.dataId).values,d=n.data.get(i.dataId).values,p=(0,r.upcastType)(o.dtype,i.dtype),h=r.util.makeZerosTypedArray(r.util.sizeFromShape(o.shape),p);let f=0;const m=0===l||l>1||1===o.shape.length?1:r.util.sizeFromShape(o.shape.slice(1));for(let r=0;r<u.length;r++)for(let e=0;e<m;e++)1===u[r]?h[f++]=c[r]:h[f++]=d[r];return n.makeTensorInfo(o.shape,p,h)}},vr=r.backend_util.SELU_SCALEALPHA,xr=r.backend_util.SELU_SCALE,kr=(0,u.v)(r.Selu,(e=>e>=0?xr*e:vr*(Math.exp(e)-1))),wr={kernelName:r.Selu,backendName:"cpu",kernelFunc:kr},Sr=(0,u.v)(r.Sign,(e=>e<0?-1:e>0?1:0)),Tr={kernelName:r.Sign,backendName:"cpu",kernelFunc:Sr},Nr=(0,u.v)(r.Sin,(e=>Math.sin(e))),Ir={kernelName:r.Sin,backendName:"cpu",kernelFunc:Nr},Cr=(0,u.v)(r.Sinh,(e=>Math.sinh(e))),Er={kernelName:r.Sinh,backendName:"cpu",kernelFunc:Cr},$r=Math.log(1.1920928955078125e-7)+2,Ar=(0,u.v)(r.Softplus,(e=>{const t=e>-$r,n=e<$r,r=Math.exp(e);let a;return a=n?r:t?e:Math.log(1+r),a})),_r={kernelName:r.Softplus,backendName:"cpu",kernelFunc:Ar};const Rr={kernelName:r.SpaceToBatchND,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:o}=t,{blockShape:i,paddings:l}=s;(0,a.C)([o],"spaceToBatchND");const u=r.util.sizeFromShape(i),c=[[0,0]];c.push(...l);for(let r=1+i.length;r<o.shape.length;++r)c.push([0,0]);const d=Un.kernelFunc({inputs:{x:o},backend:n,attrs:{paddings:c,constantValue:0}}),p=r.backend_util.getReshaped(d.shape,i,u,!1),h=r.backend_util.getPermuted(p.length,i.length,!1),f=r.backend_util.getReshapedPermuted(d.shape,i,u,!1),m=I({inputs:{x:d},backend:n,attrs:{shape:p}}),g={x:m},y={perm:h},b=(0,P.m)({inputs:g,backend:n,attrs:y}),v=I({inputs:{x:b},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),v}};var Fr=n(2785);const Or={kernelName:r.SparseFillEmptyRows,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:o}=t;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${s.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Values must be a vector, saw:\n        ${a.shape}`);if(0!==o.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${o.shape}`);const i=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,c=n.data.get(o.dataId).values[0],[d,p,h,f,m]=(0,Fr.y)(i,r.shape,r.dtype,l,a.dtype,u,c);return[n.makeTensorInfo(p,r.dtype,d),n.makeTensorInfo([p[0]],a.dtype,h),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}};var Dr=n(706);const Mr={kernelName:r.SparseReshape,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);const o=Array.from(n.data.get(a.dataId).values),i=n.data.get(r.dataId).values,l=Array.from(n.data.get(s.dataId).values),[u,c,d]=(0,Dr.l)(i,r.shape,r.dtype,o,l);return[n.makeTensorInfo(c,r.dtype,u),n.makeTensorInfo([d.length],s.dtype,new Int32Array(d))]}};var Pr=n(3326);const Lr={kernelName:r.SparseSegmentMean,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${s.shape}`);if(a.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");const o=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,[u,c]=(0,Pr.z)(o,r.shape,r.dtype,i,l,!0);return n.makeTensorInfo(c,r.dtype,u)}};const zr={kernelName:r.SparseSegmentSum,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${s.shape}`);if(a.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");const o=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,[u,c]=(0,Pr.z)(o,r.shape,r.dtype,i,l);return n.makeTensorInfo(c,r.dtype,u)}};const Br={kernelName:r.SparseToDense,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sparseIndices:s,sparseValues:o,defaultValue:i}=t,{outputShape:l}=a,{sliceRank:u,numUpdates:c,sliceSize:d,strides:p,outputSize:h}=r.backend_util.calculateShapes(o,s,l),f=!1,m=n.bufferSync(s);let g;switch(o.dtype){case"bool":{const e=n.bufferSync(o),t=Boolean(n.data.get(i.dataId).values[0]);g=(0,hr.b)(m,e,l,h,d,c,u,p,t,f);break}case"float32":{const e=n.bufferSync(o),t=n.data.get(i.dataId).values[0];g=(0,hr.b)(m,e,l,h,d,c,u,p,t,f);break}case"int32":{const e=n.bufferSync(o),t=n.data.get(i.dataId).values[0];g=(0,hr.b)(m,e,l,h,d,c,u,p,t,f);break}case"string":{const e=n.bufferSync(o),t=r.util.decodeString(n.data.get(i.dataId).values[0]);g=(0,hr.b)(m,e,l,h,d,c,u,p,t,f);break}default:throw new Error(`Unsupported type ${o.dtype}`)}return n.makeTensorInfo(l,g.dtype,g.values)}};const Vr={kernelName:r.SplitV,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,{numOrSizeSplits:o,axis:i}=a,l=r.util.parseAxisParam(i,s.shape)[0],u=r.backend_util.prepareSplitSize(s,o,l),c=new Array(s.shape.length).fill(0),d=s.shape.slice();return u.map((e=>{const t=[...d];t[l]=e;const r=(0,le.di)({inputs:{x:s},backend:n,attrs:{begin:c,size:t}});return c[l]+=e,r}))}};var Wr=n(8041);const Ur={kernelName:r.Square,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n}=e;const{x:r}=t,s=n;(0,a.C)(r,"square");const o=s.data.get(r.dataId).values,i=new Float32Array(o.length);for(let a=0;a<o.length;++a){const e=o[a];i[a]=e*e}return{dataId:s.write(i,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};var Gr=n(945),jr=n(7844);const Hr=(0,u.v)(r.Step,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),Yr={kernelName:r.Step,backendName:"cpu",kernelFunc:Hr};var qr=n(3445);const Kr={kernelName:r.StridedSlice,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:o}=t,{begin:i,end:l,strides:u,beginMask:c,endMask:d,ellipsisMask:p,newAxisMask:h,shrinkAxisMask:f}=s;(0,a.C)(o,"stridedSlice");const{finalShapeSparse:m,finalShape:g,isIdentity:y,sliceDim0:b,isSimpleSlice:v,begin:x,end:k,strides:w}=r.slice_util.sliceInfo(o.shape,i,l,u,c,d,p,h,f);let S;if(y)S=I({inputs:{x:o},backend:n,attrs:{shape:g}});else if(b||v){r.util.assert(o.shape.length>=1,(()=>`Input must have rank at least 1, got: ${o.shape.length}`));const e=r.slice_util.computeOutShape(x,k,w),t=(0,le.di)({inputs:{x:o},backend:n,attrs:{begin:x,size:e}});S=I({inputs:{x:t},backend:n,attrs:{shape:g}}),n.disposeIntermediateTensorInfo(t)}else{const e=n.bufferSync(o),t=(0,qr.e)(m,e,w,x);S=n.makeTensorInfo(g,t.dtype,t.values)}return S}};var Xr=n(8793);const Zr={kernelName:r.StringNGrams,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:o,rightPad:i,padWidth:l,preserveShortSequences:u}=r,{data:c,dataSplits:d}=t,p=n.data.get(c.dataId).values,h=n.data.get(d.dataId).values,[f,m]=(0,Xr.G)(p,h,a,s,o,i,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}};var Qr=n(7185);const Jr={kernelName:r.StringSplit,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:o}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==o.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${o.shape}`);const i=n.data.get(s.dataId).values,l=n.data.get(o.dataId).values[0],[u,c,d]=(0,Qr.S)(i,l,a),p=c.length;return[n.makeTensorInfo([p,2],"int32",u),n.makeTensorInfo([p],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(d))]}};var ea=n(2536);const ta={kernelName:r.StringToHashBucketFast,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");const o=n.data.get(s.dataId).values,i=(0,ea.f)(o,a);return n.makeTensorInfo(s.shape,"int32",i)}},na=(0,u.v)(r.Tan,(e=>Math.tan(e))),ra={kernelName:r.Tan,backendName:"cpu",kernelFunc:na},aa=(0,u.v)(r.Tanh,(e=>Math.tanh(e))),sa={kernelName:r.Tanh,backendName:"cpu",kernelFunc:aa};const oa={kernelName:r.TensorScatterUpdate,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{tensor:a,indices:s,updates:o}=t,{sliceRank:i,numUpdates:l,sliceSize:u,strides:c,outputSize:d}=r.backend_util.calculateShapes(o,s,a.shape),p=n.bufferSync(s),h=n.bufferSync(o),f=n.bufferSync(a),m=(0,hr.b)(p,h,a.shape,d,u,l,i,c,f,!1);return n.makeTensorInfo(a.shape,m.dtype,m.values)}};var ia=n(8024);const la={kernelName:r.Tile,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:o}=r;(0,a.C)(s,"tile");const i=(0,ia.D)(n.bufferSync(s),o);return n.makeTensorInfo(i.shape,i.dtype,i.values)}};var ua=n(8036);const ca={kernelName:r.TopK,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:o,sorted:i}=r;(0,a.C)(s,"topk");const l=n.data.get(s.dataId).values,[u,c]=(0,ua.x)(l,s.shape,s.dtype,o,i);return[n.makeTensorInfo(u.shape,u.dtype,u.values),n.makeTensorInfo(c.shape,c.dtype,c.values)]}};const da={kernelName:r.Transform,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{image:s,transforms:o}=t,{interpolation:i,fillMode:l,fillValue:u,outputShape:c}=n,[d,p,h,f]=s.shape,[m,g]=null!=c?c:[p,h],y=[d,m,g,f],b=r.util.computeStrides(s.shape),v=b[0],x=b[1],k=b[2],w=r.util.computeStrides(y),S=w[0],T=w[1],N=w[2],I=r.util.getTypedArrayFromDType(s.dtype,r.util.sizeFromShape(y));I.fill(u);const C=a.data.get(s.dataId).values,E=a.data.get(o.dataId).values;for(let r=0;r<d;++r){const e=1===o.shape[0]?E:E.subarray(8*r,8*r+8);for(let t=0;t<m;++t)for(let n=0;n<g;++n)for(let a=0;a<f;++a){let s;const o=e[6]*n+e[7]*t+1;if(0===o)continue;const c=(e[0]*n+e[1]*t+e[2])/o,d=(e[3]*n+e[4]*t+e[5])/o,f=pa(c,h,l),m=pa(d,p,l);switch(i){case"nearest":s=fa(C,p,h,v,x,k,r,m,f,a,u);break;case"bilinear":s=ma(C,p,h,v,x,k,r,m,f,a,u);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}I[r*S+t*T+n*N+a]=s}return a.makeTensorInfo(y,s.dtype,I)}return{dataId:a.write(I,y,s.dtype),shape:s.shape,dtype:s.dtype}}};function pa(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return r.util.clamp(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return r.util.clamp(0,n,t-1)}(e,t);case"nearest":return function(e,t){return r.util.clamp(0,e,t-1)}(e,t);default:return function(e){return e}(e)}}function ha(e,t,n,r,a,s,o,i,l,u,c){return 0<=i&&i<t&&0<=l&&l<n?e[o*r+i*a+l*s+u]:c}function fa(e,t,n,r,a,s,o,i,l,u,c){return ha(e,t,n,r,a,s,o,Math.round(i),Math.round(l),u,c)}function ma(e,t,n,r,a,s,o,i,l,u,c){const d=Math.floor(i),p=Math.floor(l),h=d+1,f=p+1;return(h-i)*((f-l)*ha(e,t,n,r,a,s,o,d,p,u,c)+(l-p)*ha(e,t,n,r,a,s,o,d,f,u,c))+(i-d)*((f-l)*ha(e,t,n,r,a,s,o,h,p,u,c)+(l-p)*ha(e,t,n,r,a,s,o,h,f,u,c))}var ga=n(3705);const ya={kernelName:r.Unique,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:o}=t;(0,a.C)(o,"unique");const i=r.data.get(o.dataId).values,{outputValues:l,outputShape:u,indices:c}=(0,ga.w)(i,s,o.shape,o.dtype);return[r.makeTensorInfo(u,o.dtype,l),r.makeTensorInfo([c.length],"int32",c)]}};const ba={kernelName:r.Unpack,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:s}=r;s<0&&(s+=a.shape.length);const o=a.shape.length,i=a.shape[s],l=new Array(o-1);let u=0;for(let h=0;h<o;h++)h!==s&&(l[u++]=a.shape[h]);const c=new Array(o).fill(0),d=a.shape.slice();d[s]=1;const p=new Array(i);for(let h=0;h<p.length;h++){c[s]=h;const e=(0,le.di)({inputs:{x:a},backend:n,attrs:{begin:c,size:d}});p[h]=I({inputs:{x:e},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(e)}return p}};const va={kernelName:r.UnsortedSegmentSum,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:o,segmentIds:i}=t,{numSegments:l}=s;(0,a.C)(o,"unsortedSegmentSum");const u=[],c=[],d=o.shape.length-i.shape.length;let p=i;for(let r=0;r<d;++r){const e=ht({inputs:{input:p},backend:n,attrs:{dim:r+1}});p=e,c.push(e)}for(let a=0;a<l;++a){const e=r.util.createScalarValue(a,"int32"),t=n.makeTensorInfo([],"int32",e),s=(0,rt.LC)({inputs:{a:t,b:p},backend:n}),i=(0,fe.wg)({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),l=(0,Ze.lw)({inputs:{a:i,b:o},backend:n}),d=Je({inputs:{x:l},backend:n,attrs:{axis:0,keepDims:!1}});u.push(d),c.push(t),c.push(s),c.push(i),c.push(l),c.push(d)}const h=Vn({inputs:u,backend:n,attrs:{axis:0}});return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},xa=[A,_.lO,F,D,N.UK,M,L,z,B,V,U,j,Y,Z,J,re,ae,se,oe,$,ie,ue,de,pe.LY,he,fe.Ml,me.uf,ye,be.v,ve,Ne,Ce,Ee,$e,Ae,_e,Re,Oe,Me,Pe,Le,ze,Be,Ve,Ue,Ge,je,He,Ye,qe,Ke,Xe,tt,d,nt,rt.RY,dt,pt.AC,ft,mt.Yp,St,Nt,It,Ct.Hc,Et.Uc,$t,At,Rt,Ot,Dt.xp,Mt.VM,p.F,Pt,we,zt,Vt,Ut,f,Gt.YW,jt.Q,Yt,qt.Fx,Xt,Jt,tn,an,sn,on,dn,pn.l9,hn,fn,mn,gn,yn,bn,vn,xn.Nu,kn,Tn,En,Ze.tJ,$n.hd,_n,Fn,Dn,Mn.AL,Pn,Bn,Wn,Un,Hn,b,Yn.S3,Kn,Zn,Jn,tr,Se.r,bt,rr,x,w,C,ar,sr,or,ir,lr,ur,dr,pr.Lt,fr,yr,br,wr,S.X3,Tr,Ir,Er,le.lv,Cn,_r,Rr,Or,Mr,Lr,zr,Br,Vr,Wr.Fu,Ur,Gr.b2,jr.C,Yr,Kr,Zr,Jr,ta,vt.Zl,et,ra,sa,oa,la,ca,da,P.W,ya,ba,va,zn];for(const ka of xa)(0,r.registerKernel)(ka)},5335:(e,t,n)=>{"use strict";n.d(t,{u:()=>i});var r=n(5743);function a(e,t,n,r){const a=[];let s=0;const o=t.length-1+n.length,i=new Array(o).fill(null).map((()=>[0]));!function(e,t){for(let n=0;n<e.length;++n){const r=e[n],a=n===e.length-1?t:e[n+1].length;if(0===r.length)throw new Error("Ragged splits may not be empty");if(r[0]<0)throw new Error("Ragged splits must be non-negative");if(r[r.length-1]>a)throw new Error("Ragged splits must not point past values");for(let e=1;e<r.length;++e)if(r[e-1]>r[e])throw new Error("Ragged splits must be sorted in ascending order")}}(n,r);let l=1;for(let u=0;u<t.length-1;++u){l*=t[u];const e=t[u+1];for(let t=1;t<l+1;++t)i[u].push(t*e)}for(let u=0;u<e.length;++u){let r=e[u],o=e[u]+1;for(let e=0;e<n.length;++e){const a=n[e],s=e+t.length-1;if(s>=0){const e=i[s],t=e[e.length-1]-a[r];for(let n=r;n<o;++n)i[s].push(a[n+1]+t)}r=a[r],o=a[o]}o!==r&&(a.push([r,o]),s+=o-r)}return{outSplits:i,valueSlices:a,numValues:s}}function s(e,t){const n=e.slice(0,t);for(;n.length<t;)n.push(1);for(let r=t;r<e.length;r++)n[t-1]*=e[r];return n}function o(e,t,n,a,o){const i=t.slice();i[0]=o;const l=r.util.getArrayFromDType(n,r.util.sizeFromShape(i)),u=e.length;return function(e,t,n,r,a,o){const i=s(t,2)[1],l=s(o,2)[1];let u=0;for(const s of n)for(let t=s[0];t<s[1];++t){for(let n=0;n<r;++n)a[u*l+n]=e[t*i+n];++u}}(e,t,a,0===u?0:u/t[0],l,i),[l,i]}function i(e,t,n,s,i,l,u,c){if(0===e.length)throw new Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw new Error("Split tensors must not be scalars");if(function(e,t,n){e.forEach(((e,a)=>{if(e<0||e>=n){const s=r.util.indexToLoc(a,t.length,r.util.computeStrides(t)).join(",");throw new Error(`indices[${s}] = ${e} is not in [0, ${n})`)}}))}(l,u,t[0][0]-1),0===s.length)throw new Error("params.rank must be nonzero");const d=s[0],{outSplits:p,valueSlices:h,numValues:f}=a(l,u,e,d),m=function(e){const t=[];for(let n=0;n<e.length;++n){const a=e[n].length,s=r.util.getArrayFromDType("int32",a);t.push(s),e[n].forEach(((e,t)=>s[t]=e))}return t}(p),g=o(n,s,i,h,f);return[m,g[0],g[1]]}},5344:(e,t,n)=>{"use strict";n.d(t,{N:()=>o});var r=n(2164),a=n(9554),s=n(4148);const o=(0,n(7892).op)({logicalNot_:function(e){const t={x:(0,s.YT)(e,"x","logicalNot","bool")};return r.T2.runKernel(a.nZd,t)}})},5361:(e,t,n)=>{"use strict";n.d(t,{Hc:()=>l,vS:()=>o});var r=n(5743),a=n(4084),s=n(4729);const o=(0,a.o)((e=>Math.floor(e))),i=(0,s.F)(r.Floor,o),l={kernelName:r.Floor,backendName:"cpu",kernelFunc:i}},5395:(e,t,n)=>{"use strict";n.d(t,{$:()=>o});var r=n(4148),a=n(1426),s=n(9914);function o(e,t,n){if((0,a.HO)(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const o=(0,r.MZ)(e,n);if(3!==o.length&&1!==o.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===o.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return(0,s.Q)(e,t,o,n)}},5396:(e,t,n)=>{"use strict";n.d(t,{m:()=>o});var r=n(2164),a=n(9554),s=n(4148);const o=(0,n(7892).op)({ceil_:function(e){const t={x:(0,s.YT)(e,"x","ceil","float32")};return r.T2.runKernel(a.QDP,t)}})},5399:(e,t,n)=>{"use strict";n.d(t,{Km:()=>l,OH:()=>s,_K:()=>i,tj:()=>u});var r=n(1426);const a="tfjsflags";class s{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=o,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(i().getBool("IS_TEST")||i().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];i().getBool("IS_TEST")||i().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if((0,r.yL)(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if("undefined"===typeof this.global||"undefined"===typeof this.global.location||"undefined"===typeof this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);if(a in e){e[a].split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){const n=t.toLowerCase();return"true"===n||"false"===n?"true"===n:""+ +n===n?+n:t}(0,n)}))}}}function o(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(function(e){for(var n=arguments.length,r=new Array(n>1?n-1:0),a=1;a<n;a++)r[a-1]=arguments[a];return function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,r[0],r[1]),r.join("=")})),t}function i(){return l}let l=null;function u(e){l=e}},5452:(e,t,n)=>{"use strict";n.r(t),n.d(t,{GraphModel:()=>Ye,deregisterOp:()=>$,loadGraphModel:()=>qe,loadGraphModelSync:()=>Ke,registerOp:()=>C,version_converter:()=>Xe});var r={};n.r(r),n.d(r,{json:()=>L});var a={};n.r(a),n.d(a,{json:()=>z});var s={};n.r(s),n.d(s,{json:()=>B});var o={};n.r(o),n.d(o,{json:()=>V});var i={};n.r(i),n.d(i,{json:()=>W});var l={};n.r(l),n.d(l,{json:()=>U});var u={};n.r(u),n.d(u,{json:()=>G});var c={};n.r(c),n.d(c,{json:()=>j});var d={};n.r(d),n.d(d,{json:()=>H});var p={};n.r(p),n.d(p,{json:()=>Y});var h={};n.r(h),n.d(h,{json:()=>q});var f={};n.r(f),n.d(f,{json:()=>K});var m={};n.r(m),n.d(m,{json:()=>X});var g={};n.r(g),n.d(g,{json:()=>Z});var y={};n.r(y),n.d(y,{json:()=>Q});var b={};n.r(b),n.d(b,{json:()=>J});var v={};n.r(v),n.d(v,{json:()=>ee});var x={};n.r(x),n.d(x,{json:()=>te});var k={};n.r(k),n.d(k,{json:()=>ne});var w={};n.r(w),n.d(w,{OP_SCOPE_SUFFIX:()=>ve.BTT,abs:()=>ve.tnl,acos:()=>ve.HQu,acosh:()=>ve.FqL,add:()=>ve.WQq,addN:()=>ve.QiD,all:()=>ve.Q7R,any:()=>ve.bzn,argMax:()=>ve.FLi,argMin:()=>ve.XRg,asin:()=>ve.qRo,asinh:()=>ve.yHs,atan:()=>ve.rYl,atan2:()=>ve.FPz,atanh:()=>ve.rfv,avgPool:()=>ve.$jT,avgPool3d:()=>ve.sub,basicLSTMCell:()=>ve.lZX,batchNorm:()=>ve.$v7,batchNorm2d:()=>ve.BFc,batchNorm3d:()=>ve.kSi,batchNorm4d:()=>ve.T5N,batchToSpaceND:()=>ve.GTe,bincount:()=>ve.HbZ,bitwiseAnd:()=>ve.vjT,booleanMaskAsync:()=>ve.ftb,broadcastArgs:()=>ve.ROE,broadcastTo:()=>ve.hOW,buffer:()=>ve.ra8,cast:()=>ve.wgE,ceil:()=>ve.mkO,clipByValue:()=>ve.zQh,clone:()=>ve.o8B,complex:()=>ve.faB,concat:()=>ve.xWs,concat1d:()=>ve.I1m,concat2d:()=>ve.RPU,concat3d:()=>ve.O5O,concat4d:()=>ve.P1l,conv1d:()=>ve.kA9,conv2d:()=>ve.Xtf,conv2dTranspose:()=>ve.wX9,conv3d:()=>ve.IPL,conv3dTranspose:()=>ve.jIJ,cos:()=>ve.gnS,cosh:()=>ve.yIG,cosineWindow:()=>ve._jP,cumprod:()=>ve.Lp0,cumsum:()=>ve.rCv,denseBincount:()=>ve.aOp,depthToSpace:()=>ve.Rj8,depthwiseConv2d:()=>ve.Gl3,diag:()=>ve.smy,dilation2d:()=>ve.X7t,div:()=>ve.y4m,divNoNan:()=>ve.ek5,dot:()=>ve.Omf,dropout:()=>ve.EZY,einsum:()=>ve._3C,elu:()=>ve.Pqc,enclosingPowerOfTwo:()=>ve.FJY,ensureShape:()=>ve.QP2,equal:()=>ve.LCg,erf:()=>ve.Y12,euclideanNorm:()=>ve.p4S,exp:()=>ve.oNF,expandDims:()=>ve.UG6,expm1:()=>ve.IYd,eye:()=>ve.y5U,fft:()=>ve.hVP,fill:()=>ve.GSj,floor:()=>ve.RIf,floorDiv:()=>ve.wh_,fused:()=>ve.cZk,gather:()=>ve.kgh,gatherND:()=>ve.SY9,greater:()=>ve.rhj,greaterEqual:()=>ve.DQN,ifft:()=>ve.KGM,imag:()=>ve.ngS,image:()=>ve.Slp,inTopKAsync:()=>ve.U4u,irfft:()=>ve.ggX,isFinite:()=>ve.MIs,isInf:()=>ve.EN4,isNaN:()=>ve.yrW,leakyRelu:()=>ve.H8d,less:()=>ve.M7h,lessEqual:()=>ve.InN,linalg:()=>ve.mPL,linspace:()=>ve.mT8,localResponseNormalization:()=>ve.Kgs,log:()=>ve.Rm2,log1p:()=>ve.Kko,logSigmoid:()=>ve.nqI,logSoftmax:()=>ve.HPB,logSumExp:()=>ve.VZ,logicalAnd:()=>ve.n76,logicalNot:()=>ve.NSZ,logicalOr:()=>ve.ztW,logicalXor:()=>ve.rxB,losses:()=>ve.YYh,lowerBound:()=>ve.yzS,matMul:()=>ve.NoW,max:()=>ve.T9B,maxPool:()=>ve.jgi,maxPool3d:()=>ve.NYV,maxPoolWithArgmax:()=>ve.RO,maximum:()=>ve.PhQ,mean:()=>ve.i2o,meshgrid:()=>ve.OYQ,min:()=>ve.jkA,minimum:()=>ve.BpO,mirrorPad:()=>ve.FFZ,mod:()=>ve.ziu,moments:()=>ve.Clk,movingAverage:()=>ve.CRk,mul:()=>ve.lKK,multiRNNCell:()=>ve.YDF,multinomial:()=>ve.OjQ,neg:()=>ve.HZy,norm:()=>ve.xbf,notEqual:()=>ve.Ec,oneHot:()=>ve.Mw0,ones:()=>ve.SaS,onesLike:()=>ve.P61,op:()=>ve.op,outerProduct:()=>ve.X4o,pad:()=>ve.eVF,pad1d:()=>ve.BZs,pad2d:()=>ve.grY,pad3d:()=>ve.XHu,pad4d:()=>ve.WLX,pool:()=>ve.dzn,pow:()=>ve.n7C,prelu:()=>ve.NsG,print:()=>ve.yyV,prod:()=>ve._eU,raggedGather:()=>ve.whe,raggedRange:()=>ve.iyU,raggedTensorToTensor:()=>ve.Q0_,rand:()=>ve._9M,randomGamma:()=>ve.pR9,randomNormal:()=>ve.FE$,randomStandardNormal:()=>ve.m0H,randomUniform:()=>ve.YeY,randomUniformInt:()=>ve.HYA,range:()=>ve.y17,real:()=>ve.xav,reciprocal:()=>ve.VOZ,relu:()=>ve.VVh,relu6:()=>ve.j__,reshape:()=>ve.tQQ,reverse:()=>ve.BEg,reverse1d:()=>ve.QD2,reverse2d:()=>ve.LMr,reverse3d:()=>ve.I2l,reverse4d:()=>ve.JYU,rfft:()=>ve.z8$,round:()=>ve.LIG,rsqrt:()=>ve.Z$r,scalar:()=>ve.d_2,scatterND:()=>ve.NFr,searchSorted:()=>ve.sZg,selu:()=>ve.WfX,separableConv2d:()=>ve.wdz,setdiff1dAsync:()=>ve.F12,sigmoid:()=>ve.ry7,sign:()=>ve._SZ,signal:()=>ve.vPA,sin:()=>ve.F8e,sinh:()=>ve.L0l,slice:()=>ve.dik,slice1d:()=>ve.Q$M,slice2d:()=>ve.zAd,slice3d:()=>ve.wck,slice4d:()=>ve.R0O,softmax:()=>ve.Vs9,softplus:()=>ve.lw0,spaceToBatchND:()=>ve.eDJ,sparse:()=>ve.lMo,sparseToDense:()=>ve.Zhr,spectral:()=>ve.lOn,split:()=>ve.lDo,sqrt:()=>ve.RZD,square:()=>ve.EwI,squaredDifference:()=>ve.Pbu,squeeze:()=>ve.r2V,stack:()=>ve.t$z,step:()=>ve.PMw,stridedSlice:()=>ve.Ym9,string:()=>ve.YjP,sub:()=>ve.jbE,sum:()=>ve.czq,tan:()=>ve.Mlm,tanh:()=>ve.ymU,tensor:()=>ve.OEK,tensor1d:()=>ve.tGX,tensor2d:()=>ve.KtR,tensor3d:()=>ve.$_$,tensor4d:()=>ve.g9W,tensor5d:()=>ve.Lpo,tensor6d:()=>ve.yxw,tensorScatterUpdate:()=>ve.NNh,tile:()=>ve.Vsq,topk:()=>ve.rfw,transpose:()=>ve.mgz,truncatedNormal:()=>ve.efE,unique:()=>ve.AmM,unsortedSegmentSum:()=>ve.zAU,unstack:()=>ve.K$i,upperBound:()=>ve.rni,variable:()=>ve.bvq,where:()=>ve._M9,whereAsync:()=>ve.YJN,zeros:()=>ve.Ul9,zerosLike:()=>ve.POl});var S=n(5743);var T,N;(0,S.env)().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(T||(T={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(N||(N={}));const I={};function C(e,t){const n={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};I[e]=n}function E(e){return I[e]}function $(e){delete I[e]}function A(e,t,n,r,a){const s=t.inputParams[e];if(s&&void 0!==s.inputIndexStart){const e=s.inputIndexStart,o=0===s.inputIndexEnd?void 0:void 0===s.inputIndexEnd?e+1:s.inputIndexEnd,i=e<0?t.inputNames.length+e:e;if("tensor"===s.type)return _(t.inputNames[i],n,r,a);if("tensors"===s.type){const s=t.inputs.slice(e,o);return t.inputNames.slice(e,o).filter(((e,t)=>{var n;return"NoOp"!==(null===(n=s[t])||void 0===n?void 0:n.op)})).map((e=>_(e,n,r,a)))}const l=_(t.inputNames[i],n,r,a),u=l.dataSync();return"number"===s.type?u[0]:S.util.toNestedArray(l.shape,u)}const o=t.attrParams[e];return o&&o.value}function _(e,t,n,r){const[a,s]=D(e,n);if(null!=r){const e=r.getHashTableHandleByName(a);if(null!=e)return e}const o=n.currentContextIds.find((e=>!!t[O(a,e)]));return void 0!==o?t[O(a,o)][s]:void 0}function R(e,t,n){return t[O(e,n.currentContextId)]}function F(e,t){const[n,r,a]=D(e,t);return[O(n,t&&t.currentContextId),r,a]}function O(e,t){return t?`${e}-${t}`:e}function D(e,t){if(""===e)return["",0,void 0];const n=null!=t&&null!=t.parseNodeNameCache;if(n){const n=t.parseNodeNameCache.get(e);if(null!=n)return n}const r=e.split(":");let a;if(1===r.length)a=[e,0,void 0];else{const e=r[0],t=3===r.length?r[1]:void 0;a=[e,Number(r[r.length-1]),t]}return n&&t.parseNodeNameCache.set(e,a),a}function M(e,t,n){let r=A("pad",e,t,n);if("explicit"===r){r=A("explicitPaddings",e,t,n);const a=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)a[e][0]=r[2*e],a[e][1]=r[2*e+1];return a}return r}function P(e){return e.kept?e:(0,S.clone)(e)}const L=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],z=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],B=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],V=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],W=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],U=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],G=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],j=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],H=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],Y=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],q=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],K=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],X=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],Z=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],Q=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],J=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],ee=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],te=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],ne=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];class re{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[r,a,s,o,i,l,u,c,d,p,h,f,m,g,y,b,v,x,k].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=e.node,r=[],a=[],s=[],o=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?r.push(e[t.name]):"Const"===t.op?a.push(e[t.name]):null!=t.input&&0!==t.input.length||s.push(e[t.name]),e)),{});let i=[];const l=[];let u={},c={};null!=t&&(u=this.mapSignatureEntries(t.inputs),c=this.mapSignatureEntries(t.outputs));const d=Object.keys(o);d.forEach((e=>{const t=o[e];t.inputNames.forEach(((e,n)=>{const[r,,a]=F(e),s=o[r];if(null!=s.outputs){const e=s.outputs.indexOf(a);if(-1!==e){const a=`${r}:${e}`;t.inputNames[n]=a}}t.inputs.push(s),s.children.push(t)}))})),0===Object.keys(c).length?d.forEach((e=>{const t=o[e];0===t.children.length&&l.push(t)})):Object.keys(c).forEach((e=>{const[t]=F(e),n=o[t];null!=n&&(n.signatureKey=c[e],l.push(n))})),Object.keys(u).length>0?Object.keys(u).forEach((e=>{const[t]=F(e),n=o[t];n&&(n.signatureKey=u[e],i.push(n))})):i=r;let p={};null!=e.library&&null!=e.library.function&&(p=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));const h={nodes:o,inputs:i,outputs:l,weights:a,placeholders:r,signature:t,functions:p};return s.length>0&&(h.initNodes=s),h}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){const t=E(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.slice(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{const r=n.type;let a;switch(n.type){case"string":a=se(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=se(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":a=me(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=me(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":a=ie(e.attr,n.tfName,n.defaultValue||0),void 0===a&&n.tfDeprecatedName&&(a=ie(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":a=fe(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=fe(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":a=oe(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=oe(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":a=ye(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=ye(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":a=he(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=he(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":a=ge(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=ge(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":a=ce(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=ce(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":a=de(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=de(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":a=ue(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=ue(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:a,type:r},t}),{})),n}mapFunction(e){const t=e.nodeDef,n=[];let r={};null!=t&&(r=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));const a=[],s=[];e.signature.inputArg.forEach((e=>{const[t]=F(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:le(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,a.push(n),r[t]=n}));Object.keys(r).forEach((e=>{const t=r[e];t.inputNames.forEach(((e,n)=>{const[a,,s]=F(e),o=r[a];if(null!=o.outputs){const e=o.outputs.indexOf(s);if(-1!==e){const r=`${a}:${e}`;t.inputNames[n]=r}}t.inputs.push(o),o.children.push(t)}))}));const o=e.ret;e.signature.outputArg.forEach((e=>{const[t,n]=F(o[e.name]),a=r[t];null!=a&&(a.defaultOutput=n,s.push(a))}));const i=this.mapArgsToSignature(e);return{nodes:r,inputs:a,outputs:s,weights:n,placeholders:[],signature:i}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function ae(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const t=(0,S.env)().global;if("undefined"!==typeof t.atob)return t.atob(e);if("undefined"!==typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function se(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const a=e[t];return null!=a?ae(a.s,r):n}function oe(e,t,n){const r=e[t];return r?r.b:n}function ie(e,t,n){const r=e[t]||{},a=null!=r.i?r.i:null!=r.f?r.f:n;return"number"===typeof a?a:parseInt(a,10)}function le(e){switch("string"===typeof e&&(e=T[e]),e){case T.DT_FLOAT:case T.DT_HALF:return"float32";case T.DT_INT32:case T.DT_INT64:case T.DT_INT8:case T.DT_UINT8:return"int32";case T.DT_BOOL:return"bool";case T.DT_DOUBLE:return"float32";case T.DT_STRING:return"string";case T.DT_COMPLEX64:case T.DT_COMPLEX128:return"complex64";default:return null}}function ue(e,t,n){const r=e[t];return r&&r.func?r.func.name:n}function ce(e,t,n){const r=e[t];return r&&r.type?le(r.type):n}function de(e,t,n){const r=e[t];return r&&r.list&&r.list.type?r.list.type.map((e=>le(e))):n}function pe(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"===typeof e.size?e.size:parseInt(e.size,10))):[]}function he(e,t,n){const r=e[t];return r&&r.shape?pe(r.shape):n}function fe(e,t,n){const r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map((e=>"number"===typeof e?e:parseInt(e,10))):n}function me(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const a=e[t];return a&&a.list&&a.list.s?a.list.s.map((e=>ae(e,r))):n}function ge(e,t,n){const r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map((e=>pe(e))):n}function ye(e,t,n){const r=e[t];return r&&r.list&&r.list.b?r.list.b:n}class be{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return _(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return _(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return ie(this.node.rawAttrs,e,t);if(null!=n.s)return se(this.node.rawAttrs,e,t);if(null!=n.b)return oe(this.node.rawAttrs,e,t);if(null!=n.shape)return he(this.node.rawAttrs,e,t);if(null!=n.type)return ce(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return fe(this.node.rawAttrs,e,t);if(null!=n.list.s)return me(this.node.rawAttrs,e,t);if(null!=n.list.shape)return ge(this.node.rawAttrs,e,t);if(null!=n.list.b)return ye(this.node.rawAttrs,e,t);if(null!=n.list.type)return de(this.node.rawAttrs,e,t)}return t}}var ve=n(9249);function xe(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";if("number"!==typeof e&&"number"!==typeof t){S.util.assert(e.length===t.length,(()=>n+` Shapes ${e} and ${t} must match`));for(let r=0;r<e.length;r++){const a=e[r],s=t[r];S.util.assert(a<0||s<0||a===s,(()=>n+` Shapes ${e} and ${t} must match`))}}}function ke(e){return"number"!==typeof e&&!e.some((e=>e<0))}function we(e,t,n){let r=Se(e,n);const a=!ke(r);if(a&&0===t.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(a&&t.forEach((e=>{r=Se(e.shape,r)})),!ke(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function Se(e,t){if("number"===typeof e)return t;if("number"===typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);const n=[];for(let r=0;r<e.length;++r){const a=e[r],s=t[r];if(a>=0&&s>=0&&a!==s)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[r]=a>=0?a:s}return n}class Te{constructor(e,t,n,r,a,s,o){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=a,this.dynamicSize=s,this.clearAfterRead=o,this.tensors=[],this.closed_=!1,this.idTensor=(0,S.scalar)(0),(0,S.keep)(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),xe(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,(0,S.keep)(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return(0,S.tensor)([],[0].concat(this.elementShape));const n=this.readMany(e);return xe(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),(0,S.stack)(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return(0,S.tensor)([],[0].concat(this.elementShape));const t=[];for(let r=0;r<this.size();r++)t.push(r);const n=this.readMany(t);return xe(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),(0,S.concat)(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,(0,S.unstack)(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0;const r=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const a=0===n?0:t.size/n,s=[];(0,S.tidy)((()=>{t=(0,S.reshape)(t,[1,n,a]);for(let n=0;n<e.length;++n){const o=[0,0===n?0:r[n-1],0],i=[1,e[n],a];s[n]=(0,S.reshape)((0,S.slice)(t,o,i),this.elementShape)}return s}));const o=[];for(let i=0;i<e.length;i++)o[i]=i;this.writeMany(o,s)}}class Ne{get id(){return this.idTensor.id}constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:-1;this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);xe(t,e.shape,"TensorList shape mismatch: "),(0,S.keep)(e)})),this.idTensor=(0,S.scalar)(0),this.maxNumElements=r,(0,S.keep)(this.idTensor)}copy(){return new Ne([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.id)||t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1;if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);xe(e,this.elementShape,"TensorList shape mismatch: ");const r=we(this.elementShape,this.tensors,e);return(0,S.tidy)((()=>{const e=this.tensors.map((e=>(0,S.reshape)(e,r)));return(0,S.stack)(e,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=we(this.elementShape,this.tensors,e),r=this.tensors.pop();return r.kept=!1,xe(r.shape,e,"TensorList shape mismatch: "),(0,S.reshape)(r,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(xe(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");(0,S.keep)(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);const t=new Ne([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let n=0;n<Math.min(this.tensors.length,e);++n)t.tensors[n]=this.tensors[n];return t}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);xe(this.tensors[e].shape,t,"TensorList shape mismatch: ");const r=we(this.elementShape,this.tensors,t);return(0,S.reshape)(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);xe(this.elementShape,t.shape,"TensorList shape mismatch: "),(0,S.keep)(t),null!=this.tensors[e]&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);xe(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());const r=we(this.elementShape,this.tensors,n);return 0===e.length?(0,S.tensor)([],[0].concat(r)):(0,S.tidy)((()=>{const t=e.map((e=>(0,S.reshape)(this.tensors[e],r)));return(0,S.stack)(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);xe(this.elementShape,t,"TensorList shape mismatch: ");const n=we(this.elementShape,this.tensors,t);return 0===this.size()?(0,S.tensor)([],[0].concat(n)):(0,S.tidy)((()=>{const e=this.tensors.map((e=>(0,S.reshape)(e,n)));return(0,S.concat)(e,0)}))}}const Ie=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const r=A("thenBranch",e,t,n),a=A("elseBranch",e,t,n),s=A("cond",e,t,n),o=A("args",e,t,n);return(await s.data())[0]?n.functionMap[r].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap):n.functionMap[a].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=A("body",e,t,n),a=A("cond",e,t,n),s=A("args",e,t,n),o=await n.functionMap[a].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap),i=s.map((e=>e.id));let l=await o[0].data();o.forEach((e=>{e.kept||-1!==i.indexOf(e.id)||e.dispose()}));let u=s;for(;l[0];){const e=u;u=await n.functionMap[r].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);const t=u.map((e=>e.id));e.forEach((e=>{e.kept||-1!==i.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}));const s=await n.functionMap[a].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);l=await s[0].data(),s.forEach((e=>{e.kept||-1!==i.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}))}return u}case"LoopCond":return[P(A("pred",e,t,n))];case"Switch":{const r=A("pred",e,t,n);let a=A("data",e,t,n);return a.kept||(a=P(a)),(await r.data())[0]?[void 0,a]:[a,void 0]}case"Merge":{const r=e.inputNames.find((e=>void 0!==_(e,t,n)));if(r){return[P(_(r,t,n))]}return}case"Enter":{const r=A("frameName",e,t,n),a=A("tensor",e,t,n);return n.enterFrame(r),[P(a)]}case"Exit":{const r=A("tensor",e,t,n);return n.exitFrame(),[P(r)]}case"NextIteration":{const r=A("tensor",e,t,n);return n.nextIteration(),[P(r)]}case"TensorArrayV3":{const r=A("size",e,t,n),a=A("dtype",e,t,n),s=A("elementShape",e,t,n),o=A("dynamicSize",e,t,n),i=A("clearAfterRead",e,t,n),l=A("identicalElementShapes",e,t,n),u=A("name",e,t,n),c=new Te(u,a,r,s,l,o,i);return n.addTensorArray(c),[c.idTensor,(0,S.scalar)(1)]}case"TensorArrayWriteV3":{const r=A("tensorArrayId",e,t,n),a=A("index",e,t,n),s=A("tensor",e,t,n),o=n.getTensorArray(r.id);return o.write(a,s),[o.idTensor]}case"TensorArrayReadV3":{const r=A("tensorArrayId",e,t,n),a=A("index",e,t,n);return[n.getTensorArray(r.id).read(a)]}case"TensorArrayGatherV3":{const r=A("tensorArrayId",e,t,n),a=A("indices",e,t,n),s=A("dtype",e,t,n);return[n.getTensorArray(r.id).gather(a,s)]}case"TensorArrayScatterV3":{const r=A("tensorArrayId",e,t,n),a=A("indices",e,t,n),s=A("tensor",e,t,n),o=n.getTensorArray(r.id);return o.scatter(a,s),[o.idTensor]}case"TensorArrayConcatV3":{const r=A("tensorArrayId",e,t,n),a=n.getTensorArray(r.id),s=A("dtype",e,t,n);return[a.concat(s)]}case"TensorArraySplitV3":{const r=A("tensorArrayId",e,t,n),a=A("tensor",e,t,n),s=A("lengths",e,t,n),o=n.getTensorArray(r.id);return o.split(s,a),[o.idTensor]}case"TensorArraySizeV3":{const r=A("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return[(0,S.scalar)(a.size(),"int32")]}case"TensorArrayCloseV3":{const r=A("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return a.clearAndClose(),[a.idTensor]}case"TensorListSetItem":{const r=A("tensorListId",e,t,n),a=A("index",e,t,n),s=A("tensor",e,t,n),o=n.getTensorList(r.id);return o.setItem(a,s),[o.idTensor]}case"TensorListGetItem":{const r=A("tensorListId",e,t,n),a=A("index",e,t,n),s=A("elementShape",e,t,n),o=A("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(a,s,o)]}case"TensorListScatterV2":case"TensorListScatter":{const r=A("indices",e,t,n),a=function(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const a=Math.max(...t);if(null!=r&&-1!==r&&a>=r)throw new Error(`Max index must be < array size (${a}  vs. ${r})`);const s=new Ne([],n,e.dtype,r),o=(0,S.unstack)(e,0);return t.forEach(((e,t)=>{s.setItem(e,o[t])})),s}(A("tensor",e,t,n),r,A("elementShape",e,t,n),A("numElements",e,t,n));return n.addTensorList(a),[a.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=A("elementShape",e,t,n),a=A("elementDType",e,t,n);let s;s="TensorListReserve"===e.op?"numElements":"maxNumElements";const o=A(s,e,t,n),i=function(e,t,n,r){return new Ne([],e,t,r)}(r,a,0,"TensorListReserve"===e.op?-1:o);return n.addTensorList(i),[i.idTensor]}case"TensorListGather":{const r=A("tensorListId",e,t,n),a=A("indices",e,t,n),s=A("elementShape",e,t,n),o=A("elementDType",e,t,n);return[n.getTensorList(r.id).gather(a,o,s)]}case"TensorListStack":{const r=A("tensorListId",e,t,n),a=A("elementShape",e,t,n),s=A("elementDType",e,t,n),o=A("numElements",e,t,n);return[n.getTensorList(r.id).stack(a,s,o)]}case"TensorListFromTensor":{const r=function(e,t,n){const r=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);xe(e.shape.slice(1),t,"TensorList shape mismatch: ");const a=(0,S.unstack)(e);return new Ne(a,t,r)}(A("tensor",e,t,n),A("elementShape",e,t,n),A("elementDType",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const r=A("tensorListId",e,t,n),a=n.getTensorList(r.id),s=A("dtype",e,t,n),o=A("elementShape",e,t,n);return[a.concat(s,o)]}case"TensorListPushBack":{const r=A("tensorListId",e,t,n),a=A("tensor",e,t,n),s=n.getTensorList(r.id);return s.pushBack(a),[s.idTensor]}case"TensorListPopBack":{const r=A("tensorListId",e,t,n),a=A("elementShape",e,t,n),s=A("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(a,s)]}case"TensorListSplit":{const r=A("tensor",e,t,n),a=A("elementShape",e,t,n),s=function(e,t,n){let r=0;const a=t.map((e=>(r+=e,r)));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${e.shape}`);const s=Se(e.shape.slice(1),n),o=0===r?0:e.size/r,i=(0,S.tidy)((()=>{const n=[];e=(0,S.reshape)(e,[1,r,o]);for(let r=0;r<t.length;++r){const i=[0,0===r?0:a[r-1],0],l=[1,t[r],o];n[r]=(0,S.reshape)((0,S.slice)(e,i,l),s)}return e.dispose(),n})),l=new Ne([],n,e.dtype,t.length);for(let u=0;u<i.length;u++)l.setItem(u,i[u]);return l}(r,A("lengths",e,t,n),a);return n.addTensorList(s),[s.idTensor]}case"TensorListLength":{const r=A("tensorListId",e,t,n),a=n.getTensorList(r.id);return[(0,S.scalar)(a.size(),"int32")]}case"TensorListResize":{const r=A("tensorListId",e,t,n),a=A("size",e,t,n),s=n.getTensorList(r.id).resize(a);return n.addTensorList(s),[s.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function Ce(e,t,n){const[r,a]=A("fusedOps",e,t,n),s="biasadd"===r,o=!s,i="prelu"===a,l="fusedbatchnorm"===r,u=A("numArgs",e,t,n);if(s){if(i&&2!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&s&&1!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const c=A("strides",e,t,n),d=M(e,t,n),p=A("dataFormat",e,t,n).toUpperCase(),h=A("dilations",e,t,n);let[f,m]=A("args",e,t,n);o&&(m=f,f=void 0);return{stride:c,pad:d,dataFormat:p,dilations:h,biasArg:f,preluArg:m,activationFunc:a,leakyreluAlpha:A("leakyreluAlpha",e,t,n)}}function Ee(e,t,n){return{boxes:A("boxes",e,t,n),scores:A("scores",e,t,n),maxOutputSize:A("maxOutputSize",e,t,n),iouThreshold:A("iouThreshold",e,t,n),scoreThreshold:A("scoreThreshold",e,t,n),softNmsSigma:A("softNmsSigma",e,t,n)}}var $e=n(1997);class Ae{get id(){return this.handle.id}constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=(0,S.scalar)(0),this.tensorMap=new Map,(0,S.keep)(this.handle)}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return $e.d(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),(0,S.tidy)((()=>{const e=(0,S.unstack)(t),r=n.length,a=e.length;S.util.assert(r===a,(()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${a} elements.`));for(let t=0;t<r;t++){const r=n[t],a=e[t];(0,S.keep)(a),this.tensorMap.set(r,a)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return(0,S.tidy)((()=>{const e=[];for(let r=0;r<n.length;r++){const a=n[r],s=this.findWithDefault(a,t);e.push(s)}return(0,S.stack)(e)}))}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}function _e(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:S.tidy;const s=((e,t,n)=>{switch(e.category){case"arithmetic":return a((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:w;switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[r.add(A("a",e,t,n),A("b",e,t,n))];case"AddN":return[r.addN(A("tensors",e,t,n))];case"FloorMod":case"Mod":return[r.mod(A("a",e,t,n),A("b",e,t,n))];case"Mul":return[r.mul(A("a",e,t,n),A("b",e,t,n))];case"RealDiv":case"Div":return[r.div(A("a",e,t,n),A("b",e,t,n))];case"DivNoNan":return[r.divNoNan(A("a",e,t,n),A("b",e,t,n))];case"FloorDiv":return[r.floorDiv(A("a",e,t,n),A("b",e,t,n))];case"Sub":return[r.sub(A("a",e,t,n),A("b",e,t,n))];case"Minimum":return[r.minimum(A("a",e,t,n),A("b",e,t,n))];case"Maximum":return[r.maximum(A("a",e,t,n),A("b",e,t,n))];case"Pow":return[r.pow(A("a",e,t,n),A("b",e,t,n))];case"SquaredDifference":return[r.squaredDifference(A("a",e,t,n),A("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"basic_math":return a((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:w;switch(e.op){case"Abs":case"ComplexAbs":return[r.abs(A("x",e,t,n))];case"Acos":return[r.acos(A("x",e,t,n))];case"Acosh":return[r.acosh(A("x",e,t,n))];case"Asin":return[r.asin(A("x",e,t,n))];case"Asinh":return[r.asinh(A("x",e,t,n))];case"Atan":return[r.atan(A("x",e,t,n))];case"Atan2":return[r.atan2(A("x",e,t,n),A("y",e,t,n))];case"Atanh":return[r.atanh(A("x",e,t,n))];case"Ceil":return[r.ceil(A("x",e,t,n))];case"Complex":return[r.complex(A("real",e,t,n),A("imag",e,t,n))];case"Cos":return[r.cos(A("x",e,t,n))];case"Cosh":return[r.cosh(A("x",e,t,n))];case"Elu":return[r.elu(A("x",e,t,n))];case"Erf":return[r.erf(A("x",e,t,n))];case"Exp":return[r.exp(A("x",e,t,n))];case"Expm1":return[r.expm1(A("x",e,t,n))];case"Floor":return[r.floor(A("x",e,t,n))];case"Log":return[r.log(A("x",e,t,n))];case"Log1p":return[r.log1p(A("x",e,t,n))];case"Imag":return[r.imag(A("x",e,t,n))];case"Neg":return[r.neg(A("x",e,t,n))];case"Reciprocal":return[r.reciprocal(A("x",e,t,n))];case"Real":return[r.real(A("x",e,t,n))];case"Relu":return[r.relu(A("x",e,t,n))];case"Round":return[r.round(A("x",e,t,n))];case"Selu":return[r.selu(A("x",e,t,n))];case"Sigmoid":return[r.sigmoid(A("x",e,t,n))];case"Sin":return[r.sin(A("x",e,t,n))];case"Sign":return[r.sign(A("x",e,t,n))];case"Sinh":return[r.sinh(A("x",e,t,n))];case"Softplus":return[r.softplus(A("x",e,t,n))];case"Sqrt":return[r.sqrt(A("x",e,t,n))];case"Square":return[r.square(A("x",e,t,n))];case"Tanh":return[r.tanh(A("x",e,t,n))];case"Tan":return[r.tan(A("x",e,t,n))];case"ClipByValue":return[r.clipByValue(A("x",e,t,n),A("clipValueMin",e,t,n),A("clipValueMax",e,t,n))];case"Relu6":return[r.relu6(A("x",e,t,n))];case"Rsqrt":return[r.rsqrt(_(e.inputNames[0],t,n))];case"LeakyRelu":return[r.leakyRelu(A("x",e,t,n),A("alpha",e,t,n))];case"Prelu":return[r.prelu(A("x",e,t,n),A("alpha",e,t,n))];case"IsNan":return[r.isNaN(_(e.inputNames[0],t,n))];case"IsInf":return[r.isInf(_(e.inputNames[0],t,n))];case"IsFinite":return[r.isFinite(_(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"control":return Ie(e,t,n);case"convolution":return a((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:w;switch(e.op){case"Conv1D":{const a=A("stride",e,t,n),s=A("pad",e,t,n),o=A("dataFormat",e,t,n).toUpperCase(),i=A("dilation",e,t,n);return[r.conv1d(A("x",e,t,n),A("filter",e,t,n),a,s,o,i)]}case"Conv2D":{const a=A("strides",e,t,n),s=M(e,t,n),o=A("dataFormat",e,t,n).toUpperCase(),i=A("dilations",e,t,n);return[r.conv2d(A("x",e,t,n),A("filter",e,t,n),[a[1],a[2]],s,o,[i[1],i[2]])]}case"_FusedConv2D":{const{stride:a,pad:s,dataFormat:o,dilations:i,biasArg:l,preluArg:u,activationFunc:c,leakyreluAlpha:d}=Ce(e,t,n);return[r.fused.conv2d({x:A("x",e,t,n),filter:A("filter",e,t,n),strides:[a[1],a[2]],pad:s,dataFormat:o,dilations:[i[1],i[2]],bias:l,activation:c,preluActivationWeights:u,leakyreluAlpha:d})]}case"FusedDepthwiseConv2dNative":{const{stride:a,pad:s,dataFormat:o,dilations:i,biasArg:l,preluArg:u,activationFunc:c,leakyreluAlpha:d}=Ce(e,t,n);return[r.fused.depthwiseConv2d({x:A("x",e,t,n),filter:A("filter",e,t,n),strides:[a[1],a[2]],pad:s,dataFormat:o,dilations:[i[1],i[2]],bias:l,activation:c,preluActivationWeights:u,leakyreluAlpha:d})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const a=A("outputShape",e,t,n),s=A("strides",e,t,n),o=M(e,t,n);return[r.conv2dTranspose(A("x",e,t,n),A("filter",e,t,n),a,[s[1],s[2]],o)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const a=A("strides",e,t,n),s=M(e,t,n),o=A("dilations",e,t,n),i=A("dataFormat",e,t,n).toUpperCase();return[r.depthwiseConv2d(A("input",e,t,n),A("filter",e,t,n),[a[1],a[2]],s,i,[o[1],o[2]])]}case"Conv3D":{const a=A("strides",e,t,n),s=A("pad",e,t,n),o=A("dataFormat",e,t,n).toUpperCase(),i=A("dilations",e,t,n);return[r.conv3d(A("x",e,t,n),A("filter",e,t,n),[a[1],a[2],a[3]],s,o,[i[1],i[2],i[3]])]}case"AvgPool":{const a=A("strides",e,t,n),s=A("pad",e,t,n),o=A("kernelSize",e,t,n);return[r.avgPool(A("x",e,t,n),[o[1],o[2]],[a[1],a[2]],s)]}case"MaxPool":{const a=A("strides",e,t,n),s=A("pad",e,t,n),o=A("kernelSize",e,t,n);return[r.maxPool(A("x",e,t,n),[o[1],o[2]],[a[1],a[2]],s)]}case"MaxPoolWithArgmax":{const a=A("strides",e,t,n),s=A("pad",e,t,n),o=A("kernelSize",e,t,n),i=A("includeBatchInIndex",e,t,n),{result:l,indexes:u}=r.maxPoolWithArgmax(A("x",e,t,n),[o[1],o[2]],[a[1],a[2]],s,i);return[l,u]}case"AvgPool3D":{const a=A("strides",e,t,n),s=A("pad",e,t,n),o=A("kernelSize",e,t,n);return[r.avgPool3d(A("x",e,t,n),[o[1],o[2],o[3]],[a[1],a[2],a[3]],s)]}case"MaxPool3D":{const a=A("strides",e,t,n),s=A("pad",e,t,n),o=A("kernelSize",e,t,n);return[r.maxPool3d(A("x",e,t,n),[o[1],o[2],o[3]],[a[1],a[2],a[3]],s)]}case"Dilation2D":{const a=A("strides",e,t,n),s=A("pad",e,t,n),o=A("dilations",e,t,n),i=a[1],l=a[2],u=o[1],c=o[2];return[r.dilation2d(A("x",e,t,n),A("filter",e,t,n),[i,l],s,[u,c],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"creation":return a((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:w;switch(e.op){case"Fill":{const a=A("shape",e,t,n),s=A("dtype",e,t,n),o=A("value",e,t,n);return[r.fill(a,o,s)]}case"LinSpace":{const a=A("start",e,t,n),s=A("stop",e,t,n),o=A("num",e,t,n);return[r.linspace(a,s,o)]}case"Multinomial":{const a=A("logits",e,t,n),s=A("numSamples",e,t,n),o=A("seed",e,t,n);return[r.multinomial(a,s,o)]}case"OneHot":{const a=A("indices",e,t,n),s=A("depth",e,t,n),o=A("onValue",e,t,n),i=A("offValue",e,t,n),l=A("dtype",e,t,n);return[r.oneHot(a,s,o,i,l)]}case"Ones":return[r.ones(A("shape",e,t,n),A("dtype",e,t,n))];case"OnesLike":return[r.onesLike(A("x",e,t,n))];case"RandomStandardNormal":return[r.randomStandardNormal(A("shape",e,t,n),A("dtype",e,t,n),A("seed",e,t,n))];case"RandomUniform":return[r.randomUniform(A("shape",e,t,n),A("minval",e,t,n),A("maxval",e,t,n),A("dtype",e,t,n))];case"RandomUniformInt":return[r.randomUniformInt(A("shape",e,t,n),A("minval",e,t,n),A("maxval",e,t,n),A("seed",e,t,n))];case"Range":{const a=A("start",e,t,n),s=A("stop",e,t,n),o=A("step",e,t,n);return[r.range(a,s,o,A("dtype",e,t,n))]}case"TruncatedNormal":{const a=A("shape",e,t,n),s=A("mean",e,t,n),o=A("stdDev",e,t,n),i=A("seed",e,t,n);return[r.truncatedNormal(a,s,o,A("dtype",e,t,n),i)]}case"Zeros":return[r.zeros(A("shape",e,t,n),A("dtype",e,t,n))];case"ZerosLike":return[r.zerosLike(A("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"dynamic":return async function(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:w;switch(e.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:s,maxOutputSize:o,iouThreshold:i,scoreThreshold:l,softNmsSigma:u}=Ee(e,t,n),c=await a.image.nonMaxSuppressionWithScoreAsync(r,s,o,i,l,u);return[c.selectedIndices,c.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:s,maxOutputSize:o,iouThreshold:i,scoreThreshold:l}=Ee(e,t,n),u=A("padToMaxOutputSize",e,t,n),c=await a.image.nonMaxSuppressionPaddedAsync(r,s,o,i,l,u);return[c.selectedIndices,c.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:s,maxOutputSize:o,iouThreshold:i,scoreThreshold:l}=Ee(e,t,n);return[await a.image.nonMaxSuppressionAsync(r,s,o,i,l)]}case"Where":{const r=a.cast(A("condition",e,t,n),"bool"),s=[await a.whereAsync(r)];return r.dispose(),s}case"ListDiff":return a.setdiff1dAsync(A("x",e,t,n),A("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n);case"evaluation":return a((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:w;switch(e.op){case"LowerBound":{const a=A("sortedSequence",e,t,n),s=A("values",e,t,n);return[r.lowerBound(a,s)]}case"TopKV2":{const a=A("x",e,t,n),s=A("k",e,t,n),o=A("sorted",e,t,n),i=r.topk(a,s,o);return[i.values,i.indices]}case"UpperBound":{const a=A("sortedSequence",e,t,n),s=A("values",e,t,n);return[r.upperBound(a,s)]}case"Unique":{const a=A("x",e,t,n),s=r.unique(a);return[s.values,s.indices]}case"UniqueV2":{const a=A("x",e,t,n),s=A("axis",e,t,n),o=r.unique(a,s);return[o.values,o.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"image":return a((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:w;switch(e.op){case"ResizeBilinear":{const a=A("images",e,t,n),s=A("size",e,t,n),o=A("alignCorners",e,t,n),i=A("halfPixelCenters",e,t,n);return[r.image.resizeBilinear(a,[s[0],s[1]],o,i)]}case"ResizeNearestNeighbor":{const a=A("images",e,t,n),s=A("size",e,t,n),o=A("alignCorners",e,t,n),i=A("halfPixelCenters",e,t,n);return[r.image.resizeNearestNeighbor(a,[s[0],s[1]],o,i)]}case"CropAndResize":{const a=A("image",e,t,n),s=A("boxes",e,t,n),o=A("boxInd",e,t,n),i=A("cropSize",e,t,n),l=A("method",e,t,n),u=A("extrapolationValue",e,t,n);return[r.image.cropAndResize(a,s,o,i,l,u)]}case"ImageProjectiveTransformV3":{const a=A("images",e,t,n),s=A("transforms",e,t,n),o=A("outputShape",e,t,n),i=A("fillValue",e,t,n),l=A("interpolation",e,t,n),u=A("fillMode",e,t,n);return[r.image.transform(a,s,l.toLowerCase(),u.toLowerCase(),i,o)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"graph":return a((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:w;switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const a=A("default",e,t,n);return[_(e.name,t,n)||a];case"Placeholder":return[_(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[P(A("x",e,t,n))];case"IdentityN":return A("x",e,t,n).map((e=>P(e)));case"Shape":return[r.tensor1d(A("x",e,t,n).shape,"int32")];case"ShapeN":return A("x",e,t,n).map((e=>r.tensor1d(e.shape)));case"Size":return[r.scalar(A("x",e,t,n).size,"int32")];case"Rank":return[r.scalar(A("x",e,t,n).rank,"int32")];case"NoOp":return[r.scalar(1)];case"Print":const s=A("x",e,t,n),o=A("data",e,t,n),i=A("message",e,t,n),l=A("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(i);for(let e=0;e<o.length;e++)console.log(Array.prototype.slice.call(o[e].dataSync()).slice(0,l));return[s];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"logical":return a((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:w;switch(e.op){case"Equal":return[r.equal(A("a",e,t,n),A("b",e,t,n))];case"NotEqual":return[r.notEqual(A("a",e,t,n),A("b",e,t,n))];case"Greater":return[r.greater(A("a",e,t,n),A("b",e,t,n))];case"GreaterEqual":return[r.greaterEqual(A("a",e,t,n),A("b",e,t,n))];case"Less":return[r.less(A("a",e,t,n),A("b",e,t,n))];case"LessEqual":return[r.lessEqual(A("a",e,t,n),A("b",e,t,n))];case"LogicalAnd":return[r.logicalAnd(A("a",e,t,n),A("b",e,t,n))];case"LogicalNot":return[r.logicalNot(A("a",e,t,n))];case"LogicalOr":return[r.logicalOr(A("a",e,t,n),A("b",e,t,n))];case"Select":case"SelectV2":return[r.where(A("condition",e,t,n),A("a",e,t,n),A("b",e,t,n))];case"BitwiseAnd":return[r.bitwiseAnd(A("a",e,t,n),A("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"matrices":return a((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:w;switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[r.matMul(A("a",e,t,n),A("b",e,t,n),A("transposeA",e,t,n),A("transposeB",e,t,n))];case"Einsum":return[r.einsum(A("equation",e,t,n),...A("tensors",e,t,n))];case"Transpose":return[r.transpose(A("x",e,t,n),A("perm",e,t,n))];case"_FusedMatMul":const[a,s]=A("fusedOps",e,t,n),o="biasadd"===a,i="prelu"===s,l=A("numArgs",e,t,n),u=A("leakyreluAlpha",e,t,n);if(o){if(i&&2!==l)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==l)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[c,d]=A("args",e,t,n);return[r.fused.matMul({a:A("a",e,t,n),b:A("b",e,t,n),transposeA:A("transposeA",e,t,n),transposeB:A("transposeB",e,t,n),bias:c,activation:s,preluActivationWeights:d,leakyreluAlpha:u})];case"MatrixBandPart":return[r.linalg.bandPart(A("a",e,t,n),A("numLower",e,t,n),A("numUpper",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"normalization":return a((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:w;switch(e.op){case"EuclideanNorm":return[r.euclideanNorm(A("x",e,t,n),A("axis",e,t,n),A("keepDims",e,t,n))];case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[r.batchNorm(A("x",e,t,n),A("mean",e,t,n),A("variance",e,t,n),A("offset",e,t,n),A("scale",e,t,n),A("epsilon",e,t,n))];case"LRN":return[r.localResponseNormalization(A("x",e,t,n),A("radius",e,t,n),A("bias",e,t,n),A("alpha",e,t,n),A("beta",e,t,n))];case"Softmax":return[r.softmax(A("x",e,t,n))];case"LogSoftmax":return[r.logSoftmax(A("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"ragged":return a((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:w;switch(e.op){case"RaggedGather":{const{outputNestedSplits:a,outputDenseValues:s}=r.raggedGather(A("paramsNestedSplits",e,t,n),A("paramsDenseValues",e,t,n),A("indices",e,t,n),A("outputRaggedRank",e,t,n));return a.concat(s)}case"RaggedRange":{const{rtNestedSplits:a,rtDenseValues:s}=r.raggedRange(A("starts",e,t,n),A("limits",e,t,n),A("splits",e,t,n));return[a,s]}case"RaggedTensorToTensor":return[r.raggedTensorToTensor(A("shape",e,t,n),A("values",e,t,n),A("defaultValue",e,t,n),A("rowPartitionTensors",e,t,n),A("rowPartitionTypes",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"reduction":return a((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:w;switch(e.op){case"Max":{const a=A("axis",e,t,n),s=A("keepDims",e,t,n);return[r.max(A("x",e,t,n),a,s)]}case"Mean":{const a=A("axis",e,t,n),s=A("keepDims",e,t,n);return[r.mean(A("x",e,t,n),a,s)]}case"Min":{const a=A("axis",e,t,n),s=A("keepDims",e,t,n);return[r.min(A("x",e,t,n),a,s)]}case"Sum":{const a=A("axis",e,t,n),s=A("keepDims",e,t,n);return[r.sum(A("x",e,t,n),a,s)]}case"All":{const a=A("axis",e,t,n),s=A("keepDims",e,t,n);return[r.all(A("x",e,t,n),a,s)]}case"Any":{const a=A("axis",e,t,n),s=A("keepDims",e,t,n);return[r.any(A("x",e,t,n),a,s)]}case"ArgMax":{const a=A("axis",e,t,n);return[r.argMax(A("x",e,t,n),a)]}case"ArgMin":{const a=A("axis",e,t,n);return[r.argMin(A("x",e,t,n),a)]}case"Prod":{const a=A("axis",e,t,n),s=A("keepDims",e,t,n);return[r.prod(A("x",e,t,n),a,s)]}case"Cumprod":{const a=A("axis",e,t,n),s=A("exclusive",e,t,n),o=A("reverse",e,t,n);return[r.cumprod(A("x",e,t,n),a,s,o)]}case"Cumsum":{const a=A("axis",e,t,n),s=A("exclusive",e,t,n),o=A("reverse",e,t,n);return[r.cumsum(A("x",e,t,n),a,s,o)]}case"Bincount":const a=A("x",e,t,n),s=A("weights",e,t,n),o=A("size",e,t,n);return[r.bincount(a,s,o)];case"DenseBincount":{const a=A("x",e,t,n),s=A("weights",e,t,n),o=A("size",e,t,n),i=A("binaryOutput",e,t,n);return[r.denseBincount(a,s,o,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"slice_join":return a((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:w;switch(e.op){case"ConcatV2":case"Concat":{const a=A("n",e,t,n),s=A("axis",e,t,n);let o=A("tensors",e,t,n);return o=o.slice(0,a),[r.concat(o,s)]}case"Gather":{const a=A("x",e,t,n),s=A("indices",e,t,n);return[r.gather(a,r.cast(s,"int32"),0)]}case"GatherV2":{const a=A("axis",e,t,n),s=A("batchDims",e,t,n),o=A("x",e,t,n),i=A("indices",e,t,n);return[r.gather(o,r.cast(i,"int32"),a,s)]}case"Reverse":{const a=A("dims",e,t,n),s=[];for(let e=0;e<a.length;e++)a[e]&&s.push(e);const o=A("x",e,t,n);return[r.reverse(o,s)]}case"ReverseV2":{const a=A("axis",e,t,n),s=A("x",e,t,n);return[r.reverse(s,a)]}case"Slice":{const a=A("begin",e,t,n),s=A("size",e,t,n);return[r.slice(A("x",e,t,n),a,s)]}case"StridedSlice":{const a=A("begin",e,t,n),s=A("end",e,t,n),o=A("strides",e,t,n),i=A("beginMask",e,t,n),l=A("endMask",e,t,n),u=A("ellipsisMask",e,t,n),c=A("newAxisMask",e,t,n),d=A("shrinkAxisMask",e,t,n),p=A("x",e,t,n);return[r.stridedSlice(p,a,s,o,i,l,u,c,d)]}case"Pack":return(0,S.tidy)((()=>{const a=A("axis",e,t,n),s=A("tensors",e,t,n),o=s[0].shape,i=r.squeeze(s[0]).shape,l=s.map((e=>{const t=S.util.arraysEqual(e.shape,o);if(!t&&!S.util.arraysEqual(r.squeeze(e).shape,i))throw new Error("the input tensors shape does not match");return t?e:r.reshape(e,o)}));return[r.stack(l,a)]}));case"Unpack":{const a=A("axis",e,t,n),s=A("tensor",e,t,n);return r.unstack(s,a)}case"Tile":{const a=A("reps",e,t,n);return[r.tile(A("x",e,t,n),a)]}case"Split":case"SplitV":{const a=A("axis",e,t,n),s=A("numOrSizeSplits",e,t,n),o=A("x",e,t,n);return r.split(o,s,a)}case"ScatterNd":{const a=A("indices",e,t,n),s=A("values",e,t,n),o=A("shape",e,t,n);return[r.scatterND(a,s,o)]}case"GatherNd":{const a=A("x",e,t,n),s=A("indices",e,t,n);return[r.gatherND(a,s)]}case"SparseToDense":{const a=A("sparseIndices",e,t,n),s=A("outputShape",e,t,n),o=A("sparseValues",e,t,n),i=A("defaultValue",e,t,n);return[r.sparseToDense(a,o,s,o.dtype===i.dtype?i:r.cast(i,o.dtype))]}case"TensorScatterUpdate":{const a=A("indices",e,t,n),s=A("values",e,t,n),o=A("tensor",e,t,n);return[r.tensorScatterUpdate(o,a,s)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"sparse":return a((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:w;switch(e.op){case"SparseFillEmptyRows":{const{outputIndices:a,outputValues:s,emptyRowIndicator:o,reverseIndexMap:i}=r.sparse.sparseFillEmptyRows(A("indices",e,t,n),A("values",e,t,n),A("denseShape",e,t,n),A("defaultValue",e,t,n));return[a,s,o,i]}case"SparseReshape":{const{outputIndices:a,outputShape:s}=r.sparse.sparseReshape(A("inputIndices",e,t,n),A("inputShape",e,t,n),A("newShape",e,t,n));return[a,s]}case"SparseSegmentMean":return[r.sparse.sparseSegmentMean(A("data",e,t,n),A("indices",e,t,n),A("segmentIds",e,t,n))];case"SparseSegmentSum":return[r.sparse.sparseSegmentSum(A("data",e,t,n),A("indices",e,t,n),A("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"spectral":return a((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:w;switch(e.op){case"FFT":return[r.fft(A("x",e,t,n))];case"IFFT":return[r.ifft(A("x",e,t,n))];case"RFFT":return[r.rfft(A("x",e,t,n))];case"IRFFT":return[r.irfft(A("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"string":return a((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:w;switch(e.op){case"StaticRegexReplace":return[r.string.staticRegexReplace(A("input",e,t,n),A("pattern",e,t,n),A("rewrite",e,t,n),A("replaceGlobal",e,t,n))];case"StringNGrams":{const{nGrams:a,nGramsSplits:s}=r.string.stringNGrams(A("data",e,t,n),A("dataSplits",e,t,n),A("separator",e,t,n),A("nGramWidths",e,t,n),A("leftPad",e,t,n),A("rightPad",e,t,n),A("padWidth",e,t,n),A("preserveShortSequences",e,t,n));return[a,s]}case"StringSplit":{const{indices:a,values:s,shape:o}=r.string.stringSplit(A("input",e,t,n),A("delimiter",e,t,n),A("skipEmpty",e,t,n));return[a,s,o]}case"StringToHashBucketFast":return[r.string.stringToHashBucketFast(A("input",e,t,n),A("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"transformation":return a((()=>function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:w;switch(e.op){case"Cast":return[r.cast(A("x",e,t,n),A("dtype",e,t,n))];case"ExpandDims":{const a=A("axis",e,t,n);return[r.expandDims(A("x",e,t,n),a)]}case"Squeeze":{const a=A("axis",e,t,n);return[r.squeeze(A("x",e,t,n),a)]}case"Reshape":return[r.reshape(A("x",e,t,n),A("shape",e,t,n))];case"EnsureShape":return[r.ensureShape(A("x",e,t,n),A("shape",e,t,n))];case"MirrorPad":return[r.mirrorPad(A("x",e,t,n),A("padding",e,t,n),A("mode",e,t,n))];case"PadV2":case"Pad":return[r.pad(A("x",e,t,n),A("padding",e,t,n),A("constantValue",e,t,n))];case"SpaceToBatchND":{const a=A("blockShape",e,t,n),s=A("paddings",e,t,n);return[r.spaceToBatchND(A("x",e,t,n),a,s)]}case"BatchToSpaceND":{const a=A("blockShape",e,t,n),s=A("crops",e,t,n);return[r.batchToSpaceND(A("x",e,t,n),a,s)]}case"DepthToSpace":{const a=A("blockSize",e,t,n),s=A("dataFormat",e,t,n).toUpperCase();return[r.depthToSpace(A("x",e,t,n),a,s)]}case"BroadcastTo":return[r.broadcastTo(A("x",e,t,n),A("shape",e,t,n))];case"BroadcastArgs":return[r.broadcastArgs(A("s0",e,t,n),A("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n)));case"hash_table":return(async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{const a=r.getHashTableHandleByName(e.name);if(null!=a)return[a];{const a=A("keyDType",e,t,n),s=A("valueDType",e,t,n),o=new Ae(a,s);return r.addHashTable(e.name,o),[o.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{const a=A("tableHandle",e,t,n,r),s=A("keys",e,t,n),o=A("values",e,t,n),i=r.getHashTableById(a.id);return[await i.import(s,o)]}case"LookupTableFind":case"LookupTableFindV2":{const a=A("tableHandle",e,t,n,r),s=A("keys",e,t,n),o=A("defaultValue",e,t,n),i=r.getHashTableById(a.id);return[await i.find(s,o)]}case"LookupTableSize":case"LookupTableSizeV2":{const a=A("tableHandle",e,t,n,r);return[r.getHashTableById(a.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n,r);case"custom":const s=E(e.op);if(s&&s.customExecutor)return s.customExecutor(new be(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return S.util.isPromise(s)?s.then((e=>[].concat(e))):[].concat(s)}class Re{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},a=arguments.length>4?arguments[4]:void 0;this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.parseNodeNameCache=a,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`)).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}function Fe(e,t,n,r){const a=new Set,s=[];let o=null,i=null;const l=new Set,u=new Set(Object.keys(e).map((e=>D(e)[0])));r=r||[];const c=new Set(r.map((e=>D(e.name)[0]))),d=[...t];for(;d.length>0;){const e=d.pop();(ze(e)||Be(e)||Ve(e))&&null==o&&(o=e,i=o.children.map((e=>e.name)).filter((e=>a.has(e)))),a.add(e.name),null==n[e.name]&&(u.has(e.name)||c.has(e.name)||(0!==e.inputs.length?e.inputs.forEach((e=>{l.has(e.name)||(l.add(e.name),d.push(e))})):s.push(e.name)))}return{inputs:e,outputs:t,usedNodes:a,missingInputs:s,dynamicNode:o,syncInputs:i}}function Oe(e,t){const{usedNodes:n,inputs:r}=t,a=Object.keys(r).map((e=>D(e)[0])).map((t=>e.nodes[t])),s=e.initNodes||[],o=e=>n.has("string"===typeof e?e:e.name);function i(e){return[...new Map(e.map((e=>[e.name,e]))).values()]}const l=i([...a,...e.weights,...s]).filter(o),u=i([...l,...Object.values(e.nodes)]).filter(o),c=new Map(u.map((e=>[e.name,e]))),d={};for(const m of u){d[m.name]=d[m.name]||0;for(const e of m.children)o(e)||(d[e.name]=Number.POSITIVE_INFINITY),d[e.name]=(d[e.name]||0)+1}const p=Object.entries(d).filter((e=>{let[,t]=e;return 0===t})).map((e=>{let[t]=e;return t})),h=[...p];for(;p.length>0;){const e=p.pop(),t=c.get(e);for(const n of t.children.filter(o))0===--d[n.name]&&(h.push(n.name),p.push(n.name))}const f=function(e,t){const n=new Map(e.map((e=>[e.name,e]))),r=t.map((e=>e.name)),a=new Set(r);for(;r.length>0;){const e=r.pop(),t=n.get(e);for(const s of t.children)n.has(s.name)&&!a.has(s.name)&&(a.add(s.name),r.push(s.name))}const s=e.filter((e=>a.has(e.name)));return s}(h.map((e=>c.get(e))),l);return function(e,t){const n=new Map(e.map(((e,t)=>[e.name,t]))),r=new Set(t.map((e=>e.name))),a=e=>r.has("string"===typeof e?e:e.name),s=new Set(e.map((e=>e.name))),o=e=>s.has("string"===typeof e?e:e.name);for(const i of e){for(const e of i.children.filter(o)){if(!n.has(e.name))throw new De(`Child ${e.name} of node ${i.name} is unreachable.`);if(n.get(i.name)>n.get(e.name))throw new De(`Node ${i.name} is scheduled to run after its child ${e.name}.`)}if(!a(i))for(const e of i.inputs){if(!n.has(e.name))throw new De(`Input ${e.name} of node ${i.name} is unreachable.`);if(n.get(e.name)>n.get(i.name))throw new De(`Node ${i.name} is scheduled to run before its input ${e.name}.`)}}}(f,l),f}class De extends Error{constructor(e){super(`NodesExecutionOrderError: ${e}`)}}const Me=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),Pe=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),Le=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function ze(e){return Me.has(e.op)}function Be(e){return Pe.has(e.op)}function Ve(e){return Le.has(e.op)}class We{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new We(e.functions[t],this)}))}getCompilationKey(e,t){const n=e.map((e=>e.name)).sort(),r=t.map((e=>e.name)).sort();return n.join(this.SEPARATOR)+"--"+r.join(this.SEPARATOR)}compile(e,t){const n=Fe(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:a,syncInputs:s}=n;if(null!=a)throw new Error(`This execution contains the node '${a.name}', which has the dynamic op '${a.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${s}]`);if(r.length>0){const n=t.map((e=>e.name)),a=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${a}]. Missing the following inputs: [${r}]`)}const o=Oe(this.graph,n),i=function(e){const t=new Map(e.map(((e,t)=>[e.name,t]))),n=Number.MAX_SAFE_INTEGER,r=e.map(((e,t)=>ze(e)?n:t)),a=e=>{const n=r[t.get(e.name)];return null==n?-1:n},s=e.map(((e,t)=>e.children.map(a).reduce(((e,t)=>Math.max(e,t)),r[t]))),o=new Map;for(let i=0;i<e.length;++i){const t=s[i];if(t===n)continue;const r=e[i],a=e[t];o.has(a.name)||o.set(a.name,[]),o.get(a.name).push(r)}return o}(o);return{orderedNodes:o,nodeLiveUntilMap:i}}cloneAndKeepTensor(e){if(null==e)return null;const t=e.clone();return(0,S.keep)(t),t}cloneTensorList(e){if(!e)return null;return e.map((e=>this.cloneAndKeepTensor(e)))}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map((e=>{let[t,n]=e;return[t,this.cloneTensorList(n)]})))}execute(e,t){this.disposeIntermediateTensors(),e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const r=n.map((e=>this.graph.nodes[D(e)[0]])),a=t.map((e=>D(e)[0])),s=new Set(a);let o=a.map((e=>this.graph.nodes[e]));0===o.length&&(o=this._outputs);const i=this.getCompilationKey(r,o);let l=this.compiledMap.get(i);null==l&&(l=this.compile(e,o),this.compiledMap.set(i,l));try{this.keepIntermediateTensors=(0,S.env)().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(d){this.keepIntermediateTensors=!1,console.warn(d.message)}const u={},c={};return(0,S.tidy)((()=>{const n=new Re(this.weightMap,u,c,this.functionExecutorMap,this.parseNodeNameCache),r=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach((t=>{const[a,s]=D(t,n),o=[];o[s]=e[t],r[a]=o,this.keepIntermediateTensors&&(this.clonedTensorsMap[a]=this.cloneTensorList(o))}));const a=this.getFrozenTensorIds(r),{orderedNodes:o,nodeLiveUntilMap:i}=l;for(const e of o){if(r[e.name])continue;const t=_e(e,r,n,this._resourceManager);if(S.util.isPromise(t))throw new Error(`The execution of the op '${e.op}' returned a promise. Please use model.executeAsync() instead.`);r[e.name]=t,this.keepIntermediateTensors&&(this.clonedTensorsMap[e.name]=this.cloneTensorList(t)),this.checkTensorForDisposalWithNodeLiveUntilInfo(e,r,n,a,s,i.get(e.name))}return null==this.parent&&n.dispose(a),t.map((e=>_(e,r,n)))}))}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,r,a,s,o){if(!ze(t)&&!s.has(e)){for(const r of n[e])null!=r&&(o[r.id]=(o[r.id]||0)+t.children.length);for(const e of t.inputs){if(ze(e))continue;const t=R(e.name,n,r);if(null!=t)for(const e of t){if(!e||e.kept||a.has(e.id))continue;const t=o[e.id];1===t?(e.dispose(),delete o[e.id]):null!=t&&o[e.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(e,t,n,r,a,s){function o(e){return ze(e)||a.has(e.name)}if(!ze(e)&&null!=s)for(const i of s){if(o(i))continue;const e=R(i.name,t,n);for(const t of e)!t||t.kept||r.has(t.id)||t.dispose()}}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach((e=>{for(const t of e)t&&!t.isDisposed&&t.dispose()})),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{};this.disposeIntermediateTensors(),n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepIntermediateTensors=(0,S.env)().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(d){this.keepIntermediateTensors=!1,console.warn(d.message)}const s=new Re(this.weightMap,r,a,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));const o=await this.executeWithControlFlow(e,s,t,n),i=t.map((e=>_(e,o,s))),l=i.map((e=>e.id)),u=Object.keys(e).map((t=>e[t].id)),c=new Set([...l,...u,...this.weightIds]);return Object.values(o).forEach((e=>{e.forEach((e=>{!e||e.isDisposed||c.has(e.id)||e.dispose()}))})),null==this.parent&&s.dispose(c),i}async executeFunctionAsync(e,t,n){const r=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){const a=Object.keys(e),s=a.map((e=>this.graph.nodes[D(e)[0]])),o=n.map((e=>D(e)[0])),i=new Set(o);let l=o.map((e=>this.graph.nodes[e]));0===l.length&&(l=this._outputs);const{usedNodes:u,missingInputs:c,dynamicNode:d,syncInputs:p}=Fe(e,l,this.weightMap,this._initNodes),h=[...s,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),f=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,r]=D(t),a=[];a[r]=e[t],f[n]=a}));const m={},g=this.getFrozenTensorIds(f),y={};for(;h.length>0;){const e=this.processStack(s,h,t,f,y,g,i,m,u);await Promise.all(e)}null!=d||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const b=l.filter((e=>!ze(e)&&!_(e.name,f,t))).map((e=>e.name));if(b.length>0){let e="";throw null!=d&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${p}]`),new Error(`Cannot compute the outputs [${b}] from the provided inputs [${a}]. Consider providing the following inputs: [${c}]. ${e}`)}return f}processStack(e,t,n,r,a,s,o,i,l){const u=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let c="";if("Enter"===e.node.op&&A("isConstant",e.node,r,n)&&([c]=F(e.node.name,n)),null==r[e.node.name]){const d=_e(e.node,r,n,this._resourceManager);c||([c]=F(e.node.name,n));const p=n.currentContext;S.util.isPromise(d)?u.push(d.then((u=>(r[c]=u,this.keepIntermediateTensors&&(this.clonedTensorsMap[c]=this.cloneTensorList(u)),n.currentContext=p,this.checkTensorForDisposal(c,e.node,r,n,s,o,i),this.processChildNodes(e.node,t,n,r,a,l),u)))):(r[c]=d,this.keepIntermediateTensors&&(this.clonedTensorsMap[c]=this.cloneTensorList(d)),this.checkTensorForDisposal(c,e.node,r,n,s,o,i),this.processChildNodes(e.node,t,n,r,a,l))}else this.processChildNodes(e.node,t,n,r,a,l)}return u}processChildNodes(e,t,n,r,a,s){e.children.forEach((e=>{const[o]=F(e.name,n);!a[o]&&s.has(e.name)&&("Merge"===e.op?e.inputNames.some((e=>!!_(e,r,n)))&&(a[o]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!_(e,r,n)))&&(a[o]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{const n=e[t],[r]=D(t),a=this.graph.nodes[r];if(a.attrParams.shape&&a.attrParams.shape.value){const e=a.attrParams.shape.value,t=e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t));S.util.assert(t,(()=>`The shape of dict['${a.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`))}a.attrParams.dtype&&a.attrParams.dtype.value&&S.util.assert(n.dtype===a.attrParams.dtype.value,(()=>`The dtype of dict['${a.name}'] provided in model.execute(dict) must be ${a.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(e){var t,n;const r={};for(const a in e){const s=null===(n=null===(t=this._signature)||void 0===t?void 0:t.inputs)||void 0===n?void 0:n[a];null!=s?r[s.name]=e[a]:r[a]=e[a]}return r}checkInputs(e){const t=Object.keys(e).filter((e=>{const[t]=D(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map((e=>{var t,n;const r=null===(n=null===(t=this._signature)||void 0===t?void 0:t.outputs)||void 0===n?void 0:n[e];return null!=r?r.name:e}),{})}checkOutputs(e){e.forEach((e=>{const[t]=D(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)}))}}class Ue{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}var Ge=n(285);const je="?tfjs-format=file",He="model.json";class Ye{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:S.io;this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=n,null==t&&(this.loadOptions={}),this.resourceManager=new Ue}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{const t=this.io.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=this.handler.load();return S.util.isPromise(e)?e.then((e=>null==e.getWeightStream?this.loadSync(e):this.loadStreaming(e))):this.loadSync(e)}loadSync(e){const t=this.io.decodeWeights(e.weightData,e.weightSpecs);return this.loadWithWeightMap(e,t)}async loadStreaming(e){if(null==e.getWeightStream)throw new Error("Model artifacts missing streamWeights function");const t=await(0,Ge.s5)(e.getWeightStream(),e.weightSpecs);return this.loadWithWeightMap(e,t)}loadWithWeightMap(e,t){this.artifacts=e;const n=this.artifacts.modelTopology;let r=this.artifacts.signature;if(null!=this.artifacts.userDefinedMetadata){const e=this.artifacts.userDefinedMetadata;null!=e.signature&&(r=e.signature),null!=e.structuredOutputKeys&&(this.structuredOutputKeys=e.structuredOutputKeys)}if(this.signature=r,this.version=`${n.versions.producer}.${n.versions.minConsumer}`,this.executor=new We(re.Instance.transformGraph(n,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(t),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=re.Instance.transformGraph(e.modelInitializer);this.initializer=new We(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if("string"===typeof e){const t=this.io.getSaveHandlers(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){const t=e instanceof S.Tensor?[e]:e,n={};return t.forEach(((e,t)=>n[this.structuredOutputKeys[t]]=e)),n}return e}predict(e,t){const n=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(n)}async predictAsync(e,t){const n=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(n)}normalizeInputs(e){var t;if(!(e instanceof S.Tensor)&&!Array.isArray(e)){const n=null===(t=this.signature)||void 0===t?void 0:t.inputs;if(null!=n)for(const t in n){const r=n[t];null!=r.resourceId&&(e[t]=this.resourceIdToCapturedInput[r.resourceId])}return e}e=Array.isArray(e)?e:[e];const n=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+n!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-n} non-resource placeholders, while there are ${e.length} input tensors provided.`);let r=0;return this.inputNodes.reduce(((t,n)=>{var a,s,o;const i=null===(o=null===(s=null===(a=this.signature)||void 0===a?void 0:a.inputs)||void 0===s?void 0:s[n])||void 0===o?void 0:o.resourceId;return t[n]=null!=i?this.resourceIdToCapturedInput[i]:e[r++],t}),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){const t=this.initializerSignature.outputs,n=Object.keys(t);for(let r=0;r<n.length;r++){const a=t[n[r]];this.resourceIdToCapturedInput[a.resourceId]=e[r]}}}execute(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&(0,S.dispose)(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}async function qe(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:S.io;if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&"string"===typeof e&&(e=function(e){e.endsWith("/")||(e+="/");return`${e}${He}${je}`}(e));const r=new Ye(e,t,n);return await r.load(),r}function Ke(e){if(null==e)throw new Error("modelUrl in loadGraphModelSync() cannot be null. Please provide model artifacts or an IOHandler that loads the model");let t;if(e instanceof Array){const[n,r]=e;if(!n)throw new Error("modelJSON must be the first element of the array");if(!r||!(r instanceof ArrayBuffer))throw new Error("An ArrayBuffer of weights must be the second element of the array");if(!("modelTopology"in n))throw new Error("Model JSON is missing 'modelTopology'");if(!("weightsManifest"in n))throw new Error("Model JSON is missing 'weightsManifest'");const a=S.io.getWeightSpecs(n.weightsManifest),s=S.io.getModelArtifactsForJSONSync(n,a,r);t=S.io.fromMemorySync(s)}else if("load"in e)t=e;else{if(!("modelTopology"in e&&"weightSpecs"in e&&"weightData"in e))throw new Error("Unknown model format");t=S.io.fromMemorySync(e)}const n=new Ye(t);return n.load(),n}const Xe="4.22.0"},5462:(e,t,n)=>{"use strict";n.d(t,{o:()=>o});var r=n(2164),a=n(9554),s=n(4148);const o=(0,n(7892).op)({exp_:function(e){const t={x:(0,s.YT)(e,"x","exp")};return r.T2.runKernel(a.ox3,t)}})},5583:(e,t,n)=>{"use strict";n.d(t,{t:()=>o});var r=n(2164),a=n(9554),s=n(4148);const o=(0,n(7892).op)({reshape_:function(e,t){const n={x:(0,s.YT)(e,"x","reshape","string_or_numeric")},o={shape:t};return r.T2.runKernel(a.R23,n,o)}})},5692:(e,t,n)=>{"use strict";n.d(t,{n:()=>i});var r=n(2164),a=n(9554),s=n(4148),o=n(8805);const i=(0,n(7892).op)({logicalAnd_:function(e,t){const n=(0,s.YT)(e,"a","logicalAnd","bool"),i=(0,s.YT)(t,"b","logicalAnd","bool");(0,o.assertAndGetBroadcastShape)(n.shape,i.shape);const l={a:n,b:i};return r.T2.runKernel(a.RUm,l)}})},5740:(e,t,n)=>{"use strict";n.d(t,{_:()=>o});var r=n(2164),a=n(9554),s=n(4148);const o=(0,n(7892).op)({sign_:function(e){const t={x:(0,s.YT)(e,"x","sign")};return r.T2.runKernel(a.YVe,t)}})},5743:(e,t,n)=>{"use strict";n.r(t),n.d(t,{Abs:()=>yt.ljI,Acos:()=>yt.Vvy,Acosh:()=>yt.PH8,AdadeltaOptimizer:()=>Ae,AdagradOptimizer:()=>Re,AdamOptimizer:()=>De,AdamaxOptimizer:()=>Le,Add:()=>yt.OMN,AddN:()=>yt.EkD,All:()=>yt.u8Z,Any:()=>yt.FSt,ArgMax:()=>yt.Jp_,ArgMin:()=>yt.p_m,Asin:()=>yt.QKF,Asinh:()=>yt.epO,Atan:()=>yt.TyE,Atan2:()=>yt.lxb,Atanh:()=>yt.zP9,AvgPool:()=>yt.ho8,AvgPool3D:()=>yt.cS,AvgPool3DGrad:()=>yt.wwC,AvgPoolGrad:()=>yt.VCH,BatchMatMul:()=>yt.jAQ,BatchToSpaceND:()=>yt.Ik2,Bincount:()=>yt.N4F,BitwiseAnd:()=>yt.HNs,BroadcastArgs:()=>yt.vj7,BroadcastTo:()=>yt.LB5,Cast:()=>yt.KXH,Ceil:()=>yt.QDP,ClipByValue:()=>yt.vaV,Complex:()=>yt.pr3,ComplexAbs:()=>yt.$zE,Concat:()=>yt.$dB,Conv2D:()=>yt.p2J,Conv2DBackpropFilter:()=>yt.rFm,Conv2DBackpropInput:()=>yt.jfg,Conv3D:()=>yt.A1h,Conv3DBackpropFilterV2:()=>yt.iGz,Conv3DBackpropInputV2:()=>yt.gC7,Cos:()=>yt.Mn0,Cosh:()=>yt.MnK,CropAndResize:()=>yt.MRQ,Cumprod:()=>yt.jj_,Cumsum:()=>yt.nY8,DataStorage:()=>hr.GJ,DenseBincount:()=>yt.wNW,DepthToSpace:()=>yt.TMz,DepthwiseConv2dNative:()=>yt.tGH,DepthwiseConv2dNativeBackpropFilter:()=>yt.X$8,DepthwiseConv2dNativeBackpropInput:()=>yt.nVu,Diag:()=>yt.ORI,Dilation2D:()=>yt.jxD,Dilation2DBackpropFilter:()=>yt.pk0,Dilation2DBackpropInput:()=>yt.bP9,Draw:()=>yt.XmO,ENV:()=>b.Km,Einsum:()=>yt.Qgm,Elu:()=>yt.Pah,EluGrad:()=>yt.rsH,Environment:()=>b.OH,Equal:()=>yt.BRl,Erf:()=>yt._s9,Exp:()=>yt.ox3,ExpandDims:()=>yt.ybN,Expm1:()=>yt.ybj,FFT:()=>yt.rGP,Fill:()=>yt.SQl,FlipLeftRight:()=>yt.BxF,Floor:()=>yt.ZgB,FloorDiv:()=>yt.ElG,FromPixels:()=>yt.awo,FusedBatchNorm:()=>yt.i5R,FusedConv2D:()=>yt.aAr,FusedDepthwiseConv2D:()=>yt.T7M,GatherNd:()=>yt.O4G,GatherV2:()=>yt.mxL,Greater:()=>yt.XhZ,GreaterEqual:()=>yt.lLS,IFFT:()=>yt.OAQ,Identity:()=>yt.lzr,Imag:()=>yt.dv8,IsFinite:()=>yt.gIW,IsInf:()=>yt.E3$,IsNan:()=>yt.iPs,KernelBackend:()=>hr.uI,LRN:()=>yt.jM4,LRNGrad:()=>yt.ToN,LeakyRelu:()=>yt.X0$,Less:()=>yt.mIA,LessEqual:()=>yt.CwD,LinSpace:()=>yt.mnI,Log:()=>yt.tG8,Log1p:()=>yt.Cg$,LogSoftmax:()=>yt.zfU,LogicalAnd:()=>yt.RUm,LogicalNot:()=>yt.nZd,LogicalOr:()=>yt.LXA,LogicalXor:()=>yt.RW8,LowerBound:()=>yt.yPW,MatrixBandPart:()=>yt.WRv,Max:()=>yt.VAI,MaxPool:()=>yt.t3d,MaxPool3D:()=>yt.ySp,MaxPool3DGrad:()=>yt.cHb,MaxPoolGrad:()=>yt.RXX,MaxPoolWithArgmax:()=>yt.TL8,Maximum:()=>yt.LDN,Mean:()=>yt.g5A,Min:()=>yt.lNG,Minimum:()=>yt.LG0,MirrorPad:()=>yt.x7F,Mod:()=>yt.BLA,MomentumOptimizer:()=>Be,Multinomial:()=>yt.WT3,Multiply:()=>yt.xu7,Neg:()=>yt.l0G,NonMaxSuppressionV3:()=>yt.SDM,NonMaxSuppressionV4:()=>yt.Zl4,NonMaxSuppressionV5:()=>yt.e0f,NotEqual:()=>yt.ylV,OP_SCOPE_SUFFIX:()=>Zt.BTT,OneHot:()=>yt.urI,OnesLike:()=>yt.LWX,Optimizer:()=>$e,OptimizerConstructors:()=>Kt,Pack:()=>yt.mM$,PadV2:()=>yt.ODT,Pool:()=>yt.bCz,Pow:()=>yt.pyJ,Prelu:()=>yt.Ncv,Prod:()=>yt.kdj,RMSPropOptimizer:()=>Ve,RaggedGather:()=>yt.oJ2,RaggedRange:()=>yt.CQC,RaggedTensorToTensor:()=>yt.mH5,Range:()=>yt.Q6t,Rank:()=>Xt.rg,Real:()=>yt.LRy,RealDiv:()=>yt.sDr,Reciprocal:()=>yt.huO,Reduction:()=>Qt.i,Relu:()=>yt.fUj,Relu6:()=>yt.P_L,Reshape:()=>yt.R23,ResizeBilinear:()=>yt.hgw,ResizeBilinearGrad:()=>yt.FCQ,ResizeNearestNeighbor:()=>yt.jOE,ResizeNearestNeighborGrad:()=>yt.XQy,Reverse:()=>yt.D7i,RotateWithOffset:()=>yt.BK4,Round:()=>yt.hVg,Rsqrt:()=>yt.TOR,SGDOptimizer:()=>ze,ScatterNd:()=>yt.pJc,SearchSorted:()=>yt.uWl,Select:()=>yt.l6P,Selu:()=>yt.u$b,Sigmoid:()=>yt.vI1,Sign:()=>yt.YVe,Sin:()=>yt.hql,Sinh:()=>yt.J3C,Slice:()=>yt.JiE,Softmax:()=>yt.rFG,Softplus:()=>yt.Fin,SpaceToBatchND:()=>yt.A8B,SparseFillEmptyRows:()=>yt.C8s,SparseReshape:()=>yt.BoJ,SparseSegmentMean:()=>yt.L6G,SparseSegmentSum:()=>yt.DvZ,SparseToDense:()=>yt.jgd,SplitV:()=>yt.Blb,Sqrt:()=>yt.dFH,Square:()=>yt.M6A,SquaredDifference:()=>yt.Ddj,StaticRegexReplace:()=>yt.GZp,Step:()=>yt.pnw,StridedSlice:()=>yt.UcO,StringNGrams:()=>yt.YAb,StringSplit:()=>yt.iW0,StringToHashBucketFast:()=>yt.$jE,Sub:()=>yt.PbM,Sum:()=>yt.WuN,Tan:()=>yt.oFs,Tanh:()=>yt.iuW,Tensor:()=>pe.qY,TensorBuffer:()=>pe.yl,TensorScatterUpdate:()=>yt.X4r,Tile:()=>yt.FAs,TopK:()=>yt.TBb,Transform:()=>yt.dLy,Transpose:()=>yt.wx0,Unique:()=>yt.EwU,Unpack:()=>yt.dXR,UnsortedSegmentSum:()=>yt.pPe,UpperBound:()=>yt.RMm,Variable:()=>pe.rT,ZerosLike:()=>yt.xJ3,_FusedMatMul:()=>yt.Dr,abs:()=>Zt.tnl,acos:()=>Zt.HQu,acosh:()=>Zt.FqL,add:()=>Zt.WQq,addN:()=>Zt.QiD,all:()=>Zt.Q7R,any:()=>Zt.bzn,argMax:()=>Zt.FLi,argMin:()=>Zt.XRg,asin:()=>Zt.qRo,asinh:()=>Zt.yHs,atan:()=>Zt.rYl,atan2:()=>Zt.FPz,atanh:()=>Zt.rfv,avgPool:()=>Zt.$jT,avgPool3d:()=>Zt.sub,backend:()=>fe.Hs,backend_util:()=>d,basicLSTMCell:()=>Zt.lZX,batchNorm:()=>Zt.$v7,batchNorm2d:()=>Zt.BFc,batchNorm3d:()=>Zt.kSi,batchNorm4d:()=>Zt.T5N,batchToSpaceND:()=>Zt.GTe,bincount:()=>Zt.HbZ,bitwiseAnd:()=>Zt.vjT,booleanMaskAsync:()=>Zt.ftb,broadcastArgs:()=>Zt.ROE,broadcastTo:()=>Zt.hOW,broadcast_util:()=>gt,browser:()=>i,buffer:()=>Zt.ra8,cast:()=>Zt.wgE,ceil:()=>Zt.mkO,clipByValue:()=>Zt.zQh,clone:()=>Zt.o8B,complex:()=>Zt.faB,concat:()=>Zt.xWs,concat1d:()=>Zt.I1m,concat2d:()=>Zt.RPU,concat3d:()=>Zt.O5O,concat4d:()=>Zt.P1l,conv1d:()=>Zt.kA9,conv2d:()=>Zt.Xtf,conv2dTranspose:()=>Zt.wX9,conv3d:()=>Zt.IPL,conv3dTranspose:()=>Zt.jIJ,copyRegisteredKernels:()=>bt.Cf,cos:()=>Zt.gnS,cosh:()=>Zt.yIG,cosineWindow:()=>Zt._jP,cumprod:()=>Zt.Lp0,cumsum:()=>Zt.rCv,customGrad:()=>ke._X,denseBincount:()=>Zt.aOp,deprecationWarn:()=>fe.fL,depthToSpace:()=>Zt.Rj8,depthwiseConv2d:()=>Zt.Gl3,device_util:()=>r,diag:()=>Zt.smy,dilation2d:()=>Zt.X7t,disableDeprecationWarnings:()=>fe.IS,dispose:()=>fe.AS,disposeVariables:()=>fe.rm,div:()=>Zt.y4m,divNoNan:()=>Zt.ek5,dot:()=>Zt.Omf,dropout:()=>Zt.EZY,einsum:()=>Zt._3C,elu:()=>Zt.Pqc,enableDebugMode:()=>fe.gY,enableProdMode:()=>fe.Sm,enclosingPowerOfTwo:()=>Zt.FJY,engine:()=>fe.Hi,ensureShape:()=>Zt.QP2,env:()=>b._K,equal:()=>Zt.LCg,erf:()=>Zt.Y12,euclideanNorm:()=>Zt.p4S,exp:()=>Zt.oNF,expandDims:()=>Zt.UG6,expm1:()=>Zt.IYd,eye:()=>Zt.y5U,fft:()=>Zt.hVP,fill:()=>Zt.GSj,findBackend:()=>fe.go,findBackendFactory:()=>fe.W4,floor:()=>Zt.RIf,floorDiv:()=>Zt.wh_,fused:()=>Zt.cZk,gather:()=>Zt.kgh,gatherND:()=>Zt.SY9,gather_util:()=>l,getBackend:()=>fe.jz,getGradient:()=>bt.vQ,getKernel:()=>bt._5,getKernelsForBackend:()=>bt.Op,grad:()=>ke.Dv,grads:()=>ke.ok,greater:()=>Zt.rhj,greaterEqual:()=>Zt.DQN,ifft:()=>Zt.KGM,imag:()=>Zt.ngS,image:()=>Zt.Slp,inTopKAsync:()=>Zt.U4u,io:()=>s,irfft:()=>Zt.ggX,isFinite:()=>Zt.MIs,isInf:()=>Zt.EN4,isNaN:()=>Zt.yrW,keep:()=>fe.aC,kernel_impls:()=>p,leakyRelu:()=>Zt.H8d,less:()=>Zt.M7h,lessEqual:()=>Zt.InN,linalg:()=>Zt.mPL,linspace:()=>Zt.mT8,localResponseNormalization:()=>Zt.Kgs,log:()=>Zt.Rm2,log1p:()=>Zt.Kko,logSigmoid:()=>Zt.nqI,logSoftmax:()=>Zt.HPB,logSumExp:()=>Zt.VZ,logicalAnd:()=>Zt.n76,logicalNot:()=>Zt.NSZ,logicalOr:()=>Zt.ztW,logicalXor:()=>Zt.rxB,losses:()=>Zt.YYh,lowerBound:()=>Zt.yzS,matMul:()=>Zt.NoW,math:()=>o,max:()=>Zt.T9B,maxPool:()=>Zt.jgi,maxPool3d:()=>Zt.NYV,maxPoolWithArgmax:()=>Zt.RO,maximum:()=>Zt.PhQ,mean:()=>Zt.i2o,memory:()=>fe.m1,meshgrid:()=>Zt.OYQ,min:()=>Zt.jkA,minimum:()=>Zt.BpO,mirrorPad:()=>Zt.FFZ,mod:()=>Zt.ziu,moments:()=>Zt.Clk,movingAverage:()=>Zt.CRk,mul:()=>Zt.lKK,multiRNNCell:()=>Zt.YDF,multinomial:()=>Zt.OjQ,neg:()=>Zt.HZy,nextFrame:()=>tn,norm:()=>Zt.xbf,notEqual:()=>Zt.Ec,oneHot:()=>Zt.Mw0,ones:()=>Zt.SaS,onesLike:()=>Zt.P61,op:()=>Zt.op,outerProduct:()=>Zt.X4o,pad:()=>Zt.eVF,pad1d:()=>Zt.BZs,pad2d:()=>Zt.grY,pad3d:()=>Zt.XHu,pad4d:()=>Zt.WLX,pool:()=>Zt.dzn,pow:()=>Zt.n7C,prelu:()=>Zt.NsG,print:()=>Zt.yyV,prod:()=>Zt._eU,profile:()=>fe.ME,raggedGather:()=>Zt.whe,raggedRange:()=>Zt.iyU,raggedTensorToTensor:()=>Zt.Q0_,rand:()=>Zt._9M,randomGamma:()=>Zt.pR9,randomNormal:()=>Zt.FE$,randomStandardNormal:()=>Zt.m0H,randomUniform:()=>Zt.YeY,randomUniformInt:()=>Zt.HYA,range:()=>Zt.y17,ready:()=>fe.Gc,real:()=>Zt.xav,reciprocal:()=>Zt.VOZ,registerBackend:()=>fe.gJ,registerGradient:()=>bt.kr,registerKernel:()=>bt.tA,relu:()=>Zt.VVh,relu6:()=>Zt.j__,removeBackend:()=>fe.rE,reshape:()=>Zt.tQQ,reverse:()=>Zt.BEg,reverse1d:()=>Zt.QD2,reverse2d:()=>Zt.LMr,reverse3d:()=>Zt.I2l,reverse4d:()=>Zt.JYU,rfft:()=>Zt.z8$,round:()=>Zt.LIG,rsqrt:()=>Zt.Z$r,scalar:()=>Zt.d_2,scatterND:()=>Zt.NFr,scatter_util:()=>At,searchSorted:()=>Zt.sZg,selu:()=>Zt.WfX,separableConv2d:()=>Zt.wdz,serialization:()=>a,setBackend:()=>fe.jh,setPlatform:()=>fe.Ok,setdiff1dAsync:()=>Zt.F12,sigmoid:()=>Zt.ry7,sign:()=>Zt._SZ,signal:()=>Zt.vPA,sin:()=>Zt.F8e,sinh:()=>Zt.L0l,slice:()=>Zt.dik,slice1d:()=>Zt.Q$M,slice2d:()=>Zt.zAd,slice3d:()=>Zt.wck,slice4d:()=>Zt.R0O,slice_util:()=>_t,softmax:()=>Zt.Vs9,softplus:()=>Zt.lw0,spaceToBatchND:()=>Zt.eDJ,sparse:()=>Zt.lMo,sparseToDense:()=>Zt.Zhr,spectral:()=>Zt.lOn,split:()=>Zt.lDo,sqrt:()=>Zt.RZD,square:()=>Zt.EwI,squaredDifference:()=>Zt.Pbu,squeeze:()=>Zt.r2V,stack:()=>Zt.t$z,step:()=>Zt.PMw,stridedSlice:()=>Zt.Ym9,string:()=>Zt.YjP,sub:()=>Zt.jbE,sum:()=>Zt.czq,sumOutType:()=>Xt.ch,tan:()=>Zt.Mlm,tanh:()=>Zt.ymU,tensor:()=>Zt.OEK,tensor1d:()=>Zt.tGX,tensor2d:()=>Zt.KtR,tensor3d:()=>Zt.$_$,tensor4d:()=>Zt.g9W,tensor5d:()=>Zt.Lpo,tensor6d:()=>Zt.yxw,tensorScatterUpdate:()=>Zt.NNh,tensor_util:()=>Rt,test_util:()=>u,tidy:()=>fe.DZ,tile:()=>Zt.Vsq,time:()=>fe.kB,topk:()=>Zt.rfw,train:()=>Jt,transpose:()=>Zt.mgz,truncatedNormal:()=>Zt.efE,unique:()=>Zt.AmM,unregisterGradient:()=>bt.rY,unregisterKernel:()=>bt.iP,unsortedSegmentSum:()=>Zt.zAU,unstack:()=>Zt.K$i,upcastType:()=>Xt.Tu,upperBound:()=>Zt.rni,util:()=>Ft,valueAndGrad:()=>ke.jY,valueAndGrads:()=>ke.mu,variable:()=>Zt.bvq,variableGrads:()=>ke.y7,version_core:()=>qt,where:()=>Zt._M9,whereAsync:()=>Zt.YJN,zeros:()=>Zt.Ul9,zerosLike:()=>Zt.POl});var r={};n.r(r),n.d(r,{isBrowser:()=>y,isMobile:()=>g,mockIsMobile:()=>m});var a={};n.r(a),n.d(a,{Serializable:()=>Ne,SerializationMap:()=>Ie,getRegisteredName:()=>Ee,registerClass:()=>Ce});var s={};n.r(s),n.d(s,{CompositeArrayBuffer:()=>I.D,browserFiles:()=>He,browserHTTPRequest:()=>nt,concatenateArrayBuffers:()=>x.AQ,copyModel:()=>te,decodeWeights:()=>x.CY,decodeWeightsStream:()=>x.s5,encodeWeights:()=>x.aG,fromMemory:()=>ot,fromMemorySync:()=>it,getLoadHandlers:()=>N,getModelArtifactsForJSON:()=>x.Ej,getModelArtifactsForJSONSync:()=>x.Rl,getModelArtifactsInfoForJSON:()=>x.oR,getSaveHandlers:()=>T,getWeightSpecs:()=>x.Xf,http:()=>tt,isHTTPScheme:()=>Je,listModels:()=>J,loadWeights:()=>Xe,moveModel:()=>ne,registerLoadRouter:()=>S,registerSaveRouter:()=>w,removeModel:()=>ee,weightsLoaderFactory:()=>Ze,withSaveHandler:()=>lt,withSaveHandlerSync:()=>ut});var o={};n.r(o),n.d(o,{confusionMatrix:()=>mt});var i={};n.r(i),n.d(i,{draw:()=>Ct,fromPixels:()=>Et,fromPixelsAsync:()=>Tt,toPixels:()=>It});var l={};n.r(l),n.d(l,{prepareAndValidate:()=>$t});var u={};n.r(u),n.d(u,{TEST_EPSILON_FLOAT16:()=>Dt,createVideoElement:()=>Ht,encodeStrings:()=>jt,expectArrayBuffersEqual:()=>Gt,expectArraysClose:()=>Mt,expectArraysEqual:()=>Bt,expectNumbersClose:()=>Vt,expectPromiseToFail:()=>zt,expectValuesInRange:()=>Ut,play:()=>Yt,testEpsilon:()=>Pt});var c={};n.r(c),n.d(c,{collectGatherOpShapeInfo:()=>lr,computeOutShape:()=>ir,segOpComputeOptimalWindowSize:()=>or});var d={};n.r(d),n.d(d,{ERF_A1:()=>Sn,ERF_A2:()=>Tn,ERF_A3:()=>Nn,ERF_A4:()=>In,ERF_A5:()=>Cn,ERF_P:()=>wn,PARALLELIZE_THRESHOLD:()=>hn,RowPartitionType:()=>sn,SELU_SCALE:()=>kn.X,SELU_SCALEALPHA:()=>kn.j,applyActivation:()=>ln.f2,assertAndGetBroadcastShape:()=>gt.assertAndGetBroadcastShape,assertAxesAreInnerMostDims:()=>nn.WC,assertParamsConsistent:()=>rn,assignToTypedArray:()=>On,axesAreInnerMostDims:()=>nn.WH,calculateShapes:()=>At.calculateShapes,checkEinsumDimSizes:()=>Un,checkPadOnDimRoundingMode:()=>on.s_,combineLocations:()=>nn.aF,combineRaggedTensorToTensorShapes:()=>un,complexWithEvenIndex:()=>_n,complexWithOddIndex:()=>Rn,computeConv2DInfo:()=>on.uf,computeConv3DInfo:()=>on.p$,computeDefaultPad:()=>on.G8,computeDilation2DInfo:()=>on.YQ,computeOptimalWindowSize:()=>fn,computeOutAndReduceShapes:()=>nn.lb,computeOutShape:()=>an,computePool2DInfo:()=>on.E6,computePool3DInfo:()=>on.l5,convertConv2DDataFormat:()=>on.$Q,decodeEinsumEquation:()=>Vn,eitherStridesOrDilationsAreOne:()=>on.G0,expandShapeToKeepDim:()=>nn.SM,exponent:()=>Mn,exponents:()=>Dn,fromStringArrayToUint8:()=>cr,fromUint8ToStringArray:()=>ur,getAxesPermutation:()=>nn.Em,getBroadcastDims:()=>gt.getBroadcastDims,getComplexWithIndex:()=>Fn,getEinsumComputePath:()=>Gn,getEinsumPermutation:()=>Wn,getFusedBiasGradient:()=>ln.Do,getFusedDyActivation:()=>ln.XB,getImageCenter:()=>mn,getInnerMostAxes:()=>nn.fK,getPermuted:()=>yn,getRaggedRank:()=>dn,getReductionAxes:()=>gt.getReductionAxes,getReshaped:()=>gn,getReshapedPermuted:()=>bn,getRowPartitionTypesHelper:()=>cn,getSliceBeginCoords:()=>vn,getSliceSize:()=>xn,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>qn,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>Kn,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>Xn,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>Jn,getSparseReshapeInputOutputMismatchErrorMessage:()=>tr,getSparseReshapeInputOutputMultipleErrorMessage:()=>er,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>Zn,getSparseReshapeNegativeOutputDimErrorMessage:()=>Qn,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>sr,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>nr,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>rr,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>ar,getUndoAxesPermutation:()=>nn.gx,isIdentityPermutation:()=>jn,log:()=>En.R,mergeRealAndImagArrays:()=>$n,prepareAndValidate:()=>$t,prepareSplitSize:()=>Yn,segment_util:()=>c,shouldFuse:()=>ln.zE,slice_util:()=>_t,splitRealAndImagArrays:()=>An,stridesOrDilationsArePositive:()=>on.qk,tupleValuesAreOne:()=>on.Dh,upcastType:()=>Xt.Tu,validateDefaultValueShape:()=>pn,validateInput:()=>At.validateInput,validateUpdateShape:()=>At.validateUpdateShape,warn:()=>En.i});var p={};n.r(p),n.d(p,{nonMaxSuppressionV3Impl:()=>dr.c7,nonMaxSuppressionV4Impl:()=>dr.ZS,nonMaxSuppressionV5Impl:()=>dr.ut,whereImpl:()=>pr.Y});var h=n(2164);let f;function m(e){f=e}function g(e){if(void 0!==f)return f;if(e||"undefined"!==typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!==typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function y(){return"undefined"!==typeof window&&null!=window.document||"undefined"!==typeof WorkerGlobalScope}var b=n(5399);const v=(0,b._K)();v.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),v.registerFlag("IS_BROWSER",(()=>y())),v.registerFlag("IS_NODE",(()=>"undefined"!==typeof process&&"undefined"!==typeof process.versions&&"undefined"!==typeof process.versions.node)),v.registerFlag("IS_CHROME",(()=>"undefined"!==typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),v.registerFlag("IS_SAFARI",(()=>"undefined"!==typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor))),v.registerFlag("PROD",(()=>!1)),v.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>v.getBool("DEBUG"))),v.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),v.registerFlag("IS_TEST",(()=>!1)),v.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>v.getBool("DEBUG"))),v.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),v.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",(()=>!1)),v.registerFlag("USE_SETTIMEOUTCUSTOM",(()=>!1));var x=n(285);class k{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==k.instance&&(k.instance=new k),k.instance}static registerSaveRouter(e){k.getInstance().saveRouters.push(e)}static registerLoadRouter(e){k.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return k.getHandlers(e,"save")}static getLoadHandlers(e,t){return k.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?k.getInstance().loadRouters:k.getInstance().saveRouters).forEach((t=>{const a=t(e,n);null!==a&&r.push(a)})),r}}const w=e=>k.registerSaveRouter(e),S=e=>k.registerLoadRouter(e),T=e=>k.getSaveHandlers(e),N=(e,t)=>k.getLoadHandlers(e,t);var I=n(7131);const C="tensorflowjs",E="models_store",$="model_info_store";function A(){if(!(0,b._K)().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"===typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function _(e){const t=e.result;t.createObjectStore(E,{keyPath:"modelPath"}),t.createObjectStore($,{keyPath:"modelPath"})}class R{constructor(e){if(this.indexedDB=A(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open(C,1);r.onupgradeneeded=()=>_(r),r.onsuccess=()=>{const a=r.result;if(null==t){const t=a.transaction(E,"readonly"),r=t.objectStore(E).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return a.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(a.close(),n(r.error)),t.oncomplete=()=>a.close()}else{t.weightData=I.D.join(t.weightData);const r=(0,x.oR)(t),o=a.transaction($,"readwrite");let i,l,u=o.objectStore($);try{i=u.put({modelPath:this.modelPath,modelArtifactsInfo:r})}catch(s){return n(s)}i.onsuccess=()=>{l=a.transaction(E,"readwrite");const i=l.objectStore(E);let c;try{c=i.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r})}catch(s){return n(s)}c.onsuccess=()=>e({modelArtifactsInfo:r}),c.onerror=e=>{u=o.objectStore($);const t=u.delete(this.modelPath);t.onsuccess=()=>(a.close(),n(c.error)),t.onerror=e=>(a.close(),n(c.error))}},i.onerror=e=>(a.close(),n(i.error)),o.oncomplete=()=>{null==l?a.close():l.oncomplete=()=>a.close()}}},r.onerror=e=>n(r.error)}))}}R.URL_SCHEME="indexeddb://";const F=e=>{return(0,b._K)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(R.URL_SCHEME)?(t=e.slice(R.URL_SCHEME.length),new R(t)):null;var t};k.registerSaveRouter(F),k.registerLoadRouter(F);class O{constructor(){this.indexedDB=A()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(C,1);n.onupgradeneeded=()=>_(n),n.onsuccess=()=>{const r=n.result,a=r.transaction($,"readonly"),s=a.objectStore($).getAll();s.onsuccess=()=>{const t={};for(const e of s.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},s.onerror=e=>(r.close(),t(s.error)),a.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(R.URL_SCHEME)?t.slice(R.URL_SCHEME.length):t,new Promise(((t,n)=>{const r=this.indexedDB.open(C,1);r.onupgradeneeded=()=>_(r),r.onsuccess=()=>{const a=r.result,s=a.transaction($,"readwrite"),o=s.objectStore($),i=o.get(e);let l;i.onsuccess=()=>{if(null==i.result)return a.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=o.delete(e),s=()=>{l=a.transaction(E,"readwrite");const r=l.objectStore(E).delete(e);r.onsuccess=()=>t(i.result.modelArtifactsInfo),r.onerror=e=>n(i.error)};r.onsuccess=s,r.onerror=e=>(s(),a.close(),n(i.error))}},i.onerror=e=>(a.close(),n(i.error)),s.oncomplete=()=>{null==l?a.close():l.oncomplete=()=>a.close()}},r.onerror=e=>n(r.error)}))}}var D=n(1426);const M="/",P="tensorflowjs_models",L="info",z="model_topology",B="weight_specs",V="weight_data",W="model_metadata";function U(e){return{info:[P,e,L].join(M),topology:[P,e,z].join(M),weightSpecs:[P,e,B].join(M),weightData:[P,e,V].join(M),modelMetadata:[P,e,W].join(M)}}function G(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function j(e){const t=e.split(M);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(M)}class H{constructor(e){if(!(0,b._K)().getBool("IS_BROWSER")||"undefined"===typeof window||"undefined"===typeof window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=U(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const n=JSON.stringify(e.modelTopology),r=JSON.stringify(e.weightSpecs),a=(0,x.oR)(e),s=I.D.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(a)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,r),this.LS.setItem(this.keys.weightData,(0,x.l3)(s));const t={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,initializerSignature:null!=e.initializerSignature?e.initializerSignature:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(t)),{modelArtifactsInfo:a}}catch(t){throw G(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${a.modelTopologyBytes}, weightSpecsBytes=${a.weightSpecsBytes}, weightDataBytes=${a.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const a=this.LS.getItem(this.keys.modelMetadata);if(null!=a){const e=JSON.parse(a);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(t.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=(0,x.jf)(s),t}}H.URL_SCHEME="localstorage://";const Y=e=>{return(0,b._K)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(H.URL_SCHEME)?(t=e.slice(H.URL_SCHEME.length),new H(t)):null;var t};k.registerSaveRouter(Y),k.registerLoadRouter(Y);class q{constructor(){(0,D.vA)((0,b._K)().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),(0,D.vA)("undefined"===typeof window||"undefined"!==typeof window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=P+M,n=M+L;for(let r=0;r<this.LS.length;++r){const a=this.LS.key(r);if(a.startsWith(t)&&a.endsWith(n)){e[j(a)]=JSON.parse(this.LS.getItem(a))}}return e}async removeModel(e){var t;const n=U(e=(t=e).startsWith(H.URL_SCHEME)?t.slice(H.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return G(n),r}}const K="://";class X{constructor(){this.managers={}}static getInstance(){return null==X.instance&&(X.instance=new X),X.instance}static registerManager(e,t){(0,D.vA)(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(K)&&(e=e.slice(0,e.indexOf(K))),(0,D.vA)(e.length>0,(()=>"scheme must not be an empty string."));const n=X.getInstance();(0,D.vA)(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=X.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(X.getInstance().managers)}}function Z(e){if(-1===e.indexOf(K))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${X.getSchemes().join(",")}`);return{scheme:e.split(K)[0],path:e.split(K)[1]}}async function Q(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];(0,D.vA)(e!==t,(()=>`Old path and new path are the same: '${e}'`));const r=k.getLoadHandlers(e);(0,D.vA)(r.length>0,(()=>`Copying failed because no load handler is found for source URL ${e}.`)),(0,D.vA)(r.length<2,(()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`));const a=r[0],s=k.getSaveHandlers(t);(0,D.vA)(s.length>0,(()=>`Copying failed because no save handler is found for destination URL ${t}.`)),(0,D.vA)(s.length<2,(()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`));const o=s[0],i=Z(e).scheme,l=Z(e).path,u=i===Z(e).scheme,c=await a.load();n&&u&&await X.getManager(i).removeModel(l);const d=await o.save(c);return n&&!u&&await X.getManager(i).removeModel(l),d.modelArtifactsInfo}async function J(){const e=X.getSchemes(),t={};for(const n of e){const e=await X.getManager(n).listModels();for(const r in e){t[n+K+r]=e[r]}}return t}async function ee(e){const t=Z(e);return X.getManager(t.scheme).removeModel(t.path)}async function te(e,t){return Q(e,t,!1)}async function ne(e,t){return Q(e,t,!0)}var re=n(5767);class ae{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){"undefined"!==typeof window&&(0,b._K)().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(e),setTimeout((()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")}),t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",(e=>{if(e.source===window&&e.data.name===this.messageName){e.stopPropagation();(0,this.functionRefs[e.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}}),!0))):setTimeout(e,t)}isTypedArray(e){return(0,re.Y)(e)}}if((0,b._K)().get("IS_BROWSER")){(0,b._K)().setPlatform("browser",new ae);try{X.registerManager(H.URL_SCHEME,new q)}catch(fr){}try{X.registerManager(R.URL_SCHEME,new O)}catch(fr){}}const se=()=>n(5817);let oe;class ie{constructor(){this.util=n(8590),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=(0,b._K)().global.fetch?(0,b._K)().global.fetch(e,t):(null==oe&&(oe=se()),oe(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}}(0,b._K)().get("IS_NODE")&&!(0,b._K)().get("IS_BROWSER")&&(0,b._K)().setPlatform("node",new ie);var le=n(259),ue=n(7794),ce=n(9820),de=n(6574),pe=n(9494);(0,h.Ye)();const he={buffer:le.r,cast:ue.w,clone:ce.o,print:de.y};(0,pe.Q5)(he);var fe=n(8046),me=n(7242),ge=n(4974),ye=n(803),be=n(191),ve=n(7738),xe=n(3290),ke=n(1839),we=n(1997);const Se=new Map,Te=new Map;class Ne{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class Ie{constructor(){this.classNameMap={}}static getMap(){return null==Ie.instance&&(Ie.instance=new Ie),Ie.instance}static register(e){Ie.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function Ce(e,t,n){(0,D.vA)(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),(0,D.vA)("string"===typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),(0,D.vA)(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),"undefined"===typeof t&&(t="Custom"),"undefined"===typeof n&&(n=e.className);const r=t+">"+n;return Ie.register(e),Se.set(r,e),Te.set(e,r),e}function Ee(e){return Te.has(e)?Te.get(e):e.className}class $e extends Ne{minimize(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2?arguments[2]:void 0;const{value:r,grads:a}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:a[e.name]})));this.applyGradients(e)}else this.applyGradients(a);return(0,fe.AS)(a),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return(0,ke.y7)(e,t)}dispose(){null!=this.iterations_&&(0,fe.AS)(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:(0,we.d)(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty($e,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});class Ae extends $e{static get className(){return"Adadelta"}constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=h.T2.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=h.T2.registeredVariables[t],a=!1;null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:(0,fe.DZ)((()=>(0,xe.P)(r).variable(a)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:(0,fe.DZ)((()=>(0,xe.P)(r).variable(a)))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const o=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;(0,fe.DZ)((()=>{const e=(0,me.W)((0,ye.l)(o,this.rho),(0,ye.l)((0,ve.E)(s),1-this.rho)),t=(0,ye.l)((0,ge.y)((0,be.R)((0,me.W)(i,this.epsilon)),(0,be.R)((0,me.W)(o,this.epsilon))),s),n=(0,me.W)((0,ye.l)(i,this.rho),(0,ye.l)((0,ve.E)(t),1-this.rho));o.assign(e),i.assign(n);const a=(0,me.W)((0,ye.l)(t,-this.learningRate),r);r.assign(a)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&((0,fe.AS)(this.accumulatedGrads.map((e=>e.variable))),(0,fe.AS)(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}var _e=n(4660);class Re extends $e{static get className(){return"Adagrad"}constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.1;super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=h.T2.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:(0,fe.DZ)((()=>(0,_e.G)(r.shape,this.initialAccumulatorValue).variable(e)))}}const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const s=this.accumulatedGrads[n].variable;(0,fe.DZ)((()=>{const e=(0,me.W)(s,(0,ve.E)(a));s.assign(e);const t=(0,me.W)((0,ye.l)((0,ge.y)(a,(0,be.R)((0,me.W)(e,h.T2.backend.epsilon()))),-this.learningRate),r);r.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&(0,fe.AS)(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}var Fe=n(7587),Oe=n(7951);class De extends $e{static get className(){return"Adam"}constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],(0,fe.DZ)((()=>{this.accBeta1=(0,we.d)(t).variable(),this.accBeta2=(0,we.d)(n).variable()})),null==r&&(this.epsilon=h.T2.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);(0,fe.DZ)((()=>{const n=(0,Oe.j)(1,this.accBeta1),r=(0,Oe.j)(1,this.accBeta2);t.forEach(((t,a)=>{const s=h.T2.registeredVariables[t],o=!1;null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:(0,fe.DZ)((()=>(0,xe.P)(s).variable(o)))}),null==this.accumulatedSecondMoment[a]&&(this.accumulatedSecondMoment[a]={originalName:`${t}/v`,variable:(0,fe.DZ)((()=>(0,xe.P)(s).variable(o)))});const i=Array.isArray(e)?e[a].tensor:e[t];if(null==i)return;const l=this.accumulatedFirstMoment[a].variable,u=this.accumulatedSecondMoment[a].variable,c=(0,me.W)((0,ye.l)(l,this.beta1),(0,ye.l)(i,1-this.beta1)),d=(0,me.W)((0,ye.l)(u,this.beta2),(0,ye.l)((0,ve.E)(i),1-this.beta2)),p=(0,ge.y)(c,n),f=(0,ge.y)(d,r);l.assign(c),u.assign(d);const m=(0,me.W)((0,ye.l)((0,ge.y)(p,(0,me.W)((0,be.R)(f),this.epsilon)),-this.learningRate),s);s.assign(m)})),this.accBeta1.assign((0,ye.l)(this.accBeta1,this.beta1)),this.accBeta2.assign((0,ye.l)(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&(0,fe.AS)(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&(0,fe.AS)(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),(0,fe.DZ)((()=>{this.accBeta1.assign((0,Fe.n)(this.beta1,this.iterations_+1)),this.accBeta2.assign((0,Fe.n)(this.beta2,this.iterations_+1))}));const t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}var Me=n(3753),Pe=n(2131);class Le extends $e{static get className(){return"Adamax"}constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0;super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],(0,fe.DZ)((()=>{this.iteration=(0,we.d)(0).variable(),this.accBeta1=(0,we.d)(t).variable()})),null==r&&(this.epsilon=h.T2.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);(0,fe.DZ)((()=>{const n=(0,Oe.j)(1,this.accBeta1),r=(0,ge.y)(-this.learningRate,(0,me.W)((0,ye.l)(this.iteration,this.decay),1));t.forEach(((t,a)=>{const s=h.T2.registeredVariables[t],o=!1;null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:(0,xe.P)(s).variable(o)}),null==this.accumulatedWeightedInfNorm[a]&&(this.accumulatedWeightedInfNorm[a]={originalName:`${t}/v`,variable:(0,xe.P)(s).variable(o)});const i=Array.isArray(e)?e[a].tensor:e[t];if(null==i)return;const l=this.accumulatedFirstMoment[a].variable,u=this.accumulatedWeightedInfNorm[a].variable,c=(0,me.W)((0,ye.l)(l,this.beta1),(0,ye.l)(i,1-this.beta1)),d=(0,ye.l)(u,this.beta2),p=(0,Me.t)(i),f=(0,Pe.P)(d,p);l.assign(c),u.assign(f);const m=(0,me.W)((0,ye.l)((0,ge.y)(r,n),(0,ge.y)(c,(0,me.W)(f,this.epsilon))),s);s.assign(m)})),this.iteration.assign((0,me.W)(this.iteration,1)),this.accBeta1.assign((0,ye.l)(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&(0,fe.AS)(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&(0,fe.AS)(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}class ze extends $e{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const a=h.T2.registeredVariables[t];(0,fe.DZ)((()=>{const e=(0,me.W)((0,ye.l)(this.c,r),a);a.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=(0,fe.aC)((0,we.d)(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}class Be extends ze{static get className(){return"Momentum"}constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=(0,we.d)(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=h.T2.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:(0,fe.DZ)((()=>(0,xe.P)(r).variable(e)))}}const a=this.accumulations[n].variable,s=Array.isArray(e)?e[n].tensor:e[t];null!=s&&(0,fe.DZ)((()=>{let e;const t=(0,me.W)((0,ye.l)(this.m,a),s);e=this.useNesterov?(0,me.W)((0,ye.l)(this.c,(0,me.W)(s,(0,ye.l)(t,this.m))),r):(0,me.W)((0,ye.l)(this.c,t),r),a.assign(t),r.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&(0,fe.AS)(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}class Ve extends $e{static get className(){return"RMSProp"}constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,null==r&&(this.epsilon=h.T2.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=h.T2.registeredVariables[t],a=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:(0,fe.DZ)((()=>(0,xe.P)(r).variable(a)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:(0,fe.DZ)((()=>(0,xe.P)(r).variable(a)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:(0,fe.DZ)((()=>(0,xe.P)(r).variable(a)))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const o=this.accumulatedMeanSquares[n].variable,i=this.accumulatedMoments[n].variable;(0,fe.DZ)((()=>{const e=(0,me.W)((0,ye.l)(o,this.decay),(0,ye.l)((0,ve.E)(s),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,a=(0,me.W)((0,ye.l)(t,this.decay),(0,ye.l)(s,1-this.decay)),l=(0,ge.y)((0,ye.l)(s,this.learningRate),(0,be.R)((0,Oe.j)(e,(0,me.W)((0,ve.E)(a),this.epsilon)))),u=(0,me.W)((0,ye.l)(i,this.momentum),l);o.assign(e),t.assign(a),i.assign(u);const c=(0,Oe.j)(r,u);r.assign(c)}else{const e=(0,me.W)((0,ye.l)(o,this.decay),(0,ye.l)((0,ve.E)(s),1-this.decay)),t=(0,me.W)((0,ye.l)(i,this.momentum),(0,ge.y)((0,ye.l)(s,this.learningRate),(0,be.R)((0,me.W)(e,this.epsilon))));o.assign(e),i.assign(t);const n=(0,Oe.j)(r,t);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&(0,fe.AS)(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&(0,fe.AS)(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&(0,fe.AS)(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}const We=[Ae,Re,De,Le,Be,Ve,ze];function Ue(e){return new Promise((e=>setTimeout(e))).then(e)}class Ge{constructor(e){if(!(0,b._K)().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Ge.URL_SCHEME)&&(e=e.slice(Ge.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"===typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=I.D.join(e.weightData),n=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const t=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],r=(0,x.zV)(e,t),a=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),s=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(s.download=this.modelJsonFileName,s.href=a,await Ue((()=>s.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=n,await Ue((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:(0,x.oR)(e)}}}}Ge.URL_SCHEME="downloads://";class je{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise(((e,t)=>{const n=new FileReader;n.onload=n=>{const r=JSON.parse(n.target.result),a=r.modelTopology;if(null==a)return void t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));if(null==r.weightsManifest)return void t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));if(0===this.weightsFiles.length)return void e({modelTopology:a});const s=(0,x.Ej)(r,(e=>this.loadWeights(e)));e(s)},n.onerror=e=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)}))}loadWeights(e){const t=[],n=[];for(const s of e)t.push(...s.weights),n.push(...s.paths);const r=this.checkManifestAndWeightFiles(e),a=n.map((e=>this.loadWeightsFile(e,r[e])));return Promise.all(a).then((e=>[t,e]))}loadWeightsFile(e,t){return new Promise(((n,r)=>{const a=new FileReader;a.onload=e=>{const t=e.target.result;n(t)},a.onerror=t=>r(`Failed to weights data from file of path '${e}'.`),a.readAsArrayBuffer(t)}))}checkManifestAndWeightFiles(e){const t=[],n=this.weightsFiles.map((e=>(0,x.P8)(e.name))),r={};for(const a of e)a.paths.forEach((e=>{const a=(0,x.P8)(e);if(-1!==t.indexOf(a))throw new Error(`Duplicate file basename found in weights manifest: '${a}'`);if(t.push(a),-1===n.indexOf(a))throw new Error(`Weight file with basename '${a}' is not provided.`);r[e]=this.weightsFiles[n.indexOf(a)]}));if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}}function He(e){return new je(e)}function Ye(e,t,n,r){!function(e){(0,D.vA)(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){(0,D.vA)(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),(0,D.vA)(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),(0,D.vA)(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,r=null==r?1:r);let a=0;return Promise.all(e.map((s=>(s.then((s=>{const o=n+ ++a/e.length*(r-n);return t(o),s})),s))))}k.registerSaveRouter((e=>(0,b._K)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Ge.URL_SCHEME)?function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"model";return new Ge(e)}(e.slice(Ge.URL_SCHEME.length)):null));var qe=n(1042);async function Ke(e,t){null==t&&(t={});const n=null==t.fetchFunc?(0,b._K)().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),a=(null==t.onProgress?await Promise.all(r):await Ye(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(a):await Ye(a,t.onProgress,.5,1)}async function Xe(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0;return Ze((e=>Ke(e,{requestInit:r})))(e,t,n)}function Ze(e){return async function(t){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",r=arguments.length>2?arguments[2]:void 0;const a=t.map((()=>!1)),s={},o=null!=r?r.map((()=>!1)):[],i=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{const l="quantization"in e?e.quantization.dtype:e.dtype,u=qe.i[l]*D.Ze(e.shape),c=()=>{a[t]=!0,null==s[t]&&(s[t]=[]),s[t].push({manifestEntry:e,groupOffset:n,sizeBytes:u})};null!=r?r.forEach(((t,n)=>{t===e.name&&(c(),o[n]=!0)})):c(),i.push(e.name),n+=u}))})),!o.every((e=>e))){const e=r.filter(((e,t)=>!o[t]));throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${i.join(", ")}.`)}const l=a.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),u=[];l.forEach((e=>{t[e].paths.forEach((e=>{const t=n+(n.endsWith("/")?"":"/")+e;u.push(t)}))}));const c=await e(u),d={};let p=0;return l.forEach((e=>{const n=t[e].paths.length,r=new I.D(c.slice(p,p+n));s[e].forEach((e=>{const t=r.slice(e.groupOffset,e.groupOffset+e.sizeBytes),n=(0,x.CY)(t,[e.manifestEntry]);for(const r in n)d[r]=n[r]})),p+=n})),d}}class Qe{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?((0,D.vA)("function"===typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=(0,b._K)().platform.fetch,(0,D.vA)(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&(0,D.vA)(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{},this.loadOptions=t}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r=(0,x.zV)(e,n);if(t.body.append("model.json",new Blob([JSON.stringify(r)],{type:"application/json"}),"model.json"),null!=e.weightData){const n=I.D.join(e.weightData);t.body.append("model.weights.bin",new Blob([n],{type:"application/octet-stream"}),"model.weights.bin")}const a=await this.fetch(this.path,t);if(a.ok)return{modelArtifactsInfo:(0,x.oR)(e),responses:[a]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${a.status}.`)}async loadModelJSON(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(a){let e=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}const n=t.modelTopology,r=t.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return t}async load(){if(this.loadOptions.streamWeights)return this.loadStream();const e=await this.loadModelJSON();return(0,x.Ej)(e,(e=>this.loadWeights(e)))}async loadStream(){const e=await this.loadModelJSON(),t=await this.getWeightUrls(e.weightsManifest),n=(0,x.Xf)(e.weightsManifest);return Object.assign(Object.assign({},e),{weightSpecs:n,getWeightStream:()=>function(e,t){var n;const r=null==t.fetchFunc?(0,b._K)().platform.fetch:t.fetchFunc;let a,s=0;return null===(n=t.onProgress)||void 0===n||n.call(t,0),new ReadableStream({pull:async n=>{for(var o;s<e.length;){if(!a){const n=(await r(e[s],t.requestInit,{isBinary:!0})).body;a=n.getReader()}const{done:i,value:l}=await a.read();if(!i)return void n.enqueue(l);s++,a=void 0,null===(o=t.onProgress)||void 0===o||o.call(t,s/e.length)}n.close()}})}(t,this.loadOptions)})}async getWeightUrls(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),r=e.substring(0,t),a=n>t?e.substring(n):"";return[r+"/",a]}(t),a=this.weightPathPrefix||n,s=[],o=[];for(const i of e)for(const e of i.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):s.push(a+e+r);return this.weightUrlConverter&&s.push(...await Promise.all(o)),s}async loadWeights(e){const t=await this.getWeightUrls(e);return[(0,x.Xf)(e),await Ke(t,this.loadOptions)]}}function Je(e){return null!=e.match(Qe.URL_SCHEME_REGEX)}Qe.URL_SCHEME_REGEX=/^https?:\/\//;const et=(e,t)=>{if("undefined"===typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>Je(e))):Je(e),n)return tt(e,t)}return null};function tt(e,t){return new Qe(e,t)}function nt(e,t){return tt(e,t)}k.registerSaveRouter(et),k.registerLoadRouter(et);class rt{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class at{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class st{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}}function ot(e,t,n,r){return new st(it(...arguments))}function it(e,t,n,r){if(1===arguments.length){return null!=e.modelTopology||null!=e.weightSpecs?new rt(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new rt({modelTopology:e}))}return console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new rt({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r})}function lt(e){return new at(e)}function ut(e){return new at(e)}var ct=n(4148),dt=n(5162),pt=n(6865),ht=n(7892),ft=n(2154);const mt=(0,ht.op)({confusionMatrix_:function(e,t,n){const r=(0,ct.YT)(e,"labels","confusionMatrix"),a=(0,ct.YT)(t,"predictions","confusionMatrix");D.vA(null==n||n>0&&Number.isInteger(n),(()=>`If provided, numClasses must be a positive integer, but got ${n}`)),D.vA(1===r.rank,(()=>`Expected the rank of labels to be 1, but got ${r.rank}`)),D.vA(1===a.rank,(()=>`Expected the rank of predictions to be 1, but got ${a.rank}`)),D.vA(r.shape[0]===a.shape[0],(()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${a.shape[0]}. Labels and predictions should have the same number of elements.`)),D.vA(n>0&&Number.isInteger(n),(()=>`numClasses is required to be a positive integer, but got ${n}`));const s=(0,pt.M)((0,ue.w)(r,"int32"),n),o=(0,pt.M)((0,ue.w)(a,"int32"),n),i=(0,ft.m)(s),l=(0,dt.N)(i,o);return(0,ue.w)(l,"int32")}});var gt=n(8805),yt=n(9554),bt=n(843),vt=n(5395);let xt,kt=!1;function wt(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:3;if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,a=!1,s=!1,o=!1,i=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!==typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!==typeof HTMLVideoElement&&e instanceof HTMLVideoElement)a=!0;else if("undefined"!==typeof HTMLImageElement&&e instanceof HTMLImageElement)s=!0;else if(null!=e.getContext)o=!0;else{if(!("undefined"!==typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);i=!0}if(null!=(0,bt._5)(yt.awo,h.T2.backendName)){const n={pixels:e},r={numChannels:t};return h.T2.runKernel(yt.awo,n,r)}const[l,u]=a?[e.videoWidth,e.videoHeight]:[e.width,e.height];let c,d;if(o)c=e.getContext("2d").getImageData(0,0,l,u).data;else if(r||n)c=e.data;else if(s||a||i){if(null==xt)if("undefined"===typeof document){if("undefined"===typeof OffscreenCanvas||"undefined"===typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");xt=new OffscreenCanvas(1,1).getContext("2d")}else xt=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});xt.canvas.width=l,xt.canvas.height=u,xt.drawImage(e,0,0,l,u),c=xt.getImageData(0,0,l,u).data}if(4===t)d=new Int32Array(c);else{const e=l*u;d=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)d[n*t+e]=c[4*n+e]}const p=[u,l,t];return(0,vt.$)(d,p,"int32")}function St(e){return"undefined"!==typeof window&&"undefined"!==typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&function(e){return null!=e&&0!==e.width&&0!==e.height}(e)&&!function(e){return null!=e&&e.data instanceof Uint8Array}(e)}async function Tt(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:3,n=null;if((0,b._K)().getBool("WRAP_TO_IMAGEBITMAP")&&St(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(r){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return wt(n,t)}function Nt(e){if(2!==e.rank&&3!==e.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${e.rank}.`);const t=2===e.rank?1:e.shape[2];if(t>4||2===t)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${t}`);if("float32"!==e.dtype&&"int32"!==e.dtype)throw new Error(`Unsupported type for toPixels: ${e.dtype}. Please use float32 or int32 tensors.`)}async function It(e,t){let n=(0,ct.YT)(e,"img","toPixels");if(!(e instanceof pe.qY)){const e=n;n=(0,ue.w)(e,"int32"),e.dispose()}Nt(n);const[r,a]=n.shape.slice(0,2),s=2===n.rank?1:n.shape[2],o=await n.data(),i="float32"===n.dtype?255:1,l=new Uint8ClampedArray(a*r*4);for(let u=0;u<r*a;++u){const e=[0,0,0,255];for(let r=0;r<s;r++){const t=o[u*s+r];if("float32"===n.dtype){if(t<0||t>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${t}.`)}else if("int32"===n.dtype&&(t<0||t>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${t}.`);1===s?(e[0]=t*i,e[1]=t*i,e[2]=t*i):e[r]=t*i}const t=4*u;l[t+0]=Math.round(e[0]),l[t+1]=Math.round(e[1]),l[t+2]=Math.round(e[2]),l[t+3]=Math.round(e[3])}if(null!=t){if(!kt){null!=(0,bt._5)(yt.XmO,h.T2.backendName)&&(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),kt=!0)}t.width=a,t.height=r;const e=t.getContext("2d"),n=new ImageData(l,a,r);e.putImageData(n,0,0)}return n!==e&&n.dispose(),l}function Ct(e,t,n){let r=(0,ct.YT)(e,"img","draw");if(!(e instanceof pe.qY)){const e=r;r=(0,ue.w)(e,"int32"),e.dispose()}Nt(r),function(e){const t=(null===e||void 0===e?void 0:e.alpha)||1;if(t>1||t<0)throw new Error(`Alpha value ${t} is suppoed to be in range [0 - 1].`)}(null===n||void 0===n?void 0:n.imageOptions);const a={image:r},s={canvas:t,options:n};h.T2.runKernel(yt.XmO,a,s)}const Et=(0,ht.op)({fromPixels_:wt});function $t(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===(0,D.Ze)(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const a=t.shape,s=a[a.length-1];let o=1;for(let d=0;d<a.length-1;++d)o*=a[d];const i=e.shape,l=a.slice();l.pop();let u=1;for(let d=s;d<n;++d)u*=i[d],l.push(i[d]);const c=[...(0,D.Ur)(e.shape).map((e=>e/u)),1].slice(0,s);return[l,o,u,c]}var At=n(4083),_t=n(4642),Rt=n(8804),Ft=n(8977);const Ot=.001,Dt=.1;function Mt(e,t,n){return null==n&&(n=Pt()),Lt(e,t,((e,t)=>Wt(e,t,n)))}function Pt(){return 32===h.T2.backend.floatPrecision()?Ot:Dt}function Lt(e,t,n){let r=!0;if(((0,Ft.isTypedArray)(e)||(0,Ft.isTypedArray)(t))&&(r=!1),(0,Ft.isTypedArray)(e)&&(0,Ft.isTypedArray)(t)&&(r=!0),r){const n=e.constructor.name,r=t.constructor.name;if(n!==r)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: ${r}`)}if(Array.isArray(e)&&Array.isArray(t)){const n=(0,ct.MZ)(e),r=(0,ct.MZ)(t);if(!(0,D.r1)(n,r))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${r}]`)}const a=(0,Ft.isTypedArray)(e)?e:(0,Ft.flatten)(e),s=(0,Ft.isTypedArray)(t)?t:(0,Ft.flatten)(t);if(a.length!==s.length)throw new Error(`Arrays have different lengths actual: ${a.length} vs expected: ${s.length}.\nActual:   ${a}.\nExpected: ${s}.`);for(let o=0;o<s.length;++o){const e=a[o],t=s[o];if(!n(e,t))throw new Error(`Arrays differ: actual[${o}] = ${e}, expected[${o}] = ${t}.\nActual:   ${a}.\nExpected: ${s}.`)}"undefined"!==typeof expect&&expect().nothing()}function zt(e,t){e().then((()=>t.fail()),(()=>t())),"undefined"!==typeof expect&&expect().nothing()}function Bt(e,t){const n="string"===typeof t||"number"===typeof t||"boolean"===typeof t?[t]:t;return(0,D.Kg)(e)||(0,D.Kg)(e[0])||(0,D.Kg)(t)||(0,D.Kg)(t[0])?Lt(e,n,((e,t)=>e==t)):Lt(e,t,((e,t)=>Wt(e,t,0)))}function Vt(e,t,n){if(null==n&&(n=Pt()),!Wt(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`);"undefined"!==typeof expect&&expect().nothing()}function Wt(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function Ut(e,t,n){for(let r=0;r<e.length;r++)if(e[r]<t||e[r]>n)throw new Error(`Value out of range:${e[r]} low: ${t}, high: ${n}`)}function Gt(e,t){const n=new Float32Array(e),r=new Float32Array(t);if(n.length!==r.length)throw new Error(`Expected ArrayBuffer to be of length ${r.length}, but it was ${n.length}`);for(let a=0;a<r.length;a++)if(n[a]!==r[a])throw new Error(`Expected ArrayBuffer value at ${a} to be ${r[a]} but got ${n[a]} instead`)}function jt(e){for(let t=0;t<e.length;t++){const n=e[t];Array.isArray(n)?jt(n):e[t]=(0,Ft.encodeString)(n)}return e}function Ht(e){const t=document.createElement("video");return"playsInline"in t&&(t.playsInline=!0),t.muted=!0,t.loop=!0,t.style.position="fixed",t.style.left="0px",t.style.top="0px",t.preload="auto",t.appendChild(e),new Promise((e=>{t.addEventListener("loadeddata",(n=>e(t))),t.load()}))}async function Yt(e){await e.play(),"requestVideoFrameCallback"in e&&await new Promise((t=>{e.requestVideoFrameCallback(t)}))}const qt="4.22.0";class Kt{static sgd(e){return new ze(e)}static momentum(e,t){return new Be(e,t,arguments.length>2&&void 0!==arguments[2]&&arguments[2])}static rmsprop(e){return new Ve(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,arguments.length>4&&void 0!==arguments[4]&&arguments[4])}static adam(){return new De(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.001,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:.999,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null)}static adadelta(){return new Ae(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.001,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.95,arguments.length>2&&void 0!==arguments[2]?arguments[2]:null)}static adamax(){return new Le(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.002,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:.999,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,arguments.length>4&&void 0!==arguments[4]?arguments[4]:0)}static adagrad(e){return new Re(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.1)}}var Xt=n(8075),Zt=n(9249),Qt=n(1667);const Jt=Kt,en="undefined"!==typeof requestAnimationFrame?requestAnimationFrame:"undefined"!==typeof setImmediate?setImmediate:e=>e();function tn(){return new Promise((e=>en((()=>e()))))}var nn=n(9235);function rn(e,t){const n=e[0].length;e.forEach(((e,t)=>{D.vA(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),D.vA(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=e[0];e.forEach(((e,a)=>{for(let s=0;s<n;s++)D.vA(s===t||e[s]===r[s],(()=>`Error in concat${n}D: Shape of tensors[${a}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${a}.`))}))}function an(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}var sn,on=n(7538),ln=n(7905);function un(e,t,n){let r=new Array;if(null==n&&null==t)return r;if(null==t)for(;r.length<e+n.length;)r.push(-1);else r=t.slice();if(null==n)return r;if(e+n.length!==r.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${e+n.length}, but shape.rank = ${r.length}`);for(let a=1;a<n.length;++a){const s=n[a],o=r[r.length-n.length+a],i=r[o];if(s>=0)if(i>=0){if(i!==s)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${a+e}] = ${s} but shape[${a+e}] = ${i}`)}else r[o]=s}return r}function cn(e){const t={FIRST_DIM_SIZE:sn.FIRST_DIM_SIZE,VALUE_ROWIDS:sn.VALUE_ROWIDS,ROW_LENGTHS:sn.ROW_LENGTHS,ROW_SPLITS:sn.ROW_SPLITS,ROW_LIMITS:sn.ROW_LIMITS,ROW_STARTS:sn.ROW_STARTS},n=[];for(const r of e){if(!(r in t))break;n.push(t[r])}return n}function dn(e){return 0===e.length?0:e[0]===sn.FIRST_DIM_SIZE?e.length-1:e.length}function pn(e,t){if(null==e||null==t)return;const n=e.length,r=t.length;if(n>=r)throw new Error(`defaultValue.shape=${e} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${r})`);for(let a=0;a<Math.min(n,r-1);++a){const n=e[a],r=t[a+1];if(n>=0&&r>=0&&1!==n&&n!==r)throw new Error(`defaultValue.shape=${e}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${a-e.length}] = ${n} but ragged tensor input.flatValues.shape[${a-e.length}] = ${r}`)}}!function(e){e[e.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",e[e.VALUE_ROWIDS=1]="VALUE_ROWIDS",e[e.ROW_LENGTHS=2]="ROW_LENGTHS",e[e.ROW_SPLITS=3]="ROW_SPLITS",e[e.ROW_LIMITS=4]="ROW_LIMITS",e[e.ROW_STARTS=5]="ROW_STARTS"}(sn||(sn={}));const hn=30;function fn(e){return e<=hn?e:(0,D.lK)(e,Math.floor(Math.sqrt(e)))}function mn(e,t,n){return[n*("number"===typeof e?e:e[0]),t*("number"===typeof e?e:e[1])]}function gn(e,t,n){let r=[];if(!(arguments.length>3&&void 0!==arguments[3])||arguments[3])r=r.concat(t.slice(0)),r.push(e[0]/n),r=r.concat(e.slice(1));else{r=r.concat(e[0]);const n=t.length;for(let a=0;a<n;++a)r=r.concat([e[a+1]/t[a],t[a]]);r=r.concat(e.slice(n+1))}return r}function yn(e,t){const n=[];if(!(arguments.length>2&&void 0!==arguments[2])||arguments[2]){n.push(t);for(let r=t+1;r<e;++r)r<=2*t?(n.push(r),n.push(r-(t+1))):n.push(r)}else{const r=[],a=[];for(let n=1;n<e;++n)n>=2*t+1||n%2===1?a.push(n):r.push(n);n.push(...r),n.push(0),n.push(...a)}return n}function bn(e,t,n){let r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const a=[];r?a.push(e[0]/n):a.push(e[0]*n);for(let s=1;s<e.length;++s)s<=t.length?r?a.push(t[s-1]*e[s]):a.push(e[s]/t[s-1]):a.push(e[s]);return a}function vn(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function xn(e,t,n){const r=e.slice(0,1);for(let a=0;a<n;++a)r.push(e[a+1]-t[a][0]-t[a][1]);return r}var kn=n(3765);const wn=.3275911,Sn=.254829592,Tn=-.284496736,Nn=1.421413741,In=-1.453152027,Cn=1.061405429;var En=n(4124);function $n(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function An(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function _n(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let a=0;a<e.length;a+=4)n[Math.floor(a/4)]=e[a],r[Math.floor(a/4)]=e[a+1];return{real:n,imag:r}}function Rn(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let a=2;a<e.length;a+=4)n[Math.floor(a/4)]=e[a],r[Math.floor(a/4)]=e[a+1];return{real:n,imag:r}}function Fn(e,t){return{real:e[2*t],imag:e[2*t+1]}}function On(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function Dn(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let a=0;a<Math.ceil(e/2);a++){const s=(t?2:-2)*Math.PI*(a/e);n[a]=Math.cos(s),r[a]=Math.sin(s)}return{real:n,imag:r}}function Mn(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}const Pn="->",Ln=/->/g,zn=",",Bn="...";function Vn(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(Ln,"").length)/Pn.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${Pn}").`);const[r,a]=e.split(Pn);(0,D.vA)(-1===r.indexOf(Bn),(()=>`The ellipsis notation ("${Bn}") is not supported yet.`));const s=r.split(zn),o=s.length;if(t!==o)throw new Error(`Expected ${o} input tensors, received ${t}`);if(o>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const i=[];for(let d=0;d<a.length;++d){const e=a[d];if(!s.some((t=>-1!==t.indexOf(e))))throw new Error(`Output subscripts contain the label ${e} not present in the input subscripts.`);-1===i.indexOf(e)&&i.push(e)}for(let d=0;d<r.length;++d){const e=r[d];-1===i.indexOf(e)&&e!==zn&&i.push(e)}const l=new Array(s.length);for(let d=0;d<o;++d){if(new Set(s[d].split("")).size!==s[d].length)throw new Error(`Found duplicate axes in input component ${s[d]}. Support for duplicate axes in input is not implemented yet.`);l[d]=[];for(let e=0;e<s[d].length;++e)l[d].push(i.indexOf(s[d][e]))}const u=i.length,c=[];for(let d=a.length;d<u;++d)c.push(d);return{allDims:i,summedDims:c,idDims:l}}function Wn(e,t){let n=new Array(e);n.fill(-1);for(let a=0;a<t.length;++a)n[t[a]]=a;const r=[];for(let a=0;a<e;++a)-1===n[a]&&r.push(a);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:r}}function Un(e,t,n){const r=new Array(e);for(let a=0;a<n.length;++a){const e=n[a].shape;for(let n=0;n<t[a].length;++n)void 0===r[t[a][n]]?r[t[a][n]]=e[n]:(0,D.vA)(r[t[a][n]]===e[n],(()=>`Expected dimension ${r[t[a][n]]} at axis ${n} of input shaped ${JSON.stringify(e)}, but got dimension ${e[n]}`))}}function Gn(e,t){const n=e,r=[];let a=0;0===e.length&&n.push(-1),a=e.length+1;for(let o=0;o<a;++o)r.push([]);const s=[];for(let o=0;o<n.length;++o){const e=Hn(t,n[o]);for(const t of e)-1===s.indexOf(t)&&(r[o].push(t),s.push(t))}return{path:n,steps:r}}function jn(e){return e.every(((e,t)=>e===t))}function Hn(e,t){const n=[];for(let r=0;r<e.length;++r)0!==e[r].length&&-1===e[r].indexOf(t)&&-1!==t||n.push(r);return n}function Yn(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=[];if("number"===typeof t)(0,D.vA)(e.shape[n]%t===0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{const a=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);(0,D.vA)(a<=1,(()=>"There should be only one negative value in split array."));const s=t.indexOf(-1);if(-1!==s){const r=t.reduce(((e,t)=>t>0?e+t:e));t[s]=e.shape[n]-r}(0,D.vA)(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}function qn(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function Kn(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function Xn(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function Zn(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function Qn(e,t){return`size ${e} must be non-negative, not ${t}`}function Jn(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function er(e,t){return`Input to reshape is a SparseTensor with ${(0,D.Ze)(e)}\n  dense values, but the requested shape requires a multiple of ${(0,D.Ze)(t)}. inputShape=${e} outputShape= ${t}`}function tr(e,t){return`Input to reshape is a tensor with ${(0,D.Ze)(e)} dense values, but the requested shape has ${(0,D.Ze)(t)}. inputShape=${e} outputShape=${t}`}function nr(){return"segment ids must be >= 0"}function rr(){return"segment ids are not increasing"}function ar(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function sr(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}function or(e,t){let n,r=!1;for(e<=hn?(n=e,r=!0):n=(0,D.lK)(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=(0,D.lK)(e,n+1);return n}function ir(e,t,n){const r=[],a=e.length;for(let s=0;s<a;s++)s!==t?r.push(e[s]):r.push(n);return r}function lr(e,t,n,r){const a=t.shape.length,s=e.shape.length;if(0!==r&&(r<-a||r>a))throw new Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${r}`);if(r<0&&(r+=a),r>s)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${s}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let d=0;d<r;++d)if(e.shape[d]!==t.shape[d])throw new Error(`x.shape[${d}]: ${e.shape[d]} should be equal to indices.shape[${d}]: ${t.shape[d]}.`);const o=e.shape[n],i=[];let l=1,u=1,c=1;for(let d=0;d<r;++d)i.push(e.shape[d]),l*=e.shape[d];for(let d=r;d<n;d++)i.push(e.shape[d]),u*=e.shape[d];for(let d=r;d<a;d++)i.push(t.shape[d]);for(let d=n+1;d<s;d++)i.push(e.shape[d]),c*=e.shape[d];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:o,outputShape:i}}function ur(e){try{return e.map((e=>(0,Ft.decodeString)(e)))}catch(fr){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${fr}`)}}function cr(e){return e.map((e=>(0,Ft.encodeString)(e)))}var dr=n(6692),pr=n(9286),hr=n(6790);!function(){for(const e of We)Ce(e)}()},5767:(e,t,n)=>{"use strict";function r(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}n.d(t,{Y:()=>r})},5817:()=>{},5894:(e,t,n)=>{"use strict";n.d(t,{g:()=>o});var r=n(2164),a=n(9554),s=n(4148);const o=(0,n(7892).op)({cos_:function(e){const t={x:(0,s.YT)(e,"x","cos","float32")};return r.T2.runKernel(a.Mn0,t)}})},5896:(e,t)=>{"use strict";function n(e,t){var n=e.length;e.push(t);e:for(;0<n;){var r=n-1>>>1,a=e[r];if(!(0<s(a,t)))break e;e[r]=t,e[n]=a,n=r}}function r(e){return 0===e.length?null:e[0]}function a(e){if(0===e.length)return null;var t=e[0],n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,a=e.length,o=a>>>1;r<o;){var i=2*(r+1)-1,l=e[i],u=i+1,c=e[u];if(0>s(l,n))u<a&&0>s(c,l)?(e[r]=c,e[u]=n,r=u):(e[r]=l,e[i]=n,r=i);else{if(!(u<a&&0>s(c,n)))break e;e[r]=c,e[u]=n,r=u}}}return t}function s(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}if(t.unstable_now=void 0,"object"===typeof performance&&"function"===typeof performance.now){var o=performance;t.unstable_now=function(){return o.now()}}else{var i=Date,l=i.now();t.unstable_now=function(){return i.now()-l}}var u=[],c=[],d=1,p=null,h=3,f=!1,m=!1,g=!1,y=!1,b="function"===typeof setTimeout?setTimeout:null,v="function"===typeof clearTimeout?clearTimeout:null,x="undefined"!==typeof setImmediate?setImmediate:null;function k(e){for(var t=r(c);null!==t;){if(null===t.callback)a(c);else{if(!(t.startTime<=e))break;a(c),t.sortIndex=t.expirationTime,n(u,t)}t=r(c)}}function w(e){if(g=!1,k(e),!m)if(null!==r(u))m=!0,T||(T=!0,S());else{var t=r(c);null!==t&&R(w,t.startTime-e)}}var S,T=!1,N=-1,I=5,C=-1;function E(){return!!y||!(t.unstable_now()-C<I)}function $(){if(y=!1,T){var e=t.unstable_now();C=e;var n=!0;try{e:{m=!1,g&&(g=!1,v(N),N=-1),f=!0;var s=h;try{t:{for(k(e),p=r(u);null!==p&&!(p.expirationTime>e&&E());){var o=p.callback;if("function"===typeof o){p.callback=null,h=p.priorityLevel;var i=o(p.expirationTime<=e);if(e=t.unstable_now(),"function"===typeof i){p.callback=i,k(e),n=!0;break t}p===r(u)&&a(u),k(e)}else a(u);p=r(u)}if(null!==p)n=!0;else{var l=r(c);null!==l&&R(w,l.startTime-e),n=!1}}break e}finally{p=null,h=s,f=!1}n=void 0}}finally{n?S():T=!1}}}if("function"===typeof x)S=function(){x($)};else if("undefined"!==typeof MessageChannel){var A=new MessageChannel,_=A.port2;A.port1.onmessage=$,S=function(){_.postMessage(null)}}else S=function(){b($,0)};function R(e,n){N=b((function(){e(t.unstable_now())}),n)}t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):I=0<e?Math.floor(1e3/e):5},t.unstable_getCurrentPriorityLevel=function(){return h},t.unstable_next=function(e){switch(h){case 1:case 2:case 3:var t=3;break;default:t=h}var n=h;h=t;try{return e()}finally{h=n}},t.unstable_requestPaint=function(){y=!0},t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=h;h=e;try{return t()}finally{h=n}},t.unstable_scheduleCallback=function(e,a,s){var o=t.unstable_now();switch("object"===typeof s&&null!==s?s="number"===typeof(s=s.delay)&&0<s?o+s:o:s=o,e){case 1:var i=-1;break;case 2:i=250;break;case 5:i=1073741823;break;case 4:i=1e4;break;default:i=5e3}return e={id:d++,callback:a,priorityLevel:e,startTime:s,expirationTime:i=s+i,sortIndex:-1},s>o?(e.sortIndex=s,n(c,e),null===r(u)&&e===r(c)&&(g?(v(N),N=-1):g=!0,R(w,s-o))):(e.sortIndex=i,n(u,e),m||f||(m=!0,T||(T=!0,S()))),e},t.unstable_shouldYield=E,t.unstable_wrapCallback=function(e){var t=h;return function(){var n=h;h=t;try{return e.apply(this,arguments)}finally{h=n}}}},5903:(e,t,n)=>{"use strict";n.d(t,{dH:()=>s,lO:()=>o});var r=n(5743),a=n(3143);function s(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const o={kernelName:r.Abs,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;(0,a.C)(t,"abs");let o=new Float32Array(r.util.sizeFromShape(t.shape));return o=s(n.data.get(t.dataId).values),n.makeOutput(o,t.shape,t.dtype)}}},5911:(e,t,n)=>{"use strict";n.d(t,{R:()=>o});var r=n(2164),a=n(9554),s=n(4148);const o=(0,n(7892).op)({log_:function(e){const t={x:(0,s.YT)(e,"x","log","float32")};return r.T2.runKernel(a.tG8,t)}})},5954:(e,t,n)=>{"use strict";n.r(t),n.d(t,{GPGPUContext:()=>mt,MathBackendWebGL:()=>Rn,forceHalfFloat:()=>On,gpgpu_util:()=>a,setWebGLContext:()=>l,version_webgl:()=>Fn,webgl:()=>Dn,webgl_util:()=>r});var r={};n.r(r),n.d(r,{assertNotComplex:()=>fe,bindCanvasToFramebuffer:()=>W,bindColorTextureToFramebuffer:()=>U,bindTextureToProgramUniformSampler:()=>V,bindTextureUnit:()=>P,bindVertexBufferToProgramAttribute:()=>M,callAndCheck:()=>y,canBeRepresented:()=>x,createFragmentShader:()=>T,createFramebuffer:()=>D,createProgram:()=>C,createStaticIndexBuffer:()=>_,createStaticVertexBuffer:()=>A,createTexture:()=>F,createVertexShader:()=>S,getBatchDim:()=>K,getExtensionOrThrow:()=>w,getFramebufferErrorMessage:()=>H,getMaxTexturesInShader:()=>oe,getNumChannels:()=>R,getProgramUniformLocation:()=>B,getProgramUniformLocationOrThrow:()=>z,getRowsCols:()=>X,getShapeAs3D:()=>Z,getTextureShapeFromLogicalShape:()=>Q,getWebGLDisjointQueryTimerVersion:()=>ie,getWebGLErrorMessage:()=>k,getWebGLMaxTextureSize:()=>re,hasExtension:()=>le,isCapableOfRenderingToFloatTexture:()=>ce,isDownloadFloatTextureEnabled:()=>de,isReshapeFree:()=>ee,isWebGLFenceEnabled:()=>he,isWebGLVersionEnabled:()=>ue,linkProgram:()=>E,logShaderSourceAndInfoLog:()=>I,resetMaxTextureSize:()=>ae,resetMaxTexturesInShader:()=>se,unbindColorTextureFromFramebuffer:()=>G,unbindTextureUnit:()=>L,validateFramebuffer:()=>j,validateProgram:()=>$,validateTextureSize:()=>O});var a={};n.r(a),n.d(a,{bindVertexProgramAttributeStreams:()=>it,createBufferFromOutputTexture:()=>ct,createFloat16MatrixTexture:()=>et,createFloat16PackedMatrixTexture:()=>ot,createFloat32MatrixTexture:()=>Qe,createIndexBuffer:()=>Ke,createPackedMatrixTexture:()=>at,createUnsignedBytesMatrixTexture:()=>nt,createVertexBuffer:()=>qe,createVertexShader:()=>Ye,downloadByteEncodedFloatMatrixFromOutputTexture:()=>pt,downloadFloat32MatrixFromBuffer:()=>dt,downloadMatrixFromPackedOutputTexture:()=>ft,downloadPackedMatrixFromBuffer:()=>ht,getInternalFormatForFloat16MatrixTexture:()=>Je,getInternalFormatForFloat16PackedMatrixTexture:()=>st,getInternalFormatForFloat32MatrixTexture:()=>Ze,getInternalFormatForPackedMatrixTexture:()=>rt,getInternalFormatForUnsignedBytesMatrixTexture:()=>tt,uploadDenseMatrixToTexture:()=>lt,uploadPixelDataToTexture:()=>ut});var s=n(5743);const o={},i={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function l(e,t){o[e]=t}function u(e,t){if(!(e in o)||null!=t){const n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==t?function(e){if((0,s.env)().getBool("IS_SAFARI")||"undefined"===typeof OffscreenCanvas||2!==e){if("undefined"!==typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}return new OffscreenCanvas(300,150)}(e):t;n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete o[e]}),!1),(0,s.env)().getBool("SOFTWARE_WEBGL_ENABLED")&&(i.failIfMajorPerformanceCaveat=!1);if(1===e)return n.getContext("webgl",i)||n.getContext("experimental-webgl",i);return n.getContext("webgl2",i)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;o[e]=n}const n=o[e];return null==n||n.isContextLost()?(delete o[e],u(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),o[e])}var c,d,p;function h(e,t){return[t,e]}function f(e){const t=s.util.sizeFromShape(e),n=Math.ceil(t/4);return s.util.sizeToSquarishShape(n)}function m(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function g(e,t){const n=e;let r,a,o,i,l,u,c,d,p,h;return 2===(0,s.env)().getNumber("WEBGL_VERSION")?(r=n.R32F,a=n.R16F,o=n.RGBA16F,i=n.RGBA32F,l=n.RED,c=4,d=1,p=n.HALF_FLOAT,h=n.FLOAT,u=n.RGBA8):(r=e.RGBA,a=e.RGBA,o=e.RGBA,i=n.RGBA,l=e.RGBA,c=4,d=4,p=null!=t?t.HALF_FLOAT_OES:null,h=e.FLOAT,u=e.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:a,internalFormatPackedHalfFloat:o,internalFormatPackedFloat:i,textureFormatFloat:l,downloadTextureFormat:u,downloadUnpackNumChannels:c,defaultNumChannels:d,textureTypeHalfFloat:p,textureTypeFloat:h}}function y(e,t){const n=t();return(0,s.env)().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+k(e,t))}(e),n}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(c||(c={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(d||(d={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(p||(p={}));const b=5.96e-8,v=65504;function x(e){return!!((0,s.env)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||b<Math.abs(e)&&Math.abs(e)<v)}function k(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function w(e,t){return Y(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}function S(e,t){const n=Y(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(y(e,(()=>e.shaderSource(n,t))),y(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function T(e,t){const n=Y(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(y(e,(()=>e.shaderSource(n,t))),y(e,(()=>e.compileShader(n))),(0,s.env)().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw I(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}const N=/ERROR: [0-9]+:([0-9]+):/g;function I(e,t){const n=N.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const r=+n[1],a=e.split("\n"),o=a.length.toString().length+2,i=a.map(((e,t)=>s.util.rightPad((t+1).toString(),o)+e));let l=0;for(let s=0;s<i.length;s++)l=Math.max(i[s].length,l);const u=i.slice(0,r-1),c=i.slice(r-1,r),d=i.slice(r);console.log(u.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${s.util.rightPad(c[0],l)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(d.join("\n"))}function C(e){return Y(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}function E(e,t){if(y(e,(()=>e.linkProgram(t))),!(0,s.env)().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function $(e,t){if(y(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function A(e,t){const n=Y(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return y(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),y(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}function _(e,t){const n=Y(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return y(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),y(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}function R(){return 2===(0,s.env)().getNumber("WEBGL_VERSION")?1:4}function F(e){return Y(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}function O(e,t){const n=(0,s.env)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0){throw new Error("Requested texture size "+`[${e}x${t}]`+" is invalid.")}if(e>n||t>n){throw new Error("Requested texture size "+`[${e}x${t}]`+" greater than WebGL maximum on this browser / GPU "+`[${n}x${n}]`+".")}}function D(e){return Y(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}function M(e,t,n,r,a,s,o){const i=e.getAttribLocation(t,n);return-1!==i&&(y(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,r))),y(e,(()=>e.vertexAttribPointer(i,a,e.FLOAT,!1,s,o))),y(e,(()=>e.enableVertexAttribArray(i))),!0)}function P(e,t,n){q(e,n),y(e,(()=>e.activeTexture(e.TEXTURE0+n))),y(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}function L(e,t){q(e,t),y(e,(()=>e.activeTexture(e.TEXTURE0+t))),y(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function z(e,t,n){return Y(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}function B(e,t,n){return e.getUniformLocation(t,n)}function V(e,t,n,r){y(e,(()=>P(e,t,r))),y(e,(()=>e.uniform1i(n,r)))}function W(e){y(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),y(e,(()=>e.viewport(0,0,e.canvas.width,e.canvas.height))),y(e,(()=>e.scissor(0,0,e.canvas.width,e.canvas.height)))}function U(e,t,n){y(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),y(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function G(e,t){y(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),y(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function j(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+H(e,t))}function H(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function Y(e,t,n){const r=y(e,(()=>t()));if(null==r)throw new Error(n);return r}function q(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n){throw new Error(`textureUnit must be in ${`[gl.TEXTURE0, gl.TEXTURE${n}]`}.`)}}function K(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:2;return s.util.sizeFromShape(e.slice(0,e.length-t))}function X(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function Z(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[K(e),...X(e)]),t}function Q(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=(0,s.env)().getNumber("WEBGL_MAX_TEXTURE_SIZE"),r=(0,s.env)().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");if(r===1/0&&(0,s.env)().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(r=n/2),t&&(n*=2,r*=2,1===(e=e.map(((t,n)=>n>=e.length-2?s.util.nearestLargerEven(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=s.util.squeezeShape(e);e=t.newShape}let a=s.util.sizeFromShape(e),o=null;e.length<=1&&a<=n?o=[1,a]:2===e.length&&e[0]<=n&&e[1]<=n?o=e:3===e.length&&e[0]*e[1]<=n&&e[2]<=n?o=[e[0]*e[1],e[2]]:3===e.length&&e[0]<=n&&e[1]*e[2]<=n?o=[e[0],e[1]*e[2]]:4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n?o=[e[0]*e[1]*e[2],e[3]]:4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n&&(o=[e[0],e[1]*e[2]*e[3]]);const i=null!=o&&Math.max(...o)>r&&Math.min(...o)<=(t?2:1)&&Math.min(...o)>0;if(null==o||i)if(t){const t=K(e);let n=2,r=2;e.length&&([n,r]=X(e)),a=t*(n/2)*(r/2),o=s.util.sizeToSquarishShape(a).map((e=>2*e))}else o=s.util.sizeToSquarishShape(a);return o}function J(e){return e%2===0}function ee(e,t){if(e=e.slice(-2),t=t.slice(-2),s.util.arraysEqual(e,t))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e[e.length-1],r=t[t.length-1];if(n===r)return!0;if(J(n)&&J(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&J(e[0])&&J(t[0])}let te,ne;function re(e){if(null==te){const t=u(e);te=t.getParameter(t.MAX_TEXTURE_SIZE)}return te}function ae(){te=null}function se(){ne=null}function oe(e){if(null==ne){const t=u(e);ne=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,ne)}function ie(e){if(0===e)return 0;let t;const n=u(e);return t=le(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:le(n,"EXT_disjoint_timer_query")?1:0,t}function le(e,t){return null!=e.getExtension(t)}function ue(e){try{if(null!=u(e))return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function ce(e){if(0===e)return!1;const t=u(e);if(1===e){if(!le(t,"OES_texture_float"))return!1}else if(!le(t,"EXT_color_buffer_float"))return!1;return pe(t)}function de(e){if(0===e)return!1;const t=u(e);if(1!==e){if(le(t,"EXT_color_buffer_float"))return pe(t);const e="EXT_color_buffer_half_float";if(le(t,e)){const n=t.getExtension(e);return function(e,t){const n=g(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r);const a=1,s=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,a,s,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const o=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,o),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(o),i}(t,n)}return!1}if(!le(t,"OES_texture_float"))return!1;if(!le(t,"WEBGL_color_buffer_float"))return!1;return pe(t)}function pe(e){const t=g(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),a}function he(e){if(2!==e)return!1;return null!=u(e).fenceSync}function fe(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&s.util.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}const me=(0,s.env)();function ge(){let e,t,n,r,a,o,i,l,u,c;return 2===(0,s.env)().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",a="texture",o="outputColor",i="out vec4 outputColor;",l=(0,s.env)().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",u="",c="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",a="texture2D",o="gl_FragColor",i="",l="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",u="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",c="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:a,output:o,defineOutput:i,defineSpecialNaN:l,defineSpecialInf:u,defineRound:c}}function ye(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const r=s.util.computeStrides(t);return r.map(((t,a)=>`${`int ${e[a]} = ${n} / ${t}`}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${t}`:`index -= ${e[a]} * ${t}`};`)).join("")}function be(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const r=s.util.computeStrides(t);return r.map(((t,a)=>`${`int ${e[a]} = ${n} / outShapeStrides[${a}]`}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * outShapeStrides[${a}]`:`index -= ${e[a]} * outShapeStrides[${a}]`};`)).join("")}function ve(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const r=function(e,t){const n=e.length,r=e.map((e=>`${t}[${e}]`)),a=new Array(n-1);a[n-2]=r[n-1];for(let s=n-3;s>=0;--s)a[s]=`(${a[s+1]} * ${r[s+1]})`;return a}(e.map(((e,t)=>t)),t);return r.map(((t,a)=>`${`int ${e[a]} = ${n} / ${r[a]}`}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${r[a]}`:`index -= ${e[a]} * ${r[a]}`};`)).join("")}function xe(e){const t=s.util.computeStrides(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}me.registerFlag("HAS_WEBGL",(()=>me.getNumber("WEBGL_VERSION")>0)),me.registerFlag("WEBGL_VERSION",(()=>ue(2)?2:ue(1)?1:0)),me.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),me.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===me.get("WEBGL_VERSION"))),me.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),me.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),me.registerFlag("WEBGL_PACK",(()=>me.getBool("HAS_WEBGL"))),me.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>me.getBool("WEBGL_PACK"))),me.registerFlag("WEBGL_PACK_CLIP",(()=>me.getBool("WEBGL_PACK"))),me.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>me.getBool("WEBGL_PACK"))),me.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>me.getBool("WEBGL_PACK"))),me.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>me.getBool("WEBGL_PACK"))),me.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>me.getBool("WEBGL_PACK"))),me.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>me.getBool("WEBGL_PACK"))),me.registerFlag("WEBGL_PACK_REDUCE",(()=>me.getBool("WEBGL_PACK"))),me.registerFlag("WEBGL_LAZILY_UNPACK",(()=>me.getBool("WEBGL_PACK"))),me.registerFlag("WEBGL_CONV_IM2COL",(()=>me.getBool("WEBGL_PACK"))),me.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",(()=>me.getBool("WEBGL_PACK"))),me.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>re(me.getNumber("WEBGL_VERSION")))),me.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>oe(me.getNumber("WEBGL_VERSION")))),me.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=me.getNumber("WEBGL_VERSION");return 0===e?0:ie(e)})),me.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>me.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!s.device_util.isMobile())),me.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>ce(me.getNumber("WEBGL_VERSION")))),me.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!me.getBool("WEBGL_FORCE_F16_TEXTURES")&&me.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),me.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>de(me.getNumber("WEBGL_VERSION")))),me.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>he(me.getNumber("WEBGL_VERSION")))),me.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>me.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),me.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if("number"!==typeof e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),me.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>s.device_util.isMobile()?1:-1),(e=>{if("number"!==typeof e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),me.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),me.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),me.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),me.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128)),me.registerFlag("WEBGL_EXP_CONV",(()=>!1)),me.registerFlag("SOFTWARE_WEBGL_ENABLED",(()=>me.getBool("IS_TEST"))),me.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",(()=>1/0)),me.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",(()=>!1)),me.registerFlag("WEBGL2_ISNAN_CUSTOM",(()=>!1)),me.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1));const ke="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:we}=s.backend_util;function Se(e,t,n){const r=[];if(e.forEach((e=>{const t=s.util.sizeFromShape(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?r.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(r.push(`uniform sampler2D ${e.name};`),r.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){const{uniformShape:t}=Oe(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:r.push(`uniform int ${e.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${e.name}Shape;`)}r.push(`uniform ivec2 ${e.name}TexShape;`)}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;")}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{r.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)}));const a=r.join("\n"),o=e.map((e=>function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3?arguments[3]:void 0,a="";a+=n?Ne(e,r):Te(e,r);const o=e.shapeInfo.logicalShape,i=t.logicalShape;o.length<=i.length&&(a+=n?function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",o=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,l=we(e.shapeInfo.logicalShape,t.logicalShape),u=Fe(i),c=i-o;let d;const p=["x","y","z","w","u","v"];d=0===o?"":i<2&&l.length>=1?"coords = 0;":l.map((e=>`coords.${p[e+c]} = 0;`)).join("\n");let h="";h=i<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${p[t+c]}`)).join(", ");let f="return outputValue;";const m=1===s.util.sizeFromShape(e.shapeInfo.logicalShape),g=s.util.sizeFromShape(t.logicalShape),y=1===g;if(1!==o||m||y){if(m&&!y)f=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(l.length){const e=o-2,t=o-1;l.indexOf(e)>-1&&l.indexOf(t)>-1?f="return vec4(outputValue.x);":l.indexOf(e)>-1?f="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":l.indexOf(t)>-1&&(f="return vec4(outputValue.xx, outputValue.zz);")}}else f="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${a}() {\n      ${u} coords = getOutputCoords();\n      ${d}\n      vec4 outputValue = get${r}(${h});\n      ${f}\n    }\n  `}(e,t):function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",o=t.texShape,i=e.shapeInfo.texShape,l=e.shapeInfo.logicalShape.length,u=t.logicalShape.length;if(!e.shapeInfo.isUniform&&l===u&&null==e.shapeInfo.flatOffset&&s.util.arraysEqual(i,o))return`\n      float ${a}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const c=Fe(u),d=we(e.shapeInfo.logicalShape,t.logicalShape),p=u-l;let h;const f=["x","y","z","w","u","v"];h=0===l?"":u<2&&d.length>=1?"coords = 0;":d.map((e=>`coords.${f[e+p]} = 0;`)).join("\n");let m="";m=u<2&&l>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${f[t+p]}`)).join(", ");return`\n    float ${a}() {\n      ${c} coords = getOutputCoords();\n      ${h}\n      return get${r}(${m});\n    }\n  `}(e,t));return a}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),i=t.texShape,l=ge(),u=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(l);let c,d,p=function(e){const t=`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${Ie}\n    ${Ce}\n    ${Ee}\n  `;return t}(l);t.isPacked?(c=function(e,t,n){switch(e.length){case 0:return Ae();case 1:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(1===r[0])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${r[1]}.0);\n      }\n    `;if(1===r[1])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${r[0]}.0);\n      }\n    `;if(n)return"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ";return`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);\n    }\n  `}(0,t,n);case 2:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(s.util.arraysEqual(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));\n      }\n    `;const a=Math.ceil(e[1]/2);if(n)return"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ";return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[2]/2),s=a*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[e.length-1]/2),s=a*Math.ceil(e[e.length-2]/2);let o=s,i="",l="b, r, c";for(let u=2;u<e.length-1;u++)o*=e[e.length-u-1],i=`\n      int b${u} = index / ${o};\n      index -= b${u} * ${o};\n    `+i,l=`b${u}, `+l;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      ${i}\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec${e.length}(${l});\n    }\n  `}(e,t,n)}}(t.logicalShape,i,n.enableShapeUniforms),d=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(l)):(c=function(e,t,n){switch(e.length){case 0:return Ae();case 1:return function(e,t,n){if(1===t[0])return n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `;if(1===t[1])return n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `;if(n)return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ";return`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,n);case 2:return function(e,t,n){if(s.util.arraysEqual(e,t))return n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `;if(1===e[1])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `;if(1===e[0])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `;if(n)return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ";return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n){return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${be(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`}const r=ye(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec3(r, c, d);\n    }\n  `}(e,t,n);case 4:return function(e,t,n){if(n){return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${be(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `}const r=ye(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t,n);case 5:return function(e,t){const n=ye(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=ye(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,i,n.enableShapeUniforms),d=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(l)),n.packedInputs&&(p+=$e);return[p,u,d,a,c,o,n.userCode].join("\n")}function Te(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;const[a,s]=e.shapeInfo.texShape;if(1===a&&1===s)return`\n      float ${r}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const o=_e(n);if(t)return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[i,l]=e.shapeInfo.texShape;return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${i}, ${l}, ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${r}(int index) {\n        ${Re(e)}\n      }\n    `;const a=e.shapeInfo.texShape,s=a[0],o=a[1];if(1===o&&1===s)return`\n      float ${r}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const i=_e(n);if(1===o)return t?`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${s}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(1===s)return t?`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${i}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${o}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(t)return`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `;return`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${s}, ${o}, index + ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),o=e.shapeInfo.texShape;if(null!=o&&s.util.arraysEqual(n,o)){if(t)return`\n      float ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `;const e=o[0];return`\n    float ${a}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${o[1]}.0, ${e}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `}const{newShape:i,keptDims:l}=s.util.squeezeShape(n),u=i;if(u.length<n.length){const n=["row","col"];return`\n      ${Te(De(e,u),t)}\n      float ${a}(int row, int col) {\n        return ${a}(${Me(n,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${Re(e)}\n      }\n    `;const c=o[0],d=o[1],p=_e(r);if(1===d)return t?`\n      float ${a}(int row, int col) {\n        float index = dot(vec3(row, col, ${p}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col) {\n      float index = dot(vec3(row, col, ${p}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${c}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;if(1===c)return t?`\n      float ${a}(int row, int col) {\n        float index = dot(vec3(row, col, ${p}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col) {\n      float index = dot(vec3(row, col, ${p}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${d}.0, 0.5);\n      return sampleTexture(${r}, uv);\n    }\n  `;if(t)return`\n      float ${a}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${r}Shape[1] + col + ${p};\n        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n        return sampleTexture(${r}, uv);\n      }\n    `;return`\n  float ${a}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${p};\n    vec2 uv = uvFromFlat(${c}, ${d}, index);\n    return sampleTexture(${r}, uv);\n  }\n`}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),o=n[1]*n[2],i=n[2],{newShape:l,keptDims:u}=s.util.squeezeShape(n),c=l;if(c.length<n.length){const n=["row","col","depth"];return`\n        ${Te(De(e,c),t)}\n        float ${a}(int row, int col, int depth) {\n          return ${a}(${Me(n,u)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${o}, ${i}, 1)));\n        ${Re(e)}\n      }\n    `;const d=e.shapeInfo.texShape,p=d[0],h=d[1],f=e.shapeInfo.flatOffset;if(h===o&&null==f)return t?`\n      float ${a}(int row, int col, int depth) {\n        int stride1 = ${r}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n        float ${a}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${i}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${h}.0, ${p}.0);\n          return sampleTexture(${r}, uv);\n        }\n      `;if(h===i&&null==f)return t?`\n      float ${a}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}.0, ${p}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;const m=_e(r);if(t)return`\n    float ${a}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${r}Shape[1] * ${r}Shape[2];\n      int stride1 = ${r}Shape[2];\n      int index = row * stride0 + col * stride1 + depth + ${m};\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n      return sampleTexture(${r}, uv);\n    }\n    `;return`\n      float ${a}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${o} + col * ${i} + depth + ${m};\n        vec2 uv = uvFromFlat(${p}, ${h}, index);\n        return sampleTexture(${r}, uv);\n      }\n  `}(e,t);case 4:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),o=n[3],i=n[2]*o,l=n[1]*i,{newShape:u,keptDims:c}=s.util.squeezeShape(n);if(u.length<n.length){const n=["row","col","depth","depth2"];return`\n      ${Te(De(e,u),t)}\n      float ${a}(int row, int col, int depth, int depth2) {\n        return ${a}(${Me(n,c)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${l}, ${i}, ${o}, 1)));\n        ${Re(e)}\n      }\n    `;const d=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,h=p[0],f=p[1],m=`int stride2 = ${r}Shape[3];`,g=`int stride1 = ${r}Shape[2] * stride2;`,y=`int stride0 = ${r}Shape[1] * stride1;`;if(f===l&&null==d)return t?`\n      float ${a}(int row, int col, int depth, int depth2) {\n        ${m}\n        ${g}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${i}, ${o}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${h}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;if(f===o&&null==d)return t?`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${h}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;const b=_e(r);if(t)return`\n    float ${a}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${m}\n      ${g}\n      ${y}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${b});\n      return sampleTexture(${r}, uv);\n    }\n  `;return`\n    float ${a}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${l} + col * ${i} +\n          depth * ${o} + depth2;\n      vec2 uv = uvFromFlat(${h}, ${f}, index + ${b});\n      return sampleTexture(${r}, uv);\n    }\n  `}(e,t);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[4],o=t[3]*a,i=t[2]*o,l=t[1]*i,{newShape:u,keptDims:c}=s.util.squeezeShape(t);if(u.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${Te(De(e,u))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${Me(t,c)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${l}, ${i}, ${o}, ${a})) +\n          depth3;\n        ${Re(e)}\n      }\n    `;const d=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,h=p[0],f=p[1];if(f===l&&null==d)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${o}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===a&&null==d)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const m=_e(n);return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${l} + col * ${i} + depth * ${o} +\n          depth2 * ${a} + depth3 + ${m};\n      vec2 uv = uvFromFlat(${h}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:a,keptDims:o}=s.util.squeezeShape(t);if(a.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${Te(De(e,a))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${Me(t,o)});\n      }\n    `}const i=t[5],l=t[4]*i,u=t[3]*l,c=t[2]*u,d=t[1]*c;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${d}, ${c}, ${u}, ${l})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${Re(e)}\n      }\n    `;const p=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,f=h[0],m=h[1];if(m===d&&null==p)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${c}, ${u}, ${l}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${m}.0, ${f}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(m===i&&null==p)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${m}.0, ${f}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const g=_e(n);return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${d} + col * ${c} + depth * ${u} +\n          depth2 * ${l} + depth3 * ${i} + depth4 + ${g};\n      vec2 uv = uvFromFlat(${f}, ${m}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function Ne(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=ge();return`\n    vec4 ${n}() {\n      return ${r.texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,s=ge();if(t)return`\n    vec4 ${r}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `;const o=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`\n    vec4 ${r}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${o[0]}, ${o[1]}, index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),o=e.shapeInfo.texShape,i=o[0],l=o[1],u=ge();if(null!=o&&s.util.arraysEqual(n,o))return t?`\n      vec4 ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n\n        return ${u.texture2D}(${r}, uv);\n      }\n    `:`\n      vec4 ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${l}.0, ${i}.0);\n\n        return ${u.texture2D}(${r}, uv);\n      }\n    `;if(t)return`\n    vec4 ${a}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${u.texture2D}(${r}, uv);\n    }\n  `;const c=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],d=Math.ceil(n[1]/2);return`\n    vec4 ${a}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${d}, ${c[0]}, ${c[1]}, row, col);\n      return ${u.texture2D}(${r}, uv);\n    }\n  `}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,o=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===n[0]){const r=[1,2],s=["b","row","col"];return`\n        ${Ne(De(e,n.slice(1)),t)}\n        vec4 ${a}(int b, int row, int col) {\n          return ${a}(${Me(s,r)});\n        }\n      `}const i=ge();if(t)return`\n    vec4 ${a}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${i.texture2D}(${r}, uv);\n    }\n  `;const l=o[0],u=o[1],c=Math.ceil(n[2]/2),d=c*Math.ceil(n[1]/2);return`\n    vec4 ${a}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${l}, ${u}, ${d}, ${c}, b, row, col);\n      return ${i.texture2D}(${r}, uv);\n    }\n  `}(e,t);default:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=ge();if(t)return`\n    vec4 ${r}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${a.texture2D}(${n}, uv);\n    }\n  `;const s=e.shapeInfo.logicalShape,o=s.length,i=e.shapeInfo.texShape,l=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],u=l[0],c=l[1],d=Math.ceil(s[o-1]/2);let p=d*Math.ceil(s[o-2]/2),h="int b, int row, int col",f=`b * ${p} + (row / 2) * ${d} + (col / 2)`;for(let m=2;m<o-1;m++)h=`int b${m}, `+h,p*=s[o-m-1],f=`b${m} * ${p} + `+f;return`\n    vec4 ${r}(${h}) {\n      int index = ${f};\n      int texR = index / ${c};\n      int texC = index - texR * ${c};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${u});\n      return ${a.texture2D}(${n}, uv);\n    }\n  `}(e,t)}}const Ie="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Ce="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Ee="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",$e="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function Ae(){return"\n    int getOutputCoords() {\n      return 0;\n    }\n  "}function _e(e){return`offset${e}`}function Re(e){const t=e.name,n=s.util.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function Fe(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function Oe(e,t,n){const{newShape:r,keptDims:a}=s.util.squeezeShape(t),o=t.length,i=e&&3===o&&1===t[0],l=i?t.slice(1):r,u=!e&&o>1&&!s.util.arraysEqual(t,n)&&r.length<o||i;return{useSqueezeShape:u,uniformShape:u?l:t,keptDims:a}}function De(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function Me(e,t){return t.map((t=>e[t])).join(", ")}function Pe(e,t,n){const r=[],a=[];let o,i,l,u=null,c=null;c=e.getUniformLocation(n,"NAN",!1),1===(0,s.env)().getNumber("WEBGL_VERSION")&&(u=e.getUniformLocation(n,"INFINITY",!1));const d=!1;for(const s of t.variableNames){const a={name:s,uniform:e.getUniformLocation(n,s,d),offset:e.getUniformLocation(n,`offset${s}`,d)};t.enableShapeUniforms&&(a.shape=e.getUniformLocation(n,`${s}Shape`,d),a.texShape=e.getUniformLocation(n,`${s}TexShape`,d)),r.push(a)}if(t.enableShapeUniforms&&(o=e.getUniformLocation(n,"outShape",d),l=e.getUniformLocation(n,"outShapeStrides",d),i=e.getUniformLocation(n,"outTexShape",d)),t.customUniforms)for(const s of t.customUniforms)a.push(e.getUniformLocation(n,s.name,d));return{variablesLocations:r,customUniformLocations:a,infLoc:u,nanLoc:c,outShapeLocation:o,outShapeStridesLocation:l,outTexShapeLocation:i}}function Le(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const r=e.logicalShape,a=t[n],o=a.shape;if(!s.util.arraysEqual(r,o))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${o} must match`);if(e.isUniform&&a.isUniform)return;const i=e.texShape,l=a.isUniform?null:a.texData.texShape;if(!s.util.arraysEqual(i,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${l} must match`)}))}function ze(e){return(0,s.env)().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}class Be{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=c.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=ge();this.outputShape=e,this.enableShapeUniforms=ze(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?be(["r","c","d"],e):ye(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}class Ve{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=c.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=ge();this.outputShape=e,this.enableShapeUniforms=ze(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?be(["r","c","d"],e):ye(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}class We{constructor(e){this.variableNames=["A"],this.outTexUsage=d.DOWNLOAD;const t=ge();this.outputShape=e,this.userCode=`\n      ${ke}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class Ue{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=d.DOWNLOAD;const t=ge();this.outputShape=e,this.userCode=`\n      ${ke}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}const Ge={R:0,G:1,B:2,A:3};class je{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"RGBA";this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const r=ge();this.outputShape=e,this.enableShapeUniforms=ze(this.outputShape.length);let a="result";t&&(a="floor(result * 255. + 0.5)");let s="";for(let o=0;o<n.length;o++){const e=n[o];s+=`\n          if(offset == ${o}) {\n            result = values[${Ge[e]}];\n          }`}this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":xe(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int flatIndex = getFlatIndex(coords);\n        float result = 0.;\n        int offset = imod(flatIndex, ${n.length});\n\n        flatIndex = idiv(flatIndex, ${n.length}, 1.);\n\n        int r = flatIndex / texShape[1];\n        if (r < texShape[0]) {\n          int c = imod(flatIndex, texShape[1]);\n          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n          vec4 values = ${r.texture2D}(A, uv);\n          ${s}\n        }\n        ${r.output} = vec4(${a}, 0., 0., 0.);\n      }\n    `}}class He{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=ge();this.outputShape=e,this.enableShapeUniforms=ze(this.outputShape.length);let r="",a="result";t&&(a="floor(result * 255. + 0.5)");for(let s=0;s<=1;s++)for(let t=0;t<=1;t++){const a=2*s+t;r+=`\n          localCoords = coords;\n          if(localCoords[2] + ${t} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${t};\n          if (localCoords[1] + ${s} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${s};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${a}] = values[0];\n            } else if (offset == 1) {\n              result[${a}] = values[1];\n            } else if (offset == 2) {\n              result[${a}] = values[2];\n            } else {\n              result[${a}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":xe(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${r}\n\n          ${n.output} = ${a};\n        }\n    `}}function Ye(e){const t=ge();return S(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}function qe(e){return A(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function Ke(e){return _(e,new Uint16Array([0,1,2,2,1,3]))}function Xe(e,t,n,r,a,o){O(t,n);const i=F(e),l=e.TEXTURE_2D;return y(e,(()=>e.bindTexture(l,i))),y(e,(()=>e.texParameteri(l,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),y(e,(()=>e.texParameteri(l,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),y(e,(()=>e.texParameteri(l,e.TEXTURE_MIN_FILTER,e.NEAREST))),y(e,(()=>e.texParameteri(l,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===(0,s.env)().getNumber("WEBGL_VERSION")?y(e,(()=>e.texImage2D(l,0,r,t,n,0,a,o,null))):y(e,(()=>e.texStorage2D(l,1,r,t,n))),y(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:i,texShape:[n,t]}}function Ze(e){return e.internalFormatFloat}function Qe(e,t,n,r){const[a,s]=h(t,n);return Xe(e,a,s,Ze(r),r.textureFormatFloat,e.FLOAT)}function Je(e){return e.internalFormatHalfFloat}function et(e,t,n,r){const[a,s]=h(t,n);return Xe(e,a,s,Je(r),r.textureFormatFloat,r.textureTypeHalfFloat)}function tt(e){return e.downloadTextureFormat}function nt(e,t,n,r){const[a,s]=h(t,n);return Xe(e,a,s,tt(r),e.RGBA,e.UNSIGNED_BYTE)}function rt(e){return e.internalFormatPackedFloat}function at(e,t,n,r){const[a,s]=m(t,n);return Xe(e,a,s,rt(r),e.RGBA,e.FLOAT)}function st(e){return e.internalFormatPackedHalfFloat}function ot(e,t,n,r){const[a,s]=m(t,n);return Xe(e,a,s,st(r),e.RGBA,r.textureTypeHalfFloat)}function it(e,t,n){y(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n)));return M(e,t,"clipSpacePos",n,3,20,0)&&M(e,t,"uv",n,2,20,12)}function lt(e,t,n,r,a,o){let i,l,u;y(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),a instanceof Uint8Array?(i=new Uint8Array(n*r*4),l=e.UNSIGNED_BYTE,u=e.RGBA):(i=new Float32Array(n*r*4),l=e.FLOAT,u=o.internalFormatPackedFloat),i.set(a),2===(0,s.env)().getNumber("WEBGL_VERSION")?y(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,r,e.RGBA,l,i))):y(e,(()=>e.texImage2D(e.TEXTURE_2D,0,u,n,r,0,e.RGBA,l,i))),y(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function ut(e,t,n){y(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===(0,s.env)().getNumber("WEBGL_VERSION")?y(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):y(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===(0,s.env)().getNumber("WEBGL_VERSION")?y(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):y(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),y(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function ct(e,t,n,r){const a=e.createBuffer();y(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,a)));const s=16*t*n;return y(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ))),y(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),y(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),a}function dt(e,t,n){const r=e,a=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,a),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),a}function pt(e,t,n,r){const[a,s]=h(t,n),o=new Uint8Array(t*n*4);return y(e,(()=>e.readPixels(0,0,a,s,r.downloadTextureFormat,e.UNSIGNED_BYTE,o))),new Float32Array(o.buffer)}function ht(e,t,n,r,a,s,o,i){const l=e,u=new Float32Array(function(e,t){const[n,r]=m(e,t);return n*r*4}(s,o));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}function ft(e,t,n){const r=new Float32Array(t*n*4);return y(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r))),r}class mt{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=(0,s.env)().getNumber("WEBGL_VERSION");if(null!=e?(this.gl=e,l(t,e)):this.gl=u(t),e=this.gl,2===(0,s.env)().getNumber("WEBGL_VERSION")){const t=e;this.createVertexArray=()=>y(t,(()=>t.createVertexArray())),this.bindVertexArray=e=>y(t,(()=>t.bindVertexArray(e))),this.deleteVertexArray=e=>y(t,(()=>t.deleteVertexArray(e))),this.getVertexArray=()=>y(t,(()=>t.getParameter(t.VERTEX_ARRAY_BINDING)))}else if(null!=e){const t=e.getExtension("OES_vertex_array_object");if(null==t)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>y(e,(()=>t.createVertexArrayOES())),this.bindVertexArray=n=>y(e,(()=>t.bindVertexArrayOES(n))),this.deleteVertexArray=n=>y(e,(()=>t.deleteVertexArrayOES(n))),this.getVertexArray=()=>y(e,(()=>e.getParameter(t.VERTEX_ARRAY_BINDING_OES)))}let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===(0,s.env)().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=w(this.gl,e),le(this.gl,t))this.textureHalfFloatExtension=w(this.gl,t);else if((0,s.env)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),le(this.gl,r))this.colorBufferHalfFloatExtension=w(this.gl,r);else if((0,s.env)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",le(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!le(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=qe(this.gl),this.indexBuffer=Ke(this.gl),this.framebuffer=D(this.gl),this.textureConfig=g(this.gl,this.textureHalfFloatExtension)}get debug(){return(0,s.env)().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;y(e,(()=>e.finish())),y(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),y(e,(()=>e.deleteFramebuffer(this.framebuffer))),y(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),y(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),y(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),Qe(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),et(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),nt(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),ut(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),lt(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),ot(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),at(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(G(this.gl,this.framebuffer),this.outputTexture=null),y(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>pt(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,r,a,s){return ht(this.gl,e,0,0,0,a,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return dt(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=ct(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if((0,s.env)().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,a=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(a,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=a}else(0,s.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,(0,s.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>ft(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=Ye(t));const n=C(t);y(t,(()=>t.attachShader(n,this.vertexShader))),y(t,(()=>t.attachShader(n,e))),E(t,n);const r=Object.assign(n,{vao:this.createVertexArray()});return this.debug&&$(t,r),r}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const t=this.gl;y(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer))),it(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&(y(this.gl,(()=>this.gl.deleteProgram(e))),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&$(this.gl,this.program),y(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];return this.throwIfDisposed(),n?z(this.gl,e,t):B(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),y(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),V(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,a]=m(t,n);this.setOutputMatrixTextureDriver(e,r,a)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&$(this.gl,this.program),j(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}y(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),y(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=w(this.gl,2===(0,s.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===(0,s.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===(0,s.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await s.util.repeatedTry((()=>this.disposed||this.isQueryAvailable(e,(0,s.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,(0,s.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length;++t){if(!e[t]())break}return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in(0,s.env)().platform&&(n=(0,s.env)().platform.setTimeoutCustom.bind((0,s.env)().platform)),s.util.repeatedTry((()=>(this.pollItems(),0===this.itemsToPoll.length)),(()=>0),null,n)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),U(this.gl,e,this.framebuffer),this.debug&&j(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(U(this.gl,this.outputTexture,this.framebuffer),this.debug&&j(this.gl)):G(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;U(r,e,this.framebuffer),this.debug&&j(r),this.outputTexture=e,y(r,(()=>r.viewport(0,0,t,n))),y(r,(()=>r.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),y(this.gl,(()=>this.gl.scissor(e,t,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}var gt=n(3249);const{addImpl:yt,bincountImpl:bt,bincountReduceImpl:vt,bitwiseAndImpl:xt,castImpl:kt,ceilImpl:wt,concatImpl:St,equalImpl:Tt,expImpl:Nt,expm1Impl:It,floorImpl:Ct,gatherNdImpl:Et,gatherV2Impl:$t,greaterImpl:At,greaterEqualImpl:_t,lessImpl:Rt,lessEqualImpl:Ft,linSpaceImpl:Ot,logImpl:Dt,maxImpl:Mt,maximumImpl:Pt,minimumImpl:Lt,multiplyImpl:zt,negImpl:Bt,notEqualImpl:Vt,prodImpl:Wt,raggedGatherImpl:Ut,raggedRangeImpl:Gt,raggedTensorToTensorImpl:jt,rangeImpl:Ht,rsqrtImpl:Yt,scatterImpl:qt,sigmoidImpl:Kt,simpleAbsImpl:Xt,sliceImpl:Zt,sparseFillEmptyRowsImpl:Qt,sparseReshapeImpl:Jt,sparseSegmentReductionImpl:en,sqrtImpl:tn,staticRegexReplaceImpl:nn,stridedSliceImpl:rn,stringNGramsImpl:an,stringSplitImpl:sn,stringToHashBucketFastImpl:on,subImpl:ln,tileImpl:un,topKImpl:cn,transposeImpl:dn,uniqueImpl:pn}=gt;function hn(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function fn(e,t){return 1===t?[e]:hn(e,t)}class mn{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=ze(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=fn("rc",this.rank),t=Fe(this.rank),n=this.getOutOfBoundsCondition(e),r=this.getSetup(e),a=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${r}\n\n            setOutput(vec4(${a}));\n          }\n        }\n      `}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let r=0;r<=1;r++){let a=`${0===n?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let t=2;t<this.rank;t++)a=`${e[e.length-1-t]},`+a;t.push(a)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${r};\n    `}getOutput(e){const t=this.getSourceCoordsArr(e);if(1===this.rank){return`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`}return`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}}class gn{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=ze(this.outputShape.length);let n="";for(let s=0;s<4;s++){let e="thisRC = rc;";s%2===1&&(e+="thisRC.z += 1;"),s>1&&(e+="thisRC.y += 1;"),n+=`\n        ${e}\n        ${s>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${s}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${s>0?"}":""}\n      `}var r,a;this.userCode=`\n      ${r=t,a=this.enableShapeUniforms,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${a?ve(["r","c","d"],"inputShape"):ye(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":xe(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class yn{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,n){const r=vn(t,n),a=xn(e,r,n);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);const s=bn(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();const e=this.freeTextures[a].pop();return this.usedTextures[a].push(e),e}let o;return r===p.PACKED_2X2_FLOAT32?o=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===p.PACKED_2X2_FLOAT16?o=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===p.UNPACKED_FLOAT32?o=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===p.UNPACKED_FLOAT16?o=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===p.PACKED_4X1_UNSIGNED_BYTE&&(o=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[a].push(o),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),o}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;const a=vn(n,r),o=xn(t,a,r);o in this.freeTextures||(this.freeTextures[o]=[]);const i=bn(t,a,this.gpgpu.gl,this.gpgpu.textureConfig,r),l=(0,s.env)().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==l&&this._numBytesAllocated>l?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[o].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const u=this.usedTextures[o],c=u&&u.indexOf(e);if(null==c||c<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u[c]=u[u.length-1],u.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function bn(e,t,n,r,a){const s=function(e,t){switch(e){case p.PACKED_2X2_FLOAT32:return rt(t);case p.PACKED_2X2_FLOAT16:return st(t);case p.UNPACKED_FLOAT32:return Ze(t);case p.UNPACKED_FLOAT16:return Je(t);case p.PACKED_4X1_UNSIGNED_BYTE:return tt(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);let o;if(a){const[t,n]=m(e[0],e[1]);o=t*n}else{const[t,n]=h(e[0],e[1]);o=t*n}const i=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}(n,s);return o*i}function vn(e,t){if(e===d.UPLOAD)return p.PACKED_2X2_FLOAT32;if(e===d.RENDER||null==e)return function(e){return(0,s.env)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?p.PACKED_2X2_FLOAT32:p.UNPACKED_FLOAT32:e?p.PACKED_2X2_FLOAT16:p.UNPACKED_FLOAT16}(t);if(e===d.DOWNLOAD||e===d.PIXELS)return p.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function xn(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class kn{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=ze(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const wn="if (isnan(x)) return x;",Sn="return abs(x);";const Tn=wn+"\n  return (x < 0.0) ? 0.0 : x;\n",Nn=wn+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",In="return x;";class Cn{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=ze(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class En{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=ze(this.outputShape.length);const t=e.length,n=fn("rc",t),r=Fe(t),a=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),s=n.slice(-2),o=t<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${a});\n\n        setOutput(getChannel(packedInput, ${o}));\n      }\n    `}}const $n=s.kernel_impls.whereImpl,An={};const _n=(0,s.env)().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class Rn extends s.KernelBackend{nextDataId(){return Rn.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!(0,s.env)().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof mt)t=e;else{const n=u((0,s.env)().getNumber("WEBGL_VERSION"),e);t=new mt(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const e=u((0,s.env)().getNumber("WEBGL_VERSION"));t=new mt(e),this.binaryCache=((n=(0,s.env)().getNumber("WEBGL_VERSION"))in An||(An[n]={}),An[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new yn(this.gpgpu),this.numMBBeforeWarning=null==(0,s.env)().global.screen?1024:(0,s.env)().global.screen.height*(0,s.env)().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new s.DataStorage(this,(0,s.engine)())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,n,r,a,s){const o=this.makeTensorInfo(t,n),i=this.texData.get(o.dataId);i.isPacked=!1,i.texture={texture:e,texShape:[r,a]},i.texShape=[r,a];const l=Z(t),u=new je(l,!1,s),c=this.runWebGLProgram(u,[o],n,[[r,a]]);return c.shape=t,i.texture=null,this.disposeIntermediateTensorInfo(o),c.dataId}write(e,t,n){if(((0,s.env)().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||(0,s.env)().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:d.UPLOAD,refCount:1}),r}refCount(e){if(this.texData.has(e)){return this.texData.get(e).refCount}return 0}incRef(e){this.texData.get(e).refCount++}decRef(e){if(this.texData.has(e)){this.texData.get(e).refCount--}}move(e,t,n,r,a){if((0,s.env)().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:d.UPLOAD,refCount:a})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:a,slice:o,shape:i,isPacked:l}=t;if(null!=o){let t;t=l?new Cn(i,In):new kn(i,In);const n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:r}],r),a=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;const u=null!=this.activeTimers;let c,d;if(u&&(c=s.util.now()),"complex64"===r){const e=this.readSync(a.real.dataId),t=this.readSync(a.imag.dataId);d=s.backend_util.mergeRealAndImagArrays(e,t)}else d=this.getValuesFromTexture(e);return u&&(this.downloadWaitMs+=s.util.now()-c),this.convertAndCacheOnCPU(e,d)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:r,slice:a,dtype:o,complexTensorInfos:i,isPacked:l}=t;if(null!=a){let t;t=l?new Cn(r,In):new kn(r,In);const n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:o}],o),a=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if((0,s.env)().getBool("DEBUG")&&!(0,s.env)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===(0,s.env)().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u,c,d=null;if("complex64"!==o&&(0,s.env)().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(e);const t=this.texData.get(u.dataId);d=this.gpgpu.createBufferFromTexture(t.texture.texture,...f(r))}if(this.pendingRead.set(e,[]),"complex64"!==o&&await this.gpgpu.createAndWaitForFence(),"complex64"===o){const e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),t=e[0],n=e[1];c=s.backend_util.mergeRealAndImagArrays(t,n)}else if(null==d)c=this.getValuesFromTexture(e);else{const e=s.util.sizeFromShape(r);c=this.gpgpu.downloadFloat32MatrixFromBuffer(d,e)}if(null!=u&&this.disposeIntermediateTensorInfo(u),null!=d){const e=this.gpgpu.gl;y(e,(()=>e.deleteBuffer(d)))}const p=this.convertAndCacheOnCPU(e,c),h=this.pendingRead.get(e);return this.pendingRead.delete(e),h.forEach((e=>e(p))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&(0,s.engine)().removeDataId(e,this),this.pendingDeletes--),p}readToGPU(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=this.texData.get(e),{values:r,shape:a,slice:o,dtype:i,isPacked:l,texture:u}=n;if("complex64"===i)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=o){let n;n=l?new Cn(a,In):new kn(a,In);const r=this.runWebGLProgram(n,[{dataId:e,shape:a,dtype:i}],i),s=this.readToGPU(r,t);return this.disposeIntermediateTensorInfo(r),s}if(null==u)throw null!=r?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const c=this.decode(e,t.customTexShape),d=(0,s.engine)().makeTensorFromTensorInfo(c),p=this.texData.get(c.dataId);return Object.assign({tensorRef:d},p.texture)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>s.util.decodeString(e)));return(0,s.buffer)(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return(0,s.buffer)(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!x(n)){if((0,s.env)().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:r}=this.texData.get(e),a=s.util.sizeFromShape(t);if((0,s.env)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),s=this.gpgpu.downloadMatrixFromPackedTexture(r.texture.texture,...f(t)).subarray(0,a);return this.disposeIntermediateTensorInfo(n),s}const o=(0,s.env)().getBool("WEBGL_PACK")&&!0===r,i=o?Z(t):t,l=o?new Ue(i):new We(i),u=this.runWebGLProgram(l,[{shape:i,dtype:n,dataId:e}],"float32"),c=this.texData.get(u.dataId),d=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(c.texture.texture,c.texShape[0],c.texShape[1]).subarray(0,a);return this.disposeIntermediateTensorInfo(u),d}timerAvailable(){return(0,s.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();const a=s.util.flatten(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),o=s.util.flatten(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,r&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if((0,s.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(a);i.kernelMs=s.util.sum(e),i.getExtraProfileInfo=()=>e.map(((e,t)=>({name:o[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return(0,s.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:s.util.now(),endMs:null}}endTimer(e){return(0,s.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=s.util.now(),e)}async getQueryTime(e){if((0,s.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:a,isPacked:s,slice:o}=this.texData.get(e),i=o&&o.origDataId||e,l=this.dataRefCount.get(i);l>1?this.dataRefCount.set(i,l-1):(this.dataRefCount.delete(i),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,a,s)));const u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:_n;return(0,s.env)().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&s.util.sizeFromShape(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){s.backend_util.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return $n(e.shape,t)}packedUnaryOp(e,t,n){const r=new Cn(e.shape,t),a=this.compileAndRun(r,[e],n);return(0,s.engine)().makeTensorFromTensorInfo(a)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=Xt(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if((0,s.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,Sn,e.dtype);const t=new kn(e.shape,Sn),n=this.compileAndRun(t,[e]);return(0,s.engine)().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&s.util.isString(n[0])){const a=n.map((e=>s.util.encodeString(e)));r=this.write(a,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){return(0,s.engine)().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){const t=new En(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new mn(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[K(e.shape),...X(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},a=[K(t),...X(t)],s=new gn(a,n),o=[n],i=this.runWebGLProgram(s,[r],e.dtype,o,!0);return{dataId:i.dataId,shape:t,dtype:i.dtype}}decode(e,t){const n=this.texData.get(e),{isPacked:r,shape:a,dtype:o}=n;if(null!=t){const e=s.util.sizeFromShape(a),n=t[0]*t[1]*4;s.util.assert(e<=n,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."))}const i=Z(a);let l;l=r?new Ve(i):new Be(i);const u=[null!=t?t:f(i)];return{dtype:o,shape:a,dataId:this.runWebGLProgram(l,[{shape:i,dtype:o,dataId:e}],o,u,!0,t).dataId}}runWebGLProgram(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]&&arguments[4],o=arguments.length>5?arguments[5]:void 0;const i=this.makeTensorInfo(e.outputShape,n),l=this.texData.get(i.dataId);if(e.packedOutput&&(l.isPacked=!0),e.outPackingScheme===c.DENSE){const t=null!=o?o:f(e.outputShape);l.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(l.usage=e.outTexUsage),0===s.util.sizeFromShape(i.shape))return l.values=s.util.getTypedArrayFromDType(i.dtype,0),i;const u=[],d=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&s.util.sizeFromShape(t.shape)<=(0,s.env)().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!==!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),u.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!ee(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),u.push(t),n=this.texData.get(t.dataId),e.shape=r}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(i.dataId);const p={shape:i.shape,texData:l,isUniform:!1},h=function(e,t,n){let r="";t.concat(n).forEach((t=>{const a=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const o=t.texData.texShape,{useSqueezeShape:i,uniformShape:l,keptDims:u}=Oe(e.packedInputs,t.shape,o);let c="",d="",p="";if(1===l.length&&e.packedInputs){const e=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];c=`${e[0]>1}_${e[1]>1}`}else if(2!==l.length||e.packedInputs){if(l.length>2&&!e.packedInputs){const e=s.util.computeStrides(l);p=`${e[0]===o[1]}_${e[e.length-1]===o[1]}`}}else d=`${l[0]>1}_${l[1]>1}`;const h=t.shape.length,f=2===l.length&&s.util.arraysEqual(t.shape,o),m=1===s.util.sizeFromShape(t.shape),g=s.backend_util.getBroadcastDims(t.shape,n.shape),y=!e.packedInputs&&h===n.shape.length&&s.util.arraysEqual(o,n.texData.texShape),b=e.packedInputs||l.length>2?"":`${o[0]>1}_${o[1]>1}`;r+=`${h}_${y}_${i?u:""}_${l.length}_${m}_${g}_${f}_${c}_${d}_${p}_${b}_${a}`}else{const e=t.isUniform?"uniform":t.texData.texShape;r+=`${t.shape}_${e}_${a}`}}));const a=e.userCode;let o=e.constructor.name;return o+="_"+r+"_"+a+`${(0,s.env)().getNumber("WEBGL_VERSION")}`,o}(e,d,p),m=this.getAndSaveBinary(h,(()=>function(e,t,n,r){const a=n.map(((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),o=a.map((e=>e.shapeInfo)),i={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},l=Se(a,i,t),u=T(e.gl,l),c=e.createProgram(u);return(0,s.env)().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:u,source:l,webGLProgram:c,inShapeInfos:o,outShapeInfo:i,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(e.buildVao(c),Object.assign({program:t,fragmentShader:u,source:l,webGLProgram:c,inShapeInfos:o,outShapeInfo:i},Pe(e,t,c)))}(this.gpgpu,e,d,p))),g=null!=this.activeTimers;let y;g&&(y=this.startTimer()),(0,s.env)().get("ENGINE_COMPILE_ONLY")||function(e,t,n,r,a){t.program.enableShapeUniforms||(Le(t.inShapeInfos,n),Le([t.outShapeInfo],[r]));const o=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(o.texture,i[0],i[1]):e.setOutputMatrixTexture(o.texture,i[0],i[1]),e.setProgram(t.webGLProgram),e.bindVertexArray(t.webGLProgram.vao),1===(0,s.env)().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN);for(let u=0;u<n.length;++u){const r=n[u],{uniform:a,offset:o,shape:i,texShape:l}=t.variablesLocations[u];if(i){const{uniformShape:n}=Oe(t.program.packedInputs,r.shape,r.texData.texShape);switch(n.length){case 1:e.gl.uniform1iv(i,new Int32Array(n));break;case 2:e.gl.uniform2iv(i,new Int32Array(n));break;case 3:e.gl.uniform3iv(i,new Int32Array(n));break;case 4:e.gl.uniform4iv(i,new Int32Array(n))}}if(l&&e.gl.uniform2i(l,r.texData.texShape[0],r.texData.texShape[1]),null!=a)if(r.isUniform)if(s.util.sizeFromShape(r.shape)<2)e.gl.uniform1f(a,r.uniformValues[0]);else{let t=r.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(a,t)}else null!=r.texData.slice&&null!=o&&e.gl.uniform1i(o,r.texData.slice.flatOffset),e.setInputMatrixTexture(r.texData.texture.texture,a,u)}const l=t.outShapeLocation;if(l)switch(r.shape.length){case 1:e.gl.uniform1iv(l,new Int32Array(r.shape));break;case 2:e.gl.uniform2iv(l,new Int32Array(r.shape));break;case 3:e.gl.uniform3iv(l,new Int32Array(r.shape));break;case 4:e.gl.uniform4iv(l,new Int32Array(r.shape))}if(t.outShapeStridesLocation){const n=s.util.computeStrides(r.shape);switch(r.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}if(t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),t.program.customUniforms&&a)for(let s=0;s<t.program.customUniforms.length;++s){const n=t.program.customUniforms[s],r=t.customUniformLocations[s],o=a[s];if("float"===n.type)e.gl.uniform1fv(r,o);else if("vec2"===n.type)e.gl.uniform2fv(r,o);else if("vec3"===n.type)e.gl.uniform3fv(r,o);else if("vec4"===n.type)e.gl.uniform4fv(r,o);else if("int"===n.type)e.gl.uniform1iv(r,o);else if("ivec2"===n.type)e.gl.uniform2iv(r,o);else if("ivec3"===n.type)e.gl.uniform3iv(r,o);else{if("ivec4"!==n.type)throw Error(`uniform type ${n.type} is not supported yet.`);e.gl.uniform4iv(r,o)}}e.executeProgram()}(this.gpgpu,m,d,p,r),u.forEach((e=>this.disposeIntermediateTensorInfo(e))),g&&(y=this.endTimer(y),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(y)}));const b=(0,s.env)().getNumber("WEBGL_FLUSH_THRESHOLD");if(b>0){const e=s.util.now();e-this.lastGlFlushTime>b&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!(0,s.env)().getBool("WEBGL_LAZILY_UNPACK")&&l.isPacked&&!1===a){const e=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),e}return i}compileAndRun(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];n=n||t[0].dtype;return this.runWebGLProgram(e,t,n,r,a)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){if(!this.disposed){if(!(0,s.env)().getBool("IS_TEST")){Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}))}this.textureManager.dispose(),null!=this.canvas&&"undefined"!==typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0}}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=(0,s.tidy)((()=>{if(!(0,s.env)().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=(0,s.env)().getBool("DEBUG");(0,s.env)().set("DEBUG",!1);const t=this.abs((0,s.scalar)(1e-8)).dataSync()[0];if((0,s.env)().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:r,values:a,texture:o,usage:i,isPacked:l}=t;if(null!=o)return;const u=null!=this.activeTimers;let c;u&&(c=s.util.now());let p=t.texShape;if(null==p&&(p=Q(n,l),t.texShape=p),null!=a){const e=Z(n);let o,i=p[1],h=p[0];const f=a instanceof Uint8Array||a instanceof Uint8ClampedArray;!l&&f||([i,h]=m(p[0],p[1])),o=l?new He(e,f):new je(e,f);const g=f?[h,i]:p,y=this.makeTensorInfo(g,r),b=this.texData.get(y.dataId);b.usage=f?d.PIXELS:d.UPLOAD,b.texShape=g,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(y.dataId),i,h,a);const v=[[h,i]],x=!0,k=this.runWebGLProgram(o,[y],r,v,x),w=this.texData.get(k.dataId);t.texShape=w.texShape,t.isPacked=w.isPacked,t.usage=w.usage,(0,s.env)().get("ENGINE_COMPILE_ONLY")?this.disposeData(k.dataId):(t.texture=w.texture,t.values=null,this.texData.delete(k.dataId)),this.disposeIntermediateTensorInfo(y),u&&(this.uploadWaitMs+=s.util.now()-c)}else{const e=this.acquireTexture(p,i,r,l);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*s.util.bytesPerElement(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(const[,t]of Object.entries(this.binaryCache)){const n=new Promise((e=>{try{this.checkCompletion_(t),e(!0)}catch(n){throw n}}));e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await(0,s.nextFrame)(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)){if(console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS))throw I(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.");throw new Error("Failed to link vertex and fragment shaders.")}return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:t,customUniformLocations:n,infLoc:r,nanLoc:a,outShapeLocation:s,outShapeStridesLocation:o,outTexShapeLocation:i}=Pe(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=n,e.infLoc=r,e.nanLoc=a,e.outShapeLocation=s,e.outShapeStridesLocation=o,e.outTexShapeLocation=i}}createTensorFromGPUData(e,t,n){e.channels=e.channels||"RGBA";const{texture:r,height:a,width:o,channels:i}=e,l=(0,s.engine)().backend;if(!l.gpgpu.gl.isTexture(r))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const u=l.writeTexture(r,t,n,a,o,i);return(0,s.engine)().makeTensorFromDataId(u,t,n,l)}}Rn.nextDataId=0;const Fn="4.22.0";function On(){(0,s.env)().set("WEBGL_FORCE_F16_TEXTURES",!0)}s.device_util.isBrowser()&&(0,s.registerBackend)("webgl",(()=>new Rn),2);const Dn={forceHalfFloat:On},Mn="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n";class Pn{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=s.backend_util.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=ze(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}const Ln="\n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n";class zn{constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s.backend_util.assertAndGetBroadcastShape(t,n);const a=this.outputShape.length;this.enableShapeUniforms=ze(a);let o="";if(r)if(0===a||1===s.util.sizeFromShape(this.outputShape))o="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else{if(o=`\n          ${Fe(a)} coords = getOutputCoords();\n        `,1===a)this.enableShapeUniforms?o+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":o+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=fn("coords",a);this.enableShapeUniforms?o+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= outShape[${a} - 2];\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= outShape[${a} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:o+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= ${this.outputShape[a-2]};\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= ${this.outputShape[a-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${o}\n\n        setOutput(result);\n      }\n    `}}function Bn(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const Vn={kernelName:s.Identity,backendName:"webgl",kernelFunc:Bn};function Wn(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.makeTensorInfo(r.shape,"complex64"),o=n.texData.get(s.dataId),i=Bn({inputs:{x:r},backend:n}),l=Bn({inputs:{x:a},backend:n});return o.complexTensorInfos={real:i,imag:l},s}const Un={kernelName:s.Complex,backendName:"webgl",kernelFunc:Wn},Gn="return (a < 0.) ? b * a : a;",jn="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const Hn={kernelName:s.LeakyRelu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:o}=r,i=n.makeTensorInfo([],"float32",s.util.createScalarValue(o,"float32")),l=(0,s.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new zn(jn,a.shape,i.shape):new Pn(Gn,a.shape,i.shape),u=n.runWebGLProgram(l,[a,i],"float32");return n.disposeIntermediateTensorInfo(i),u}},Yn="return (a < 0.) ? b * a : a;",qn="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const Kn={kernelName:s.Prelu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t,o=(0,s.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new zn(qn,r.shape,a.shape):new Pn(Yn,r.shape,a.shape);return n.runWebGLProgram(o,[r,a],"float32")}},Xn="if (isnan(x)) return x;";function Zn(e){let{opSnippet:t,packedOpSnippet:n,cpuKernelImpl:r,dtype:a}=e;return e=>{let{inputs:o,backend:i}=e;const{x:l}=o,u=i,c=a||l.dtype;if(u.shouldExecuteOnCPU([l])&&null!=r){const e=u.texData.get(l.dataId),t=r(e.values,c);return u.makeTensorInfo(l.shape,c,t)}let d;return d=(0,s.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=n?new Cn(l.shape,n):new kn(l.shape,t),u.runWebGLProgram(d,[l],c)}}function Qn(e){let{opSnippet:t,packedOpSnippet:n,checkOutOfBounds:r=!1,supportsComplex:a=!1,cpuKernelImpl:o,dtype:i}=e;return e=>{let{inputs:l,backend:u}=e;const{a:c,b:d}=l,p=u;if(a&&"complex64"===c.dtype){const e=p.texData.get(c.dataId),n=p.texData.get(d.dataId),[r,a]=[[e.complexTensorInfos.real,n.complexTensorInfos.real],[e.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((e=>{const[n,r]=e,a={dataId:n.dataId,dtype:n.dtype,shape:c.shape},o={dataId:r.dataId,dtype:r.dtype,shape:d.shape},i=new Pn(t,c.shape,d.shape);return p.runWebGLProgram(i,[a,o],(0,s.upcastType)(n.dtype,r.dtype))})),o=Wn({inputs:{real:r,imag:a},backend:p});return p.disposeIntermediateTensorInfo(r),p.disposeIntermediateTensorInfo(a),o}const h=i||(0,s.upcastType)(c.dtype,d.dtype);if(("string"===c.dtype||"string"===d.dtype||p.shouldExecuteOnCPU([c,d]))&&null!=o){const e=p.texData.get(c.dataId).values,t=p.texData.get(d.dataId).values,n="string"===c.dtype?s.backend_util.fromUint8ToStringArray(e):e,r="string"===c.dtype?s.backend_util.fromUint8ToStringArray(t):t,[a,i]=o(c.shape,d.shape,n,r,h),l=p.makeTensorInfo(i,h);return p.texData.get(l.dataId).values=a,l}let f;return f=(0,s.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=n?new zn(n,c.shape,d.shape,r):new Pn(t,c.shape,d.shape),p.runWebGLProgram(f,[c,d],h)}}function Jn(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":Tn;if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":Nn;if("prelu"===e)return t?qn:Yn;if("leakyrelu"===e)return t?jn:Gn;if("sigmoid"===e)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class er{constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4&&void 0!==arguments[4]&&arguments[4],s=arguments.length>5&&void 0!==arguments[5]&&arguments[5],o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,i=arguments.length>7&&void 0!==arguments[7]&&arguments[7],l=arguments.length>8&&void 0!==arguments[8]&&arguments[8];this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=ze(this.outputShape.length);const u=r?e[1]:e[2],c=Math.ceil(u/2),d=r?"i * 2, rc.y":"rc.y, i * 2",p=a?"rc.z, i * 2":"i * 2, rc.z",h=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";o&&(m=i?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${o}\n        }`:l?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${o}\n        }`:`vec4 activation(vec4 x) {\n          ${o}\n        }`,g="result = activation(result);");const y=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let b="rc.x",v="rc.x";e[0]<t[0]?b=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(v=`imod(rc.x, ${t[0]})`),this.userCode=`\n      ${m}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        int batchA = ${b};\n        int batchB = ${v};\n        for (int i = 0; i < ${c}; i++) {\n          vec4 a = getMatrixA(batchA, ${d});\n          vec4 b = getMatrixB(batchB, ${p});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${h[0]} * ${f[0]});\n          result += (${h[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${y}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}}const tr="return areal * breal - aimag * bimag;",nr="return areal * bimag + aimag * breal;";class rr{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=s.backend_util.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const ar="return a * b;";function sr(e){const{inputs:t,backend:n}=e,{a:r,b:a}=t,o=s.backend_util.upcastType(r.dtype,a.dtype);if("complex64"===r.dtype){const e=n.texData.get(r.dataId),t=n.texData.get(a.dataId),s=new rr(tr,r.shape,a.shape),o=new rr(nr,r.shape,a.shape),i=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:a.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:a.shape}],l=n.runWebGLProgram(s,i,"float32"),u=n.runWebGLProgram(o,i,"float32"),c=Wn({inputs:{real:l,imag:u},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),c}if(n.shouldExecuteOnCPU([r,a])){const e=n.texData.get(r.dataId),t=n.texData.get(a.dataId),[s,i]=zt(r.shape,a.shape,e.values,t.values,o),l=n.makeTensorInfo(i,o);return n.texData.get(l.dataId).values=s,l}let i;return i=(0,s.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new zn(ar,r.shape,a.shape):new Pn(ar,r.shape,a.shape),n.runWebGLProgram(i,[r,a],o)}const or={kernelName:s.Multiply,backendName:"webgl",kernelFunc:sr};function ir(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:o}=r,i=n,l=s.util.sizeFromShape(a.shape),u=s.util.inferFromImplicitShape(o,l),c=s.util.sizeFromShape(u);s.util.assert(l===c,(()=>`The new shape (${u}) has ${c} elements and the old shape (${a.shape}) has ${l} elements. The new shape and old shape must have the same number of elements.`));const d=i.texData.get(a.dataId);return!d.isPacked||ee(a.shape,u)||null!==d.texture&&ee(d.shape,u)?(i.incRef(a.dataId),{dataId:a.dataId,shape:u,dtype:a.dtype}):function(e,t,n){const r=[K(e.shape),...X(e.shape)],a={dtype:e.dtype,shape:r,dataId:e.dataId},s=[K(t),...X(t)],o=new gn(s,r),i=[r],l=n.runWebGLProgram(o,[a],e.dtype,i,!0);return{dataId:l.dataId,shape:t,dtype:l.dtype}}(a,u,i)}const lr={kernelName:s.Reshape,backendName:"webgl",kernelFunc:ir};class ur{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:o}=e;this.outputShape=[r,o];const i=4*Math.floor(n/4),l=n%4;let u="sumValue += dot(values, ones);";if(null!=t){const e=1/t;u=`sumValue += dot(values * ${s.util.isInt(e)?e.toPrecision(2):e}, ones);`}let c="";a%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===l}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}class cr{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];let o="0.0",i="";"prod"===t?o="1.0":"min"===t?(o="1.0 / 1e-20",i="min"):"max"===t&&(o="-1.0 / 1e-20",i="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?l="sumValue":"prod"===t?l="prodValue":"all"===t?l="allValue":"any"===t&&(l="anyValue");const u=4*Math.floor(n/4),c=n%4;let d=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${i}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${i}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,p="vec4";"all"===t?(o="1.0",d="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",p="bvec4"):"any"===t&&(o="0.0",d="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",p="bvec4");let h="";a%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${o};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${h}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${o});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${d}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${d}\n        } else if (${2===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${d}\n        } else if (${3===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${d}\n        }\n        setOutput(${l});\n      }\n    `}}function dr(e,t,n,r){const a=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],r=s.backend_util.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape);let o=e;for(let s=0;s<a.length;s++){const{inSize:i,windowSize:l,outSize:u}=a[s];let c,d;c="mean"===n?0===s?new ur({windowSize:l,inSize:i,batchSize:e.shape[0],outSize:u},i):new ur({windowSize:l,inSize:i,batchSize:e.shape[0],outSize:u}):new cr({windowSize:l,inSize:i,batchSize:e.shape[0],outSize:u},n),d=o,o=r.runWebGLProgram(c,[o],t),d.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(d)}return o}class pr{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];this.outputShape=n,this.rank=n.length;const r=Fe(this.rank),a=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let a=0;a<e.length;a++)r[e[a]]=n[a];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${a}));\n    }\n    `}}class hr{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let u=0;u<n.length;u++)n[u]=e[t[u]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=Fe(this.rank),a=hn("rc",this.rank),s=new Array(this.rank);for(let u=0;u<t.length;u++)s[t[u]]=a[u];const o=`vec2(${s.slice(-2).join()})`,i=`++${a[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${s.join()}), ${o})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${l};\n      if(${i}) {\n        result[1] = ${l};\n      }\n      --${a[this.rank-1]};\n      if(++${a[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${l};\n        if(${i}) {\n          result[3] = ${l};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function fr(e,t,n){const r=(0,s.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new hr(e.shape,t):new pr(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function mr(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:o,keepDims:i}=r;return function(e,t,n,r){const a=t,o=e.shape.length,i=s.util.parseAxisParam(a,e.shape);let l=i;const u=s.backend_util.getAxesPermutation(l,o),c=null!=u;let d=e;c&&(d=fr(e,u,r),l=s.backend_util.getInnerMostAxes(l.length,o)),s.backend_util.assertAxesAreInnerMostDims("sum",l,o);const[p,h]=s.backend_util.computeOutAndReduceShapes(d.shape,l);let f=p;n&&(f=s.backend_util.expandShapeToKeepDim(p,i));const m=s.util.sizeFromShape(h),g=ir({inputs:{x:d},attrs:{shape:[s.util.sizeFromShape(e.shape)/m,m]},backend:r}),y=dr(g,(0,s.sumOutType)(e.dtype),"sum",r),b=ir({inputs:{x:y},attrs:{shape:f},backend:r});return r.disposeIntermediateTensorInfo(g),r.disposeIntermediateTensorInfo(y),c&&r.disposeIntermediateTensorInfo(d),b}(a,o,i,n)}const gr={kernelName:s.Sum,backendName:"webgl",kernelFunc:mr};function yr(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{perm:s}=r,o=n,i=a.shape.length,l=new Array(i);for(let c=0;c<l.length;c++)l[c]=a.shape[s[c]];let u;if(o.shouldExecuteOnCPU([a])){const e=o.texData.get(a.dataId).values,t=dn(e,a.shape,a.dtype,s,l);u=o.makeTensorInfo(l,a.dtype);o.texData.get(u.dataId).values=t}else u=fr(a,s,o);return u}const br={kernelName:s.Transpose,backendName:"webgl",kernelFunc:yr};function vr(e){let{a:t,b:n,transposeA:r,transposeB:a,backend:o,bias:i=null,preluActivationWeights:l=null,leakyreluAlpha:u=0,activation:c=null}=e;const d=t.shape.length,p=n.shape.length,h=r?t.shape[d-2]:t.shape[d-1],f=a?n.shape[p-1]:n.shape[p-2],m=r?t.shape[d-1]:t.shape[d-2],g=a?n.shape[p-2]:n.shape[p-1],y=t.shape.slice(0,-2),b=n.shape.slice(0,-2),v=s.util.sizeFromShape(y),x=s.util.sizeFromShape(b),k=s.broadcast_util.assertAndGetBroadcastShape(t.shape.slice(0,-2),n.shape.slice(0,-2)).concat([m,g]);s.util.assert(h===f,(()=>`Error in matMul: inner shapes (${h}) and (${f}) of Tensors with shapes ${t.shape} and ${n.shape} and transposeA=${r} and transposeB=${a} must match.`));const w=r?[v,h,m]:[v,m,h],S=a?[x,g,f]:[x,f,g],T=ir({inputs:{x:t},backend:o,attrs:{shape:w}}),N=ir({inputs:{x:n},backend:o,attrs:{shape:S}}),I=[T,N],C=Math.max(v,x),E=r?T.shape[1]:T.shape[2],$=null!=i,A=null!=l,_="leakyrelu"===c,R=null!=c?Jn(c,!0):null;let F;if((1===m||1===g)&&E>1e3&&!1===($||A||_||null!=R)){let e=T,t=N;r&&(e=yr({inputs:{x:T},backend:o,attrs:{perm:[0,2,1]}}),I.push(e)),a&&(t=yr({inputs:{x:N},backend:o,attrs:{perm:[0,2,1]}}),I.push(t));const n=1===g;let s=e;1!==g&&(s=ir({inputs:{x:e},backend:o,attrs:{shape:[C,E,1]}}),I.push(s));const i=1===g?2:1;let l=t;n&&(l=ir({inputs:{x:t},backend:o,attrs:{shape:[C,1,E]}}),I.push(l));const u=sr({inputs:{a:s,b:l},backend:o});F=mr({inputs:{x:u},backend:o,attrs:{axis:i,keepDims:!0}}),I.push(u)}else{const e=(0,s.upcastType)(t.dtype,n.dtype),c=new er(w,S,[C,m,g],r,a,$,R,A,_),d=[T,N];if(null!=i&&d.push(i),A&&d.push(l),_){const e=o.makeTensorInfo([],"float32",s.util.createScalarValue(u,"float32"));d.push(e),I.push(e)}F=o.runWebGLProgram(c,d,e)}const O=ir({inputs:{x:F},backend:o,attrs:{shape:k}});I.push(F);for(const s of I)o.disposeIntermediateTensorInfo(s);return O}const xr={kernelName:s._FusedMatMul,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:s,bias:o,preluActivationWeights:i}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:d}=r;return vr({a:a,b:s,transposeA:l,transposeB:u,backend:n,bias:o,preluActivationWeights:i,leakyreluAlpha:d,activation:c})}},kr="return abs(x);";const wr={kernelName:s.Abs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const e=n.texData.get(r.dataId),t=Xt(e.values);return n.makeTensorInfo(r.shape,r.dtype,t)}let a;return a=(0,s.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new Cn(r.shape,kr):new kn(r.shape,kr),n.runWebGLProgram(a,[r],r.dtype)}},Sr=Zn({opSnippet:wn+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),Tr={kernelName:s.Acos,backendName:"webgl",kernelFunc:Sr},Nr=Zn({opSnippet:wn+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),Ir={kernelName:s.Acosh,backendName:"webgl",kernelFunc:Nr},Cr="return a + b;",Er=Qn({opSnippet:Cr,packedOpSnippet:Cr,supportsComplex:!0,cpuKernelImpl:yt}),$r={kernelName:s.Add,backendName:"webgl",kernelFunc:Er};class Ar{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class _r{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}const Rr={kernelName:s.AddN,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,a=n;if(1===a.length)return Bn({inputs:{x:a[0]},backend:r});if(a.length>(0,s.env)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(a.length/2),n=e({inputs:a.slice(0,t),backend:r}),s=e({inputs:a.slice(t),backend:r});return e({inputs:[n,s],backend:r})}const o=a.map((e=>e.dtype)).reduce(((e,t)=>(0,s.upcastType)(e,t))),i=a.map((e=>e.shape)),l=(0,s.env)().getBool("WEBGL_PACK")?new _r(a[0].shape,i):new Ar(a[0].shape,i);return r.runWebGLProgram(l,a,o)}};const Fr={kernelName:s.All,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:o,keepDims:i}=r,l=a.shape.length,u=s.util.parseAxisParam(o,a.shape);let c=u;const d=s.backend_util.getAxesPermutation(c,l);let p=a;null!=d&&(p=yr({inputs:{x:a},backend:n,attrs:{perm:d}}),c=s.backend_util.getInnerMostAxes(c.length,l)),s.backend_util.assertAxesAreInnerMostDims("all",c,l);const[h,f]=s.backend_util.computeOutAndReduceShapes(p.shape,c),m=ir({inputs:{x:p},backend:n,attrs:{shape:[-1,s.util.sizeFromShape(f)]}}),g=dr(m,m.dtype,"all",n);let y;if(i){y=ir({inputs:{x:g},backend:n,attrs:{shape:s.backend_util.expandShapeToKeepDim(h,u)}})}else y=ir({inputs:{x:g},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=d&&n.disposeIntermediateTensorInfo(p),y}};const Or={kernelName:s.Any,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:o,keepDims:i}=r,l=a.shape.length,u=s.util.parseAxisParam(o,a.shape);let c=u;const d=s.backend_util.getAxesPermutation(c,l);let p=a;null!=d&&(p=yr({inputs:{x:a},backend:n,attrs:{perm:d}}),c=s.backend_util.getInnerMostAxes(c.length,l)),s.backend_util.assertAxesAreInnerMostDims("any",c,l);const[h,f]=s.backend_util.computeOutAndReduceShapes(p.shape,c),m=ir({inputs:{x:p},backend:n,attrs:{shape:[-1,s.util.sizeFromShape(f)]}}),g=dr(m,m.dtype,"any",n);let y;if(i){y=ir({inputs:{x:g},backend:n,attrs:{shape:s.backend_util.expandShapeToKeepDim(h,u)}})}else y=ir({inputs:{x:g},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=d&&n.disposeIntermediateTensorInfo(p),y}};class Dr{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:a,outSize:s}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[a,s];const o="max"===t?">":"<",i=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${i};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${o} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class Mr{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,s.util.assert(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const a=e[e.length-1],o=Math.ceil(a/t);this.outputShape=e.slice(0,-1),o>1&&this.outputShape.push(o),r||this.variableNames.push("bestIndicesA");const i=this.outputShape,l=i.length,u=Fe(l),c=fn("coords",l);let d,p;if(1===o){p=l+1;const e=Fe(p);d=`\n        ${e} sourceLocR = ${e}(${c.join()}, 0);\n        ++${c[l-1]};\n        ${e} sourceLocG = ${e}(${c.join()}, 0);\n        ++${c[l-2]};\n        ${e} sourceLocA = ${e}(${c.join()}, 0);\n        --${c[l-1]};\n        ${e} sourceLocB = ${e}(${c.join()}, 0);\n        --${c[l-2]};`}else p=l,d=`\n        ${u} sourceLocR = coords;\n        ++${c[l-1]};\n        ${u} sourceLocG = coords;\n        ++${c[l-2]};\n        ${u} sourceLocA = coords;\n        --${c[l-1]};\n        ${u} sourceLocB = coords;\n        --${c[l-2]};`;const h=["x","y","z","w","u","v"].slice(0,p),f="."+h[p-1],m=h.map((e=>"int "+e)),g=fn("sourceLocR",p-1).concat("inIdx.r"),y=fn("sourceLocG",p-1).concat("inIdx.g"),b=fn("sourceLocB",p-1).concat("inIdx.b"),v=fn("sourceLocA",p-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",k=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${b.join()}),\n                             getBestIndicesAChannel(${v.join()})));`,w=`vec4(\n            getAChannel(${g.join()}),\n            hasNextCol ? getAChannel(${y.join()}) : 0.,\n            hasNextRow ? getAChannel(${b.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${v.join()}) : 0.)`,S=r?"":`\n      float getBestIndicesAChannel(${m.join()}) {\n        return getChannel(getBestIndicesA(${h.join()}),\n                                          vec2(${h.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${m.join()}) {\n        return getChannel(getA(${h.join()}),\n                               vec2(${h.slice(-2).join()}));\n      }\n      ${S}\n      void main() {\n        ${u} coords = getOutputCoords();\n        bool hasNextCol = ${c[l-1]} < ${i[l-1]-1};\n        bool hasNextRow = ${c[l-2]} < ${i[l-2]-1};\n        ${d}\n        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},\n          sourceLocB${f}, sourceLocA${f}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${w};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${k}\n          vec4 candidate = ${w};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function Pr(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,a=t.shape[0],o=t.shape[1];null!=r&&(a=r.shape[0],o=r.shape[1]);const i=s.backend_util.computeOptimalWindowSize(o),l={windowSize:i,inSize:o,batchSize:a,outSize:Math.ceil(o/i)},u=new Dr(l,n,null==r),c=[t];null!=r&&c.push(r);const d=e.runWebGLProgram(u,c,"int32");if(1===d.shape[1])return d;const p=Pr(e,t,n,d);return e.disposeIntermediateTensorInfo(d),p}function Lr(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;const a=null!=r?r.shape:t.shape,o=a[a.length-1],i=s.backend_util.computeOptimalWindowSize(o),l=new Mr(a,i,n,null==r),u=null==r?[t]:[t,r],c=e.runWebGLProgram(l,u,"int32");if(c.shape.length===t.shape.length){const r=Lr(e,t,n,c);return e.disposeIntermediateTensorInfo(c),r}return c}function zr(e,t,n,r){const a=[n];if(s.backend_util.assertAxesAreInnerMostDims("arg"+r.charAt(0).toUpperCase()+r.slice(1),a,t.shape.length),!(0,s.env)().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],o=e.texData.get(t.dataId);let i=t;null!==o&&o.isPacked&&(i=e.unpackTensor(t),n.push(i));const[l,u]=s.backend_util.computeOutAndReduceShapes(i.shape,a),c=s.util.sizeFromShape(u),d=ir({inputs:{x:i},backend:e,attrs:{shape:[-1,c]}});n.push(d);const p=Pr(e,d,r);n.push(p);const h=ir({inputs:{x:p},backend:e,attrs:{shape:l}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),h}return Lr(e,t,r)}const Br={kernelName:s.ArgMax,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:o}=r;let i=s.util.parseAxisParam(o,a.shape);const l=s.backend_util.getAxesPermutation(i,a.shape.length);let u=a;const c=[];null!=l&&(u=yr({inputs:{x:a},backend:n,attrs:{perm:l}}),c.push(u),i=s.backend_util.getInnerMostAxes(i.length,u.shape.length)),s.backend_util.assertAxesAreInnerMostDims("argMax",[i[0]],u.shape.length);const d=zr(n,u,i[0],"max");return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}};const Vr={kernelName:s.ArgMin,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:o}=r;let i=s.util.parseAxisParam(o,a.shape);const l=s.backend_util.getAxesPermutation(i,a.shape.length);let u=a;const c=[];null!=l&&(u=yr({inputs:{x:a},backend:n,attrs:{perm:l}}),c.push(u),i=s.backend_util.getInnerMostAxes(i.length,u.shape.length)),s.backend_util.assertAxesAreInnerMostDims("argMin",[i[0]],u.shape.length);const d=zr(n,u,i[0],"min");return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},Wr=Zn({opSnippet:wn+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),Ur={kernelName:s.Asin,backendName:"webgl",kernelFunc:Wr},Gr=Zn({opSnippet:wn+"return log(x + sqrt(x * x + 1.0));"}),jr={kernelName:s.Asinh,backendName:"webgl",kernelFunc:Gr},Hr=Zn({opSnippet:wn+"\n  return atan(x);\n"}),Yr={kernelName:s.Atan,backendName:"webgl",kernelFunc:Hr},qr=Qn({opSnippet:Mn+"\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+Ln+"\n  return result;\n"}),Kr={kernelName:s.Atan2,backendName:"webgl",kernelFunc:qr},Xr=Zn({opSnippet:wn+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),Zr={kernelName:s.Atanh,backendName:"webgl",kernelFunc:Xr};class Qr{constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,o=e.strideHeight,i=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=e.padInfo.top,h=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${o}, ${i});\n        const ivec2 pads = ivec2(${p}, ${h});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d};\n                wC += ${u}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?a?m:g:`wR * ${d} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(b="avgValue / max(count, 1.0)");const v=4*Math.floor(s/4),x=s%4,k=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${o}, ${i});\n      const ivec2 pads = ivec2(${p}, ${h});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${v}; wC += 4) {\n            int xC = xCCorner + wC * ${u};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              getValue(batch, xR, xC + 3 * ${u}, d)\n            );\n\n            ${k}\n          }\n\n          int xC = xCCorner + ${v};\n          if (${1===x}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${k}\n          } else if (${2===x}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${k}\n          } else if (${3===x}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              initializationValue\n            );\n\n            ${k}\n          }\n        }\n        setOutput(${b});\n      }\n    `}}class Jr{constructor(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,o=e.strideDepth,i=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,c=e.dilationHeight,d=e.dilationWidth,p=e.effectiveFilterDepth,h=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;const b="avg"===t;let v="0.0";if(b||(v="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${o}, ${i}, ${l});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${p};\n              wD += ${u}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${h};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${d}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?a?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${h} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let x=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(x="avgValue / max(count, 1.0)");const k=4*Math.floor(s/4),w=s%4,S=`\n      if (${b}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${o}, ${i}, ${l});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${v};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${v});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${p};\n            wD += ${u}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${k}; wC += 4) {\n              int xC = xCCorner + wC * ${d};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${d}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${d}, ch)\n              );\n\n              ${S}\n            }\n\n            int xC = xCCorner + ${k};\n            if (${1===w}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${S}\n            } else if (${2===w}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${S}\n            } else if (${3===w}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${d}, ch),\n                initializationValue\n              );\n\n              ${S}\n            }\n          }\n        }\n        setOutput(${x});\n      }\n    `}}const ea={kernelName:s.AvgPool,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;fe(a,"avgPool");const{filterSize:o,strides:i,pad:l,dimRoundingMode:u}=r;s.util.assert(s.backend_util.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const c=s.backend_util.computePool2DInfo(a.shape,o,i,1,l,u);if(1===c.filterWidth&&1===c.filterHeight&&s.util.arraysEqual(c.inShape,c.outShape))return Bn({inputs:{x:a},backend:n});const d=new Qr(c,"avg",!1);return n.runWebGLProgram(d,[a],"float32")}};const ta={kernelName:s.AvgPool3D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:o,strides:i,pad:l,dimRoundingMode:u,dataFormat:c}=r,d=s.backend_util.computePool3DInfo(a.shape,o,i,[1,1,1],l,u,c),p=new Jr(d,"avg",!1);return n.runWebGLProgram(p,[a],"float32")}};class na{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=i-1-e.padInfo.top,c=l-1-e.padInfo.left,d=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${u}, ${c});\n      const float avgMultiplier = float(${d});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${i};\n            wR += ${s}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${l};\n            wC+= ${o}) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class ra{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterDepth,d=e.effectiveFilterHeight,p=e.effectiveFilterWidth,h=c-1-e.padInfo.front,f=d-1-e.padInfo.top,m=p-1-e.padInfo.left,g=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${h}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${i}) {\n          float dyD = float(dyDCorner + wD) / ${a}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${d};\n              wR += ${l}) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${p};\n                wC += ${u}) {\n              float dyC = float(dyCCorner + wC) / ${o}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const aa={kernelName:s.AvgPool3DGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:o}=t,i=o,{filterSize:l,strides:u,pad:c,dimRoundingMode:d}=r,p=s.backend_util.computePool3DInfo(i.shape,l,u,[1,1,1],c,d),h=new ra(p);return n.runWebGLProgram(h,[a],i.dtype)}};const sa={kernelName:s.AvgPoolGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:o}=t,i=o;fe([a,o],"avgPoolGrad");const{filterSize:l,strides:u,pad:c}=r,d=s.backend_util.computePool2DInfo(i.shape,l,u,1,c),p=new na(d);return n.runWebGLProgram(p,[a],i.dtype)}};const oa={kernelName:s.BatchMatMul,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:s}=t,{transposeA:o,transposeB:i}=r;return vr({a:a,b:s,transposeA:o,transposeB:i,backend:n})}};class ia{constructor(e,t,n,r,a,o){this.outputShape=[],this.variableNames=["x","mean","variance"],s.backend_util.assertAndGetBroadcastShape(e,t),s.backend_util.assertAndGetBroadcastShape(e,n);let i="0.0";null!=r&&(s.backend_util.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let l="1.0";null!=a&&(s.backend_util.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${l};\n        float inv = scale * inversesqrt(variance + float(${o}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class la{constructor(e,t,n,r,a,o){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],s.backend_util.assertAndGetBroadcastShape(e,t),s.backend_util.assertAndGetBroadcastShape(e,n);let i="vec4(0.0)";null!=r&&(s.backend_util.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let l="vec4(1.0)";null!=a&&(s.backend_util.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${l};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${o}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const ua={kernelName:s.FusedBatchNorm,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e;const{x:a,mean:o,variance:i,offset:l,scale:u}=t;s.util.assert(o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),s.util.assert(null==l||o.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),s.util.assert(null==u||o.shape.length===u.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:c}=r;null==c&&(c=.001);const d=[a,o,i];let p=null;null!=l&&(p=l.shape,d.push(l));let h=null;null!=u&&(h=u.shape,d.push(u));const f=(0,s.env)().getBool("WEBGL_PACK_NORMALIZATION")?new la(a.shape,o.shape,i.shape,p,h,c):new ia(a.shape,o.shape,i.shape,p,h,c);return n.runWebGLProgram(f,d,d[0].dtype)}};class ca{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=Fe(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return da.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let r;r=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${da[t]} = start[${t}] + coords.${da[t]};`)).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${r}\n        setOutput(getSource(${n}));\n      }\n    `}}const da=["x","y","z","w","u","v"];class pa{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=Fe(this.rank),n=fn("coords",this.rank),r=fn("sourceLoc",this.rank),a=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,s=`getChannel(getSource(${r.join()}), ${a})`,o=`\n      result.x = ${s};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${s};\n        --${r[this.rank-1]};\n      }\n    `,i=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${s};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${s};\n        }\n      }\n    `,l=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${l}\n        vec4 result = vec4(0.);\n        ${o}\n        ${i}\n        setOutput(result);\n      }\n    `}}function ha(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:o,size:i}=r,[l,u]=s.slice_util.parseSliceParams(a,o,i);if(s.slice_util.assertParamsValid(a,l,u),0===s.util.sizeFromShape(u))return n.makeTensorInfo(u,a.dtype,[]);if(n.shouldExecuteOnCPU([a])||"string"===a.dtype){const e=n.texData.get(a.dataId),t=Zt(e.values,l,u,a.shape,a.dtype);return n.makeTensorInfo(u,a.dtype,t)}const{isPacked:c}=n.texData.get(a.dataId),d=s.slice_util.isSliceContinous(a.shape,l,u);if(c||!d){const e=(0,s.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new pa(u):new ca(u),t=[l];return n.runWebGLProgram(e,[a],a.dtype,t)}return n.uploadToGPU(a.dataId),function(e,t,n,r){const a=r.texData.get(e.dataId),o=r.makeTensorInfo(n,e.dtype),i=r.texData.get(o.dataId);Object.assign(i,a),i.refCount=1,i.shape=n,i.dtype=e.dtype;let l=s.slice_util.computeFlatOffset(t,s.util.computeStrides(e.shape));a.slice&&(l+=a.slice.flatOffset),i.slice={flatOffset:l,origDataId:a.slice&&a.slice.origDataId||e.dataId};const u=r.dataRefCount.get(i.slice.origDataId)||1;return r.dataRefCount.set(i.slice.origDataId,u+1),o}(a,l,u,n)}const fa={kernelName:s.Slice,backendName:"webgl",kernelFunc:ha},ma={kernelName:s.BatchToSpaceND,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:o,crops:i}=r;s.util.assert(a.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const l=o.reduce(((e,t)=>e*t)),u=s.backend_util.getReshaped(a.shape,o,l),c=s.backend_util.getPermuted(u.length,o.length),d=s.backend_util.getReshapedPermuted(a.shape,o,l),p=s.backend_util.getSliceBeginCoords(i,o.length),h=s.backend_util.getSliceSize(d,i,o.length),f=[],m=ir({inputs:{x:a},backend:n,attrs:{shape:u}}),g=yr({inputs:{x:m},backend:n,attrs:{perm:c}}),y=ir({inputs:{x:g},backend:n,attrs:{shape:d}}),b=ha({inputs:{x:y},backend:n,attrs:{begin:p,size:h}});return f.push(m),f.push(g),f.push(y),f.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}};const ga={kernelName:s.Bincount,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:o}=r,i=n.readSync(a.dataId),l=n.readSync(s.dataId),u=bt(i,l,s.dtype,s.shape,o);return n.makeTensorInfo([o],s.dtype,u)}};const ya={kernelName:s.BitwiseAnd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{a:r,b:a}=t,o=(0,s.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS"),i=(0,s.env)().getNumber("WEBGL_VERSION");if(n.shouldExecuteOnCPU([r,a])||1===i){const e=n.texData.get(r.dataId).values,t=n.texData.get(a.dataId).values,[s,o]=xt(r.shape,a.shape,e,t,r.dtype),i=n.makeTensorInfo(o,r.dtype);return n.texData.get(i.dataId).values=s,i}let l;return l=o?new zn("\n  int r = int(a.r) & int(b.r);\n  int g = int(a.g) & int(b.g);\n  int rb = int(a.b) & int(b.b);\n  int ra = int(a.a) & int(b.a);\n  return vec4(r, g, rb, ra);\n",r.shape,a.shape,!1):new Pn("\n  return float(int(a.r) & int(b.r));\n",r.shape,a.shape),n.runWebGLProgram(l,[r,a],r.dtype)}};const ba={kernelName:s.BroadcastArgs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:a}=t,o=n.readSync(r.dataId),i=n.readSync(a.dataId),l=s.backend_util.assertAndGetBroadcastShape(Array.from(o),Array.from(i));return n.makeTensorInfo([l.length],"int32",Int32Array.from(l))}},va=Qn({opSnippet:"return float(a != b);",cpuKernelImpl:Vt,dtype:"bool"}),xa={kernelName:s.NotEqual,backendName:"webgl",kernelFunc:va};function ka(e){const{inputs:t,backend:n}=e,{input:r}=t;return Bn({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const wa={kernelName:s.Real,backendName:"webgl",kernelFunc:ka};const Sa={kernelName:s.Cast,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r,attrs:a}=t,{x:o}=n,{dtype:i}=a;if("complex64"===i){if("complex64"===o.dtype)return Bn({inputs:{x:o},backend:r});const t=s.zeros(o.shape),n=e({inputs:{x:o},backend:r,attrs:{dtype:"float32"}}),a=Wn({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeIntermediateTensorInfo(n),a}if("complex64"===o.dtype){const t=ka({inputs:{input:o},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:i}});return r.disposeIntermediateTensorInfo(t),n}if(!s.util.hasEncodingLoss(o.dtype,i)){const e=Bn({inputs:{x:o},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:i}}if(r.shouldExecuteOnCPU([o])){const e=r.texData.get(o.dataId).values,[t,n,a]=kt(e,o.shape,o.dtype,i);return r.makeTensorInfo(t,n,a)}if("int32"===i)return function(e,t){const n=new kn(e.shape,"return float(int(x));"),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(o,r);if("bool"===i){const e=r.makeTensorInfo([],"bool",s.util.getTypedArrayFromDType("bool",1)),t=va({inputs:{a:o,b:e},backend:r});return r.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${o.dtype} to ${i}`)}},Ta="return ceil(x);",Na=Zn({opSnippet:Ta,packedOpSnippet:Ta,cpuKernelImpl:wt}),Ia={kernelName:s.Ceil,backendName:"webgl",kernelFunc:Na};class Ca{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class Ea{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const $a={kernelName:s.ClipByValue,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{clipValueMin:o,clipValueMax:i}=r;let l;l=(0,s.env)().getBool("WEBGL_PACK_CLIP")?new Ea(a.shape):new Ca(a.shape);const u=[[o],[i]];return n.runWebGLProgram(l,[a],a.dtype,u)}};class Aa{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function _a(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const Ra={kernelName:s.ComplexAbs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=n.texData.get(r.dataId),s=new Aa(r.shape),o=[_a(r,a.complexTensorInfos.real),_a(r,a.complexTensorInfos.imag)];return n.runWebGLProgram(s,o,o[0].dtype)}};class Fa{constructor(e){this.outputShape=[],this.outputShape=s.backend_util.computeOutShape(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let s=1;s<t.length;s++)t[s]=t[s-1]+e[s][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let s=1;s<t.length;s++){const e=t[s-1];n.push(`else if (yC < ${t[s]}) setOutput(getT${s}(yR, yC-${e}));`)}const r=t.length,a=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${a}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class Oa{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=s.backend_util.computeOutShape(e,t);const n=this.outputShape,r=n.length,a=Fe(r),o=fn("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map(((e,t)=>`T${t}`));const l=new Array(e.length-1);l[0]=e[0][t];for(let s=1;s<l.length;s++)l[s]=l[s-1]+e[s][t];const u=i[t],c=i.slice(-2),d=i.join();let p=`if (${u} < ${l[0]}) {\n        return getChannel(\n            getT0(${d}), vec2(${c.join()}));\n        }`;for(let s=1;s<l.length;s++){const e=l[s-1];p+=`\n        if (${u} < ${l[s]}  && ${u} >= ${l[s-1]}) {\n          return getChannel(\n            getT${s}(${Da(i,u,e)}),\n            vec2(${Da(c,u,e)}));\n        }`}const h=l.length,f=l[l.length-1];p+=`\n        return getChannel(\n          getT${h}(${Da(i,u,f)}),\n          vec2(${Da(c,u,f)}));`,this.userCode=`\n      float getValue(${i.map((e=>"int "+e))}) {\n        ${p}\n      }\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${o}), 0., 0., 0.);\n\n        ${o[r-1]} = ${o[r-1]} + 1;\n        if (${o[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${o});\n        }\n\n        ${o[r-2]} = ${o[r-2]} + 1;\n        if (${o[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${o});\n        }\n\n        ${o[r-1]} = ${o[r-1]} - 1;\n        if (${o[r-2]} < ${n[r-2]} &&\n            ${o[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${o});\n        }\n        setOutput(result);\n      }\n    `}}function Da(e,t,n){const r=e.indexOf(t);return e.map(((e,t)=>t===r?`${e} - ${n}`:e)).join()}function Ma(e){const{inputs:t,backend:n}=e,{input:r}=t;return Bn({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const Pa={kernelName:s.Imag,backendName:"webgl",kernelFunc:Ma};function La(e,t,n){const r=e[0].dtype;if("complex64"===r){const r=e.map((e=>ka({inputs:{input:e},backend:n}))),a=e.map((e=>Ma({inputs:{input:e},backend:n}))),s=La(r,t,n),o=La(a,t,n),i=Wn({inputs:{real:s,imag:o},backend:n});return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),a.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(o),i}let a=n.shouldExecuteOnCPU(e);if("string"===r&&(a=!0),a){const a=e.map((e=>{const r=s.util.sizeFromShape(e.shape.slice(t));return ir({inputs:{x:e},backend:n,attrs:{shape:[-1,r]}})})),o=a.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),i=s.backend_util.computeOutShape(a.map((e=>e.shape)),1),l=1===a[0].shape[0],u=St(o,i,r,l),c=s.backend_util.computeOutShape(e.map((e=>e.shape)),t),d=n.makeTensorInfo(c,r,u);return a.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}const o=e.filter((e=>s.util.sizeFromShape(e.shape)>0)),i=(0,s.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&o[0].shape.length>1;if(1===o.length){const t=i?new kn(e[0].shape,In):new Cn(e[0].shape,In);return n.runWebGLProgram(t,e,r)}const l=(0,s.env)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(o.length>l){const e=[];for(let a=0;a<o.length;a+=l){const r=o.slice(a,a+l);e.push(La(r,t,n))}const r=La(e,t,n);for(const t of e)n.disposeIntermediateTensorInfo(t);return r}if(i){const e=new Oa(o.map((e=>e.shape)),t);return n.runWebGLProgram(e,o,r)}const{tensors2D:u,outShape:c}=function(e,t,n){const r=s.backend_util.computeOutShape(e.map((e=>e.shape)),t),a=e.map((e=>ir({inputs:{x:e},attrs:{shape:[-1,s.util.sizeFromShape(e.shape.slice(t))]},backend:n})));return{tensors2D:a,outShape:r}}(o,t,n),d=new Fa(u.map((e=>e.shape))),p=n.runWebGLProgram(d,u,r);u.forEach((e=>n.disposeIntermediateTensorInfo(e)));const h=ir({inputs:{x:p},attrs:{shape:c},backend:n});return n.disposeIntermediateTensorInfo(p),h}function za(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,o=s.util.parseAxisParam(a,t[0].shape)[0],i=t.map((e=>e.shape));s.backend_util.assertParamsConsistent(i,o);const l=s.backend_util.computeOutShape(t.map((e=>e.shape)),o);if(0===s.util.sizeFromShape(l))return n.makeTensorInfo(l,t[0].dtype,[]);const u=t.filter((e=>s.util.sizeFromShape(e.shape)>0));return 1===u.length?Bn({inputs:{x:u[0]},backend:n}):La(u,o,n)}const Ba={kernelName:s.Concat,backendName:"webgl",kernelFunc:za};class Va{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.outputShape=e.outShape;const s=e.padInfo.top,o=e.padInfo.left,i=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,d=e.filterHeight,p=e.filterWidth,h=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,b=m?3:1;let v="",x="";n&&(v=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,x="result = activation(result);");const k=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${v}\n\n      const ivec2 strides = ivec2(${i}, ${l});\n      const ivec2 pads = ivec2(${s}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${b}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${y}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${d}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${p}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${h}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${h}) *\n                    getW(wR, wC, ${h}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${h}, xR, xC) *\n                    getW(wR, wC, ${h}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${h}, d2),\n                getW(wR, wC, ${h} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${h}),\n                  getX(batch, xR, xC, ${h} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${h}, xR, xC),\n                  getX(batch, ${h} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${h}, d2),\n                getW(wR, wC, ${h} + 1, d2),\n                getW(wR, wC, ${h} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${h}),\n                  getX(batch, xR, xC, ${h} + 1),\n                  getX(batch, xR, xC, ${h} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${h}, xR, xC),\n                  getX(batch, ${h} + 1, xR, xC),\n                  getX(batch, ${h} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${k}\n        ${x}\n        setOutput(result);\n      }\n    `}}class Wa{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,a=e.strideDepth,s=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.filterDepth,d=e.filterHeight,p=e.filterWidth,h=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${a}, ${s}, ${o});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${i};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${d}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${p}; wC++) {\n              int xC = xCCorner + wC * ${u};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${h}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${h}) *\n                  getW(wF, wR, wC, ${h}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${h}),\n                  getX(batch, xF, xR, xC, ${h} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${h}, d2),\n                  getW(wF, wR, wC, ${h} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${h}),\n                  getX(batch, xF, xR, xC, ${h} + 1),\n                  getX(batch, xF, xR, xC, ${h} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${h}, d2),\n                  getW(wF, wR, wC, ${h} + 1, d2),\n                  getW(wF, wR, wC, ${h} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Ua{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=ze(this.outputShape.length);const o=e.padInfo.left,i=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,c=e.filterWidth,d=c;let p="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let s=0;s<c;s++)p+=`\n           vec4 xTexelC${2*s};\n           int xTexelC${2*s}Ready;\n           vec4 xTexelC${2*s+1};\n           int xTexelC${2*s+1}Ready;\n           vec4 xC${s};`;p+=`\n     for (int r = 0; r < ${u}; r++) {\n      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {\n       `;for(let s=0;s<c;s++)p+=`\n           xTexelC${2*s} = vec4(0.0);\n           xTexelC${2*s}Ready = 0;\n           xTexelC${2*s+1} = vec4(0.0);\n           xTexelC${2*s+1}Ready = 0;\n           xC${s} = vec4(0.0);`;p+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let g=0;g<(d+1)/2;g++){const t=2*g;if(p+=`\n           xC = xCCorner + ${t*l};\n           `,1===i){if(t<c&&(o%2===1?(p+=`\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n               `,p+=1===l&&t>0?`\n                 xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                 `:`\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                   } else {\n                     xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                   }\n                   `):p+=`\n                 if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n\n                 xC${t} = xTexelC${t};\n                 `,t+1<c)){const e=o%2===0?s.util.nearestLargerEven(l):l;l%2===0&&o%2===1||l%2!==0&&o%2!==1?(p+=`\n                   xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                     xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC${t+1}.zw = vec2(0.0);\n                     }\n                     xTexelC${t+1}Ready = 1;\n                   }\n                   `,p+=l>1?`\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC${t+1} = vec4(previous.zw, xTexelC${t+1}.xy);\n                     } else {\n                      xC${t+1} = vec4(0.0, 0.0, xTexelC${t+1}.xy);\n                     }\n                     `:`\n                     xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                     `):p+=1===e?`\n                     xC${t+1} = xTexelC${t};\n                     `:`\n                     xCOffset = xC + ${e};\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                       xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC${t+1}.zw = vec2(0.0);\n                       }\n                       xTexelC${t+1}Ready = 1;\n                     }\n\n                     xC${t+1} = xTexelC${t+1};\n                     `}}else t<c&&(o%2===1?(p+=`\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                   xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC${t+1}.zw = vec2(0.0);\n                   }\n                   xTexelC${t+1}Ready = 1;\n                 }\n\n                 xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n               `,t+1<c&&(p+=`\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                 `)):(p+=`\n                 if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                   xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${t+1}.zw = vec2(0.);\n                   }\n                   xTexelC${t+1}Ready = 1;\n                 }\n\n                 xC${t} = vec4(\n                   xTexelC${t}.xy, xTexelC${t+1}.xy);\n               `,t+1<c&&(p+=`\n                   xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                 `)));t<c&&(p+=`\n             wTexel = getW(r, ${t}, d1, d2);\n             dotProd += xC${t}.xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ${e.inChannels}) {\n               dotProd += xC${t}.yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           `,t+1<c&&(p+=`\n               wTexel = getW(r, ${t+1}, d1, d2);\n               dotProd += xC${t+1}.xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ${e.inChannels}) {\n                 dotProd += xC${t+1}.yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             `))}p+="\n     }\n   ",p+="\n     }\n   ",p+="\n     }\n   ";let h="",f="";n&&(h=r?`vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ${n}\n         }`:a?`vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ${n}\n         }`:`vec4 activation(vec4 x) {\n           ${n}\n         }`,f="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n       ${h}\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ${p}\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ${m}\n         ${f}\n         setOutput(result);\n       }\n     `}}class Ga{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=ze(this.outputShape.length);const{dataFormat:n}=t,r=ge(),a="channelsLast"===n,s=a?1:2,o=a?2:3,i=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let l="";for(let u=0;u<=1;u++)for(let e=0;e<=1;e++)l+=`\n          blockIndex = rc.z + ${e};\n          pos = rc.y + ${u};\n\n          ${i}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${s}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${o}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${a}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*u+e}] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*u+e}] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${l}\n\n        ${r.output} = result;\n      }\n    `}}function ja(e,t){const n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function Ha(e){let{x:t,filter:n,convInfo:r,backend:a,bias:o=null,preluActivationWeights:i=null,leakyreluAlpha:l=0,activation:u=null}=e;const c=t.shape,d=a.texData.get(t.dataId),p=r.inChannels,h=c[0]*c[1]*c[2],f=r.outChannels,m="channelsLast"===r.dataFormat,g=!1;let y;const b=[];if(null!=i){const e=ja(i.shape,m);null!=e&&(i=ir({inputs:{x:i},backend:a,attrs:{shape:e}}),b.push(i))}if(null!=o){const e=ja(o.shape,m);null!=e&&(o=ir({inputs:{x:o},backend:a,attrs:{shape:e}}),b.push(o))}if(!((1===h||1===f)&&p>1e3)&&d.isPacked&&m&&null!=d.texture&&c[2]%2!==0&&s.util.arraysEqual(d.shape.slice(-3),c.slice(-3))){const e=c[0]*c[1]*(c[2]+1),p={dataId:t.dataId,shape:[1,e,r.inChannels],dtype:t.dtype},h=d.shape;d.shape=d.shape.slice(),d.shape[d.shape.length-2]++,s.util.assert(ee(d.shape,p.shape),(()=>`packed reshape ${d.shape} to ${p.shape} isn't free`));const f=ir({inputs:{x:n},backend:a,attrs:{shape:[1,r.inChannels,r.outChannels]}});b.push(f);const m=vr({a:p,b:f,backend:a,transposeA:false,transposeB:g,bias:o,activation:u,preluActivationWeights:i,leakyreluAlpha:l}),v=a.texData.get(m.dataId);s.util.assert(v.isPacked,(()=>"batchMatMul result is expected to be packed")),d.shape=h,v.shape=r.outShape,y=Bn({inputs:{x:m},backend:a}),y.shape=r.outShape,b.push(m)}else{const e=r.outHeight*r.outWidth,s=ir({inputs:{x:t},backend:a,attrs:{shape:m?[r.batchSize,e,r.inChannels]:[r.batchSize,r.inChannels,e]}}),c=ir({inputs:{x:n},backend:a,attrs:{shape:[1,r.inChannels,r.outChannels]}}),d=vr({a:m?s:c,b:m?c:s,transposeA:!m,transposeB:g,backend:a,bias:o,activation:u,preluActivationWeights:i,leakyreluAlpha:l});y=ir({inputs:{x:d},backend:a,attrs:{shape:r.outShape}}),b.push(s),b.push(c),b.push(d)}for(const s of b)a.disposeIntermediateTensorInfo(s);return y}function Ya(e){let{x:t,filter:n,convInfo:r,backend:a,bias:o=null,preluActivationWeights:i=null,leakyreluAlpha:l=0,activation:u=null}=e;const{filterWidth:c,filterHeight:d,inChannels:p,outWidth:h,outHeight:f,dataFormat:m}=r,g="channelsLast"===m,y=c*d*p,b=f*h,v=[r.batchSize,y,b],x=[];if(null!=i){const e=ja(i.shape,g);null!=e&&(i=ir({inputs:{x:i},backend:a,attrs:{shape:e}}),x.push(i))}if(null!=o){const e=ja(o.shape,g);null!=e&&(o=ir({inputs:{x:o},backend:a,attrs:{shape:e}}),x.push(o))}const k=ir({inputs:{x:n},backend:a,attrs:{shape:[1,y,s.util.sizeFromShape(n.shape)/y]}});x.push(k);const w=new Ga(v,r),S=[t.shape,[r.padInfo.top,r.padInfo.left],[r.strideHeight,r.strideWidth],[r.dilationHeight,r.dilationWidth],[r.inChannels],[r.filterWidth*r.inChannels],[r.outWidth]],T=a.runWebGLProgram(w,[t],"float32",S),N=ir({inputs:{x:T},backend:a,attrs:{shape:v}});x.push(T),x.push(N);const I=null!=o,C=null!=i,E="leakyrelu"===u,$=u?Jn(u,!0):null,A=new er(g?N.shape:k.shape,g?k.shape:N.shape,g?[r.batchSize,b,r.outChannels]:[r.batchSize,r.outChannels,b],!0,!1,I,$,C,E),_=g?[N,k]:[k,N];if(o&&_.push(o),C&&_.push(i),E){const e=a.makeTensorInfo([],"float32",s.util.createScalarValue(l,"float32"));_.push(e),x.push(e)}const R=a.runWebGLProgram(A,_,"float32"),F=ir({inputs:{x:R},backend:a,attrs:{shape:r.outShape}});x.push(R);for(const s of x)a.disposeIntermediateTensorInfo(s);return F}const qa={kernelName:s.Conv2D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:o}=t,{strides:i,pad:l,dataFormat:u,dilations:c,dimRoundingMode:d}=r,p=s.backend_util.convertConv2DDataFormat(u),h=s.backend_util.computeConv2DInfo(a.shape,o.shape,i,c,l,d,!1,p);let f;if(1!==h.filterHeight||1!==h.filterWidth||1!==h.dilationHeight||1!==h.dilationWidth||1!==h.strideHeight||1!==h.strideWidth||"SAME"!==h.padInfo.type&&"VALID"!==h.padInfo.type)if(h.strideWidth<=2&&"channelsLast"===p&&(0,s.env)().getBool("WEBGL_EXP_CONV")){const e=new Ua(h),t=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];f=n.runWebGLProgram(e,[a,o],"float32",t)}else if((0,s.env)().getBool("WEBGL_CONV_IM2COL"))f=Ya({x:a,filter:o,convInfo:h,backend:n});else{const e=new Va(h);f=n.runWebGLProgram(e,[a,o],"float32")}else f=Ha({x:a,filter:o,convInfo:h,backend:n});const m=ir({inputs:{x:f},backend:n,attrs:{shape:h.outShape}});return n.disposeIntermediateTensorInfo(f),m}};class Ka{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              ${s?"float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);":"float dyValue = getDy(b, d2, yR, yC);\n              float xValue = getX(b, d1, xR, xC);\n              dotProd += (xValue * dyValue);"}\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Xa{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s="channelsLast"===e.dataFormat,o=t-1-e.padInfo.top,i=n-1-e.padInfo.left,l=s?1:2,u=s?2:3,c=s?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${o}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${s}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Za{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.padInfo.front,s=e.padInfo.top,o=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${a};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${s};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${o};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Qa{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,o=e.strideWidth,i=t-1-e.padInfo.front,l=n-1-e.padInfo.top,u=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${i}, ${l}, ${u});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${a}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${o}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const Ja={kernelName:s.Conv2DBackpropFilter,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:o}=t,{strides:i,pad:l,dataFormat:u,dimRoundingMode:c,filterShape:d}=r,p=s.backend_util.convertConv2DDataFormat(u),h=s.backend_util.computeConv2DInfo(a.shape,d,i,1,l,c,!1,p),f=new Ka(h);return n.runWebGLProgram(f,[a,o],"float32")}};class es{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=ze(this.outputShape.length);const t=e.filterHeight,n=e.filterWidth,r=t-1-e.padInfo.top,a=n-1-e.padInfo.left;this.userCode=`\n      const ivec2 pads = ivec2(${r}, ${a});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n\n        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        vec4 result = vec4(0.);\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / strides[0];\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            int wCPerm = ${n} - 1 - wC;\n\n            float dyC = float(dyCCorner + wC) / strides[1];\n            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)\n              && (fract(dyC) == 0.0);\n            int idyC = int(dyC);\n\n            float dyC2 = float(dyCCorner + wC + 1) / strides[1];\n            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)\n              && (fract(dyC2) == 0.0);\n            int idyC2 = int(dyC2);\n\n            if (idyCVal && idyCVal2) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?\n                  dySample : getDy(batch, idyR, idyC2, d2);\n\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n\n                dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample2.xy : dySample2.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal2) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC2, d2);\n                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            }\n          }\n        }\n        setOutput(result);\n      }\n    `}}const ts={kernelName:s.Conv2DBackpropInput,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:o}=t,{inputShape:i,strides:l,pad:u,dataFormat:c,dimRoundingMode:d}=r,p=s.backend_util.convertConv2DDataFormat(c),h=s.backend_util.computeConv2DInfo(i,o.shape,l,1,u,d,!1,p);if((0,s.env)().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&"channelsLast"===p){const e=[[h.strideHeight,h.strideWidth]],t=new es(h);return n.runWebGLProgram(t,[a,o],"float32",e)}{const e=new Xa(h);return n.runWebGLProgram(e,[a,o],"float32")}}};const ns={kernelName:s.Conv3D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:o}=t,{strides:i,pad:l,dilations:u}=r,c=s.backend_util.computeConv3DInfo(a.shape,o.shape,i,u,l),d=new Wa(c);return n.runWebGLProgram(d,[a,o],"float32")}};const rs={kernelName:s.Conv3DBackpropFilterV2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:o}=t,{strides:i,pad:l,filterShape:u}=r,c=s.backend_util.computeConv3DInfo(a.shape,u,i,1,l),d=new Za(c);return n.runWebGLProgram(d,[a,o],"float32")}};const as={kernelName:s.Conv3DBackpropInputV2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:o}=t,{pad:i,strides:l,inputShape:u}=r,c=s.backend_util.computeConv3DInfo(u,o.shape,l,1,i),d=new Qa(c);return n.runWebGLProgram(d,[a,o],"float32")}},ss=Zn({opSnippet:Xn+"\n  return cos(x);\n",packedOpSnippet:`\n  vec4 result = cos(x);\n  bvec4 isNaN = isnan(x);\n  ${Ln}\n  return result;\n`}),os={kernelName:s.Cos,backendName:"webgl",kernelFunc:ss},is=Zn({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),ls={kernelName:s.Cosh,backendName:"webgl",kernelFunc:is};class us{constructor(e,t,n,r,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[s,o,i,l]=e,[u]=t,[c,d]=n;this.outputShape=[u,c,d,l];const p="bilinear"===r?1:0,[h,f]=[o-1+".0",i-1+".0"],[m,g,y]=c>1?[""+(o-1)/(c-1),"(y2-y1) * height_ratio",`y1*${h} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${h}`],[b,v,x]=d>1?[""+(i-1)/(d-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${b});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${s}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${v};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${h} ) {\n          setOutput(float(${a}));\n          return;\n        }\n        float in_x = ${x};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${a}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${p} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const cs={kernelName:s.CropAndResize,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:o}=t,{cropSize:i,method:l,extrapolationValue:u}=r,c=new us(a.shape,s.shape,i,l,u);return n.runWebGLProgram(c,[a,s,o],"float32")}};var ds;!function(e){e.Prod="*",e.Sum="+"}(ds||(ds={}));class ps{constructor(e,t,n,r){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const a=this.outputShape.length,s=this.op===ds.Prod?"1.0":"0.0",o=n?s:`getX(${hs(a,"coords",this.op)})`,i=this.outputShape[this.outputShape.length-1];let l="",u="";n?(l=r?"end != "+(i-1):"end != 0",u=r?"end + 1":"end - 1"):(l=r?`end + pow2 < ${i}`:"end >= pow2",u=r?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${Fe(a)} coords = getOutputCoords();\n        int end = ${fs(a,"coords",this.op)};\n        float val = ${o};\n        int pow2 = int(pow(2.0, index));\n        if (${l}) {\n          int idx = ${u};\n          ${fs(a,"coords",this.op)} = idx;\n          val ${this.op}= getX(${hs(a,"coords",this.op)});\n        }\n        setOutput(val);\n      }\n    `}}function hs(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function fs(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function ms(e,t,n,r,a,o){const i=t.shape.length,l=s.backend_util.getAxesPermutation([r],i);let u=t;null!=l&&(u=yr({inputs:{x:t},backend:n,attrs:{perm:l}}));const c=s.backend_util.getInnerMostAxes(1,i)[0];if(c!==i-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${r}`);const d=u.shape[c];let p=Bn({inputs:{x:u},backend:n});for(let s=0;s<=Math.ceil(Math.log2(d))-1;s++){const t=new ps(e,u.shape,!1,o),r=[[s]],a=p;p=n.runWebGLProgram(t,[p],p.dtype,r),n.disposeIntermediateTensorInfo(a)}if(a){const t=new ps(e,u.shape,a,o),r=p;p=n.runWebGLProgram(t,[p],p.dtype),n.disposeIntermediateTensorInfo(r)}if(null!=l){const e=yr({inputs:{x:p},backend:n,attrs:{perm:s.backend_util.getUndoAxesPermutation(l)}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(u),e}return p}const gs={kernelName:s.Cumprod,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:o,reverse:i}=r;return ms(ds.Prod,a,n,s,o,i)}};const ys={kernelName:s.Cumsum,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:o,reverse:i}=r;return ms(ds.Sum,a,n,s,o,i)}};const bs={kernelName:s.DenseBincount,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:o,binaryOutput:i}=r;if(1===a.shape.length){const e=n.readSync(a.dataId),t=n.readSync(s.dataId),r=bt(e,t,s.dtype,s.shape,o);return n.makeTensorInfo([o],s.dtype,r)}if(2===a.shape.length){const e=n.bufferSync(a),t=n.bufferSync(s),r=vt(e,t,o,i);return n.makeTensorInfo(r.shape,s.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}};class vs{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const xs={kernelName:s.DepthToSpace,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:o}=r,i=a.shape[0],l=("NHWC"===o?a.shape[1]:a.shape[2])*s,u=("NHWC"===o?a.shape[2]:a.shape[3])*s,c=("NHWC"===o?a.shape[3]:a.shape[1])/(s*s),d=new vs("NHWC"===o?[i,l,u,c]:[i,c,l,u],s,o);return n.runWebGLProgram(d,[a],a.dtype)}};class ks{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=ze(this.outputShape.length);const s=e.filterHeight,o=e.filterWidth,i=e.outChannels/e.inChannels;let l="",u="";n&&(l=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,u="result = activation(result);");const c=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${l}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${i};\n        int q = d2 - d1 * ${i};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${s}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${o}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${c}\n        ${u}\n        setOutput(result);\n      }\n    `}}class ws{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=ze(this.outputShape.length);const o=e.outChannels/e.inChannels,i=e.padInfo.left,l=e.strideWidth,u=e.dilationWidth,c=e.filterHeight,d=e.filterWidth,p=d;let h="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let s=0;s<d;s++)h+=`\n          vec4 xTexelC${2*s};\n          int xTexelC${2*s}Ready;\n          vec4 xTexelC${2*s+1};\n          int xTexelC${2*s+1}Ready;\n          vec4 xC${s};`;h+=`\n    for (int r = 0; r < ${c}; r++) {\n      `;for(let s=0;s<d;s++)h+=`\n          xTexelC${2*s} = vec4(0.0);\n          xTexelC${2*s}Ready = 0;\n          xTexelC${2*s+1} = vec4(0.0);\n          xTexelC${2*s+1}Ready = 0;\n          xC${s} = vec4(0.0);`;h+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let y=0;y<(p+1)/2;y++){const e=2*y;if(h+=`\n          xC = xCCorner + ${e*u};\n          `,1===l){if(e<d&&(i%2===1?(h+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n              `,h+=1===u&&e>0?`\n                xC${e} = vec4(xTexelC${e-2}.zw, xTexelC${e}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${e} = vec4(previous.zw, xTexelC${e}.xy);\n                  } else {\n                    xC${e} = vec4(0.0, 0.0, xTexelC${e}.xy);\n                  }\n                  `):h+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                xC${e} = xTexelC${e};\n                `,e+1<d)){const t=i%2===0?s.util.nearestLargerEven(u):u;u%2===0&&i%2===1||u%2!==0&&i%2!==1?(h+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${t};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                    xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${e+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${e+1}Ready = 1;\n                  }\n                  `,h+=u>1?`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC${e+1} = vec4(previous.zw, xTexelC${e+1}.xy);\n                    } else {\n                     xC${e+1} = vec4(0.0, 0.0, xTexelC${e+1}.xy);\n                    }\n                    `:`\n                    xC${e+1} = vec4(xTexelC${e}.zw, xTexelC${e+1}.xy);\n                    `):h+=1===t?`\n                    xC${e+1} = xTexelC${e};\n                    `:`\n                    xCOffset = xC + ${t};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                      xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${e+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${e+1}Ready = 1;\n                    }\n\n                    xC${e+1} = xTexelC${e+1};\n                    `}}else e<d&&(i%2===1?(h+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${e+1}Ready == 0) {\n                  xTexelC${e+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${e+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${e+1}Ready = 1;\n                }\n\n                xC${e} = vec4(xTexelC${e}.zw, xTexelC${e+1}.zw);\n              `,e+1<d&&(h+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${e+1} = vec4(xTexelC${e+1}.xy, final.xy);\n                `)):(h+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                  xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e+1}.zw = vec2(0.);\n                  }\n                  xTexelC${e+1}Ready = 1;\n                }\n\n                xC${e} = vec4(\n                  xTexelC${e}.xy, xTexelC${e+1}.xy);\n              `,e+1<d&&(h+=`\n                  xC${e+1} = vec4(xTexelC${e}.zw, xTexelC${e+1}.zw);\n                `)));e<d&&(h+=`\n            wTexel = getW(r, ${e}, d1, q);\n            dotProd += xC${e} * vec4(wTexel.xz, wTexel.xz);\n          `,e+1<d&&(h+=`\n              wTexel = getW(r, ${e+1}, d1, q);\n              dotProd += xC${e+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}h+="\n    }\n  ",h+="\n      }\n    ";let f="",m="";n&&(f=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,m="result = activation(result);");const g=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${f}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${h}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${g}\n        ${m}\n        setOutput(result);\n      }\n    `}}const Ss={kernelName:s.DepthwiseConv2dNative,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:o}=t,{strides:i,pad:l,dilations:u,dimRoundingMode:c}=r;let d=u;null==d&&(d=[1,1]),s.util.assert(s.backend_util.eitherStridesOrDilationsAreOne(i,d),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`));const p=s.backend_util.computeConv2DInfo(a.shape,o.shape,i,d,l,c,!0);let h;h=(0,s.env)().getBool("WEBGL_PACK_DEPTHWISECONV")&&p.strideWidth<=2&&p.outChannels/p.inChannels===1?new ws(p):new ks(p);const f=[[p.padInfo.top,p.padInfo.left],[p.strideHeight,p.strideWidth],[p.dilationHeight,p.dilationWidth],[p.inHeight,p.inWidth]];return n.runWebGLProgram(h,[a,o],"float32",f)}};class Ts{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${s} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Ns{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=t-1-e.padInfo.top,o=n-1-e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${i}; dm++) {\n              int d2 = d1 * ${i} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const Is={kernelName:s.DepthwiseConv2dNativeBackpropFilter,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:o}=t,{strides:i,dilations:l,pad:u,dimRoundingMode:c,filterShape:d}=r,p=s.backend_util.computeConv2DInfo(a.shape,d,i,l,u,c,!0),h=new Ts(p);return n.runWebGLProgram(h,[a,o],"float32")}};const Cs={kernelName:s.DepthwiseConv2dNativeBackpropInput,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:o}=t,{strides:i,dilations:l,pad:u,dimRoundingMode:c,inputShape:d}=r,p=s.backend_util.computeConv2DInfo(d,o.shape,i,l,u,c,!0),h=new Ns(p);return n.runWebGLProgram(h,[a,o],"float32")}};class Es{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const $s={kernelName:s.Diag,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=[...r.shape,...r.shape],o=s.util.sizeFromShape(r.shape),i=ir({inputs:{x:r},backend:n,attrs:{shape:[o]}}),l=new Es(o),u=n.runWebGLProgram(l,[i],i.dtype),c=ir({inputs:{x:u},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),c}};class As{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:a,strideWidth:s,filterHeight:o,filterWidth:i,dilationHeight:l,dilationWidth:u}=e,{top:c,left:d}=r;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${s});\n      const ivec2 pads = ivec2(${c}, ${d});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${o}; h++) {\n          int hIn = hBeg + h * ${l};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${i}; w++) {\n              int wIn = wBeg + w * ${u};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const _s={kernelName:s.Dilation2D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:o}=t,{strides:i,pad:l,dilations:u}=r,c=s.backend_util.computeDilation2DInfo(a.shape,o.shape,i,l,"NHWC",u);let d;const p=new As(c);d=n.runWebGLProgram(p,[a,o],"float32");const h=ir({inputs:{x:d},backend:n,attrs:{shape:c.outShape}});return n.disposeIntermediateTensorInfo(d),h}};const Rs={kernelName:s.Einsum,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,o=t,{allDims:i,summedDims:l,idDims:u}=s.backend_util.decodeEinsumEquation(a,o.length);s.backend_util.checkEinsumDimSizes(i.length,u,o);const{path:c,steps:d}=s.backend_util.getEinsumComputePath(l,u),p=d.length;let h=null,f=i.length;const m=[];for(let g=0;g<p;++g){for(const e of d[g]){const{permutationIndices:t,expandDims:r}=s.backend_util.getEinsumPermutation(f,u[e]);let a;s.backend_util.isIdentityPermutation(t)?a=o[e]:(a=yr({inputs:{x:o[e]},backend:n,attrs:{perm:t}}),m.push(a));const i=a.shape.slice();for(let e=0;e<r.length;++e)i.splice(r[e],0,1);s.util.arraysEqual(a.shape,i)||(a=ir({inputs:{x:a},backend:n,attrs:{shape:i}}),m.push(a)),null===h?h=a:(h=sr({inputs:{a:a,b:h},backend:n}),m.push(h))}g<p-1&&(c[g]>=0&&(h=mr({inputs:{x:h},backend:n,attrs:{axis:c[g]-(i.length-f),keepDims:!1}}),m.push(h)),f--)}for(const s of m)s!==h&&n.disposeIntermediateTensorInfo(s);return h}},Fs=Zn({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),Os={kernelName:s.Elu,backendName:"webgl",kernelFunc:Fs},Ds={kernelName:s.EluGrad,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:r,y:a}=t,o=(0,s.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new zn("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,a.shape):new Pn("return (b >= 0.0) ? a : a * (b + 1.0);",r.shape,a.shape);return n.runWebGLProgram(o,[r,a],r.dtype)}},Ms=Qn({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:Tt}),Ps={kernelName:s.Equal,backendName:"webgl",kernelFunc:Ms},Ls=Zn({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${s.backend_util.ERF_P};\n  float a1 = ${s.backend_util.ERF_A1};\n  float a2 = ${s.backend_util.ERF_A2};\n  float a3 = ${s.backend_util.ERF_A3};\n  float a4 = ${s.backend_util.ERF_A4};\n  float a5 = ${s.backend_util.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),zs={kernelName:s.Erf,backendName:"webgl",kernelFunc:Ls},Bs=Zn({opSnippet:Xn+"\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:Nt,dtype:"float32"}),Vs={kernelName:s.Exp,backendName:"webgl",kernelFunc:Bs};function Ws(e){const{inputs:t,attrs:n,backend:r}=e,{dim:a}=n,{input:o}=t,i=o.shape.length,l=o.shape.slice();let u=a;return a<0&&(s.util.assert(-(i+1)<=a,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),u=i+a+1),l.splice(u,0,1),ir({inputs:{x:o},backend:r,attrs:{shape:l}})}const Us={kernelName:s.ExpandDims,backendName:"webgl",kernelFunc:Ws},Gs="return exp(x) - 1.0;",js=Zn({opSnippet:Gs,packedOpSnippet:Gs,cpuKernelImpl:It}),Hs={kernelName:s.Expm1,backendName:"webgl",kernelFunc:js};class Ys{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const a=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,s=n?`${r}.0`:"1.0";let o;if("real"===e)o="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);o="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${a};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${o}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${s};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function qs(e,t,n){const r=n.texData.get(e.dataId),a=s.util.sizeFromShape(e.shape),o=e.shape[e.shape.length-1],i=ir({inputs:{x:e},backend:n,attrs:{shape:[a/o,o]}}),l=i.shape,u=new Ys("real",l,t),c=new Ys("imag",l,t),d=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:l},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:l}],p=n.runWebGLProgram(u,d,"float32"),h=n.runWebGLProgram(c,d,"float32"),f=Wn({inputs:{real:p,imag:h},backend:n});n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h);const m=ir({inputs:{x:f},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(f),m}const Ks={kernelName:s.FFT,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return qs(r,!1,n)}};class Xs{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function Zs(e){const{backend:t,attrs:n}=e,{shape:r,value:a}=n;let{dtype:o}=n;if(o=o||s.util.inferDtype(a),"string"===o){const e=s.util.getArrayFromDType(o,s.util.sizeFromShape(r));return e.fill(a),t.makeTensorInfo(r,o,e)}{const e=new Xs(r,a),n=[[a]];return t.runWebGLProgram(e,[],o,n)}}const Qs={kernelName:s.Fill,backendName:"webgl",kernelFunc:Zs};class Js{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const eo={kernelName:s.FlipLeftRight,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n}=e;const{image:r}=t,a=n,s=new Js(r.shape);return a.runWebGLProgram(s,[r],r.dtype)}},to="return floor(x);",no=Zn({opSnippet:to,packedOpSnippet:to,cpuKernelImpl:Ct}),ro={kernelName:s.Floor,backendName:"webgl",kernelFunc:no},ao=Qn({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),so={kernelName:s.FloorDiv,backendName:"webgl",kernelFunc:ao};class oo{constructor(e){this.variableNames=["A"];const t=ge(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class io{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=ge(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const lo={kernelName:s.FromPixels,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:a}=t;const{numChannels:o}=r,i="undefined"!==typeof HTMLVideoElement&&a instanceof HTMLVideoElement,l="undefined"!==typeof HTMLImageElement&&a instanceof HTMLImageElement,[u,c]=i?[a.videoWidth,a.videoHeight]:[a.width,a.height],p=[c,u],h=[c,u,o];if(l||i){const e=(0,s.env)().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");null!=uo&&e===co||(co=e,uo=document.createElement("canvas").getContext("2d",{willReadFrequently:co})),uo.canvas.width=u,uo.canvas.height=c,uo.drawImage(a,0,0,u,c),a=uo.canvas}const f=n.makeTensorInfo(p,"int32");n.texData.get(f.dataId).usage=d.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(f.dataId),a);const m=(0,s.env)().getBool("WEBGL_PACK")?new io(h):new oo(h),g=n.runWebGLProgram(m,[f],"int32");return n.disposeData(f.dataId),g}};let uo,co=(0,s.env)().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");const po={kernelName:s.FusedConv2D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:o,bias:i,preluActivationWeights:l}=t,{strides:u,pad:c,dataFormat:d,dilations:p,dimRoundingMode:h,activation:f,leakyreluAlpha:m}=r,g=s.backend_util.convertConv2DDataFormat(d),y=s.backend_util.computeConv2DInfo(a.shape,o.shape,u,p,c,h,!1,g);let b;const v=[],x=null!=i,k=null!=l,w="leakyrelu"===f,S=()=>{const e=[a,o],t=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){const t=ir({inputs:{x:e},backend:n,attrs:{shape:[e.shape[0],1,1]}});return v.push(t),t}return e};if(x&&e.push(t(i,d)),k&&e.push(t(l,d)),w){const t=n.makeTensorInfo([],"float32",s.util.createScalarValue(m,"float32"));e.push(t),v.push(t)}return e};if(1!==y.filterHeight||1!==y.filterWidth||1!==y.dilationHeight||1!==y.dilationWidth||1!==y.strideHeight||1!==y.strideWidth||"SAME"!==y.padInfo.type&&"VALID"!==y.padInfo.type)if(y.strideWidth<=2&&"channelsLast"===g&&(0,s.env)().getBool("WEBGL_EXP_CONV")){const e=f?Jn(f,!0):null,t=new Ua(y,x,e,k,w),r=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]],a=S();b=n.runWebGLProgram(t,a,"float32",r)}else if((0,s.env)().getBool("WEBGL_CONV_IM2COL"))b=Ya({x:a,filter:o,convInfo:y,backend:n,bias:i,activation:f,preluActivationWeights:l,leakyreluAlpha:m});else{const e=f?Jn(f,!1):null,t=new Va(y,x,e,k,w),r=S();b=n.runWebGLProgram(t,r,"float32")}else b=Ha({x:a,filter:o,convInfo:y,backend:n,bias:i,activation:f,preluActivationWeights:l,leakyreluAlpha:m});const T=ir({inputs:{x:b},backend:n,attrs:{shape:y.outShape}});return v.push(b),v.forEach((e=>n.disposeIntermediateTensorInfo(e))),T}};const ho={kernelName:s.FusedDepthwiseConv2D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:o,bias:i,preluActivationWeights:l}=t,{strides:u,pad:c,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=r,m=[];let g=d;null==g&&(g=[1,1]),s.util.assert(s.backend_util.eitherStridesOrDilationsAreOne(u,g),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${g}'`));const y=s.backend_util.computeConv2DInfo(a.shape,o.shape,u,g,c,p,!0),b=(0,s.env)().getBool("WEBGL_PACK_DEPTHWISECONV")&&y.strideWidth<=2&&y.outChannels/y.inChannels===1,v=h?Jn(h,b):null,x=[a,o],k=null!=i,w=null!=l,S="leakyrelu"===h;if(k&&x.push(i),w&&x.push(l),S){const e=n.makeTensorInfo([],"float32",s.util.createScalarValue(f,"float32"));x.push(e),m.push(e)}let T;T=b?new ws(y,k,v,w,S):new ks(y,k,v,w,S);const N=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]],I=n.runWebGLProgram(T,x,"float32",N);return m.forEach((e=>n.disposeIntermediateTensorInfo(e))),I}};class fo{constructor(e,t,n,r){this.sliceDim=e,this.strides=t,this.paramsShape=r,this.variableNames=["x","indices"],this.outputShape=n;const a=Fe(n.length);let s="\n    int index;";for(let o=0;o<this.sliceDim;o++)s+=`\n          index = round(getIndices(coords[0], ${o}));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[o]};\n          flattenIndex += index * ${this.strides[o]};`;this.userCode=`\n         void main() {\n          ${a} coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ${s}\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      `}}const mo={kernelName:s.GatherNd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:a}=t,o=a.shape,i=o[o.length-1],l=s.util.sizeFromShape(r.shape),[u,c,d,p]=s.backend_util.prepareAndValidate(r,a),h=ir({inputs:{x:a},backend:n,attrs:{shape:[c,i]}}),f=ir({inputs:{x:r},backend:n,attrs:{shape:[s.util.sizeFromShape(r.shape)/d,d]}});if(n.shouldExecuteOnCPU([r,a])||"string"===r.dtype){const e=n.readSync(a.dataId),t=n.bufferSync(r),s=Et(e,t,r.dtype,c,i,d,p,r.shape,l);return n.makeTensorInfo(u,r.dtype,s.values)}const m=new fo(i,p,[c,d],r.shape),g=n.runWebGLProgram(m,[f,h],f.dtype),y=ir({inputs:{x:g},backend:n,attrs:{shape:u}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),y}};class go{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=Fe(this.rank),r=function(e){const t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let r=0;r<e.length;r++)2===r?n.push("index"):n.push(`${t[r]}`);return n.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${r}));\n      }\n    `}}function yo(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,indices:o}=t,{axis:i,batchDims:l}=r,u=s.util.parseAxisParam(i,a.shape)[0];if((0,s.env)().get("DEBUG")){const e=n.readSync(o.dataId),t=a.shape[u];for(let n=0;n<e.length;++n){const r=e[n];s.util.assert(r<=t-1&&r>=0,(()=>`GatherV2: the index value ${r} is not in [0, ${t-1}]`))}}const c=s.backend_util.segment_util.collectGatherOpShapeInfo(a,o,u,l),d=s.util.sizeFromShape(o.shape),p=[],h=ir({inputs:{x:a},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),f=ir({inputs:{x:o},backend:n,attrs:{shape:[c.batchSize,d/c.batchSize]}});p.push(h),p.push(f);const m=[c.batchSize,c.outerSize,d/c.batchSize,c.sliceSize];if(n.shouldExecuteOnCPU([a,o])||"string"===a.dtype){const e=n.bufferSync(f),t=n.bufferSync(h),r=$t(t,e,m);return p.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c.outputShape,r.dtype,r.values)}const g=new go(h.shape,m),y=n.runWebGLProgram(g,[h,f],h.dtype);p.push(y);const b=ir({inputs:{x:y},backend:n,attrs:{shape:c.outputShape}});return p.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}const bo={kernelName:s.GatherV2,backendName:"webgl",kernelFunc:yo},vo=Qn({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:At,dtype:"bool"}),xo={kernelName:s.Greater,backendName:"webgl",kernelFunc:vo},ko=Qn({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:_t}),wo={kernelName:s.GreaterEqual,backendName:"webgl",kernelFunc:ko};const So={kernelName:s.IFFT,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return qs(r,!0,n)}},To=Zn({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),No={kernelName:s.IsFinite,backendName:"webgl",kernelFunc:To},Io=Zn({opSnippet:"return float(isinf(x));",dtype:"bool"}),Co={kernelName:s.IsInf,backendName:"webgl",kernelFunc:Io},Eo=Zn({opSnippet:"return float(isnan(x));",dtype:"bool"}),$o={kernelName:s.IsNan,backendName:"webgl",kernelFunc:Eo},Ao=Qn({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:Rt,dtype:"bool"}),_o={kernelName:s.Less,backendName:"webgl",kernelFunc:Ao},Ro=Qn({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:Ft,dtype:"bool"}),Fo={kernelName:s.LessEqual,backendName:"webgl",kernelFunc:Ro};const Oo={kernelName:s.LinSpace,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,o=Ot(r,a,s);return t.makeTensorInfo([o.length],"float32",o)}},Do=Zn({opSnippet:Xn+"\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:Dt}),Mo={kernelName:s.Log,backendName:"webgl",kernelFunc:Do},Po=Zn({opSnippet:Xn+"\n  return log(1.0 + x);\n"}),Lo={kernelName:s.Log1p,backendName:"webgl",kernelFunc:Po},zo=Qn({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),Bo={kernelName:s.LogicalAnd,backendName:"webgl",kernelFunc:zo},Vo=Zn({opSnippet:"return float(!(x >= 1.0));"}),Wo={kernelName:s.LogicalNot,backendName:"webgl",kernelFunc:Vo},Uo=Qn({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),Go={kernelName:s.LogicalOr,backendName:"webgl",kernelFunc:Uo};class jo{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[];const s=t,o=e[3]-1;let i;this.outputShape=e;const l=`float(${n}) + float(${r}) * sum`;i=.5===a?`inversesqrt(${l})`:1===a?`1.0/(${l})`:`exp(log(${l}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${s}; j <= ${s}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${o}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${i};\n        setOutput(val);\n      }\n    `}}class Ho{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const s=t,o=e[3]-1;let i;this.outputShape=e;const l=`float(${n}) + float(${r}) * sum`;i=.5===a?`inversesqrt(${l})`:1===a?`1.0/(${l})`:`exp(log(${l}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${s};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${s}; j <= ${s}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${o}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${i};\n        setOutput(result);\n      }\n    `}}const Yo={kernelName:s.LRN,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:o,bias:i,alpha:l,beta:u}=r,c=(0,s.env)().getBool("WEBGL_PACK_NORMALIZATION")?new Ho(a.shape,o,i,l,u):new jo(a.shape,o,i,l,u);return n.runWebGLProgram(c,[a],a.dtype)}};class qo{constructor(e,t,n,r,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=a,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${a})\n                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${a});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const Ko={kernelName:s.LRNGrad,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:o}=t,{depthRadius:i,bias:l,alpha:u,beta:c}=r,d=new qo(a.shape,i,l,u,c);return n.runWebGLProgram(d,[a,s,o],a.dtype)}};function Xo(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:o,keepDims:i}=r,l=a.shape.length,u=s.util.parseAxisParam(o,a.shape);let c=u;const d=s.backend_util.getAxesPermutation(c,l),p=null!=d,h=n.shouldExecuteOnCPU([a]);let f=a;if(p){if(h){const e=n.texData.get(f.dataId).values,t=new Array(l);for(let n=0;n<t.length;n++)t[n]=a.shape[d[n]];const r=dn(e,a.shape,a.dtype,d,t);f=n.makeTensorInfo(t,a.dtype);n.texData.get(f.dataId).values=r}else f=fr(a,d,n);c=s.backend_util.getInnerMostAxes(c.length,l)}s.backend_util.assertAxesAreInnerMostDims("max",c,l);const[m,g]=s.backend_util.computeOutAndReduceShapes(f.shape,c);let y,b=m;if(i&&(b=s.backend_util.expandShapeToKeepDim(m,u)),h){const e=n.texData.get(f.dataId).values,t=Mt(e,s.util.sizeFromShape(g),b,a.dtype);y=n.makeTensorInfo(b,a.dtype);n.texData.get(y.dataId).values=t}else y=function(e,t,n,r){const a=s.util.sizeFromShape(t),o=ir({inputs:{x:e},attrs:{shape:[s.util.sizeFromShape(e.shape)/a,a]},backend:r}),i=dr(o,e.dtype,"max",r),l=ir({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(o),r.disposeIntermediateTensorInfo(i),l}(f,g,b,n);return p&&n.disposeIntermediateTensorInfo(f),y}const Zo={kernelName:s.Max,backendName:"webgl",kernelFunc:Xo},Qo=Qn({opSnippet:Mn+"\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+Ln+"\n  return result;\n",cpuKernelImpl:Pt}),Jo={kernelName:s.Maximum,backendName:"webgl",kernelFunc:Qo};const ei={kernelName:s.MaxPool,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;fe(a,"maxPool");const{filterSize:o,strides:i,pad:l,dimRoundingMode:u}=r;s.util.assert(s.backend_util.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const c=s.backend_util.computePool2DInfo(a.shape,o,i,1,l,u);if(1===c.filterWidth&&1===c.filterHeight&&s.util.arraysEqual(c.inShape,c.outShape))return Bn({inputs:{x:a},backend:n});const d=new Qr(c,"max",!1);return n.runWebGLProgram(d,[a],a.dtype)}};const ti={kernelName:s.MaxPool3D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:o,strides:i,pad:l,dataFormat:u,dimRoundingMode:c}=r,d=s.backend_util.computePool3DInfo(a.shape,o,i,[1,1,1],l,c,u),p=new Jr(d,"max",!1);return n.runWebGLProgram(p,[a],a.dtype)}};class ni{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,a=e.effectiveFilterHeight,s=e.effectiveFilterWidth,o=a-1-e.padInfo.top,i=s-1-e.padInfo.left,l=a*s-1;this.userCode=`\n      const ivec2 pads = ivec2(${o}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${a};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${s}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${s} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class ri{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.dilationDepth,s=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterDepth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=i-1-e.padInfo.front,d=l-1-e.padInfo.top,p=u-1-e.padInfo.left,h=i*l*u-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${d}, ${p});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${i};\n           wD += ${a}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${l};\n              wR += ${s}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${u};\n                wC += ${o}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${h} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${l} * ${u} +\n                  wR * ${u} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const ai={kernelName:s.MaxPool3DGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:o}=t,i=o,{filterSize:l,strides:u,pad:c,dimRoundingMode:d}=r,p=s.backend_util.computePool3DInfo(i.shape,l,u,[1,1,1],c,d),h=new Jr(p,"max",!0),f=n.runWebGLProgram(h,[i],i.dtype),m=new ri(p),g=n.runWebGLProgram(m,[a,f],i.dtype);return n.disposeIntermediateTensorInfo(f),g}};const si={kernelName:s.MaxPoolGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:o,output:i}=t,l=o;fe([o,i],"maxPoolGrad");const{filterSize:u,strides:c,pad:d,dimRoundingMode:p}=r,h=s.backend_util.computePool2DInfo(l.shape,u,c,1,d,p),f=new Qr(h,"max",!0),m=n.runWebGLProgram(f,[l],l.dtype),g=new ni(h),y=n.runWebGLProgram(g,[a,m],l.dtype);return n.disposeIntermediateTensorInfo(m),y}};const oi={kernelName:s.MaxPoolWithArgmax,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:r}=e;const{x:a}=t,{filterSize:o,strides:i,pad:l,includeBatchInIndex:u}=n,c=r;s.util.assert(4===a.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${a.shape.length}.`));const d=[1,1];s.util.assert(s.backend_util.eitherStridesOrDilationsAreOne(i,d),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`));const p=s.backend_util.computePool2DInfo(a.shape,o,i,d,l),[h,f]=function(e,t,n,r){let a=new Qr(n,"max",!1);const s=r.runWebGLProgram(a,[e],"float32");return a=new Qr(n,"max",!0,!0,t),[s,r.runWebGLProgram(a,[e],"float32")]}(a,u,p,c);return[h,f]}};const ii={kernelName:s.Mean,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:r}=e;const{x:a}=t,{keepDims:o,axis:i}=n,l=r,u=a.shape.length,c=s.util.parseAxisParam(i,a.shape);let d=c;const p=s.backend_util.getAxesPermutation(d,u),h=null!=p,f=l.shouldExecuteOnCPU([a]),m=[];let g=a;if(h){if(f){const e=l.texData.get(g.dataId).values,t=new Array(u);for(let r=0;r<t.length;r++)t[r]=a.shape[p[r]];const n=dn(e,a.shape,a.dtype,p,t);g=l.makeTensorInfo(t,a.dtype);l.texData.get(g.dataId).values=n}else g=fr(a,p,l);m.push(g),d=s.backend_util.getInnerMostAxes(d.length,u)}s.backend_util.assertAxesAreInnerMostDims("sum",d,u);const[y,b]=s.backend_util.computeOutAndReduceShapes(g.shape,d);let v=y;o&&(v=s.backend_util.expandShapeToKeepDim(y,c));const x=function(e,t,n,r){const a=s.util.sizeFromShape(t),o=ir({inputs:{x:e},attrs:{shape:[s.util.sizeFromShape(e.shape)/a,a]},backend:r}),i=dr(o,"float32","mean",r),l=ir({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(o),r.disposeIntermediateTensorInfo(i),l}(g,b,v,l);for(const s of m)l.disposeIntermediateTensorInfo(s);return x}};const li={kernelName:s.Min,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:o,keepDims:i}=r,l=a.shape.length,u=s.util.parseAxisParam(o,a.shape);let c=u;const d=s.backend_util.getAxesPermutation(c,l);let p=a;null!=d&&(p=yr({inputs:{x:a},backend:n,attrs:{perm:d}}),c=s.backend_util.getInnerMostAxes(c.length,a.shape.length)),s.backend_util.assertAxesAreInnerMostDims("min",c,l);const[h,f]=s.backend_util.computeOutAndReduceShapes(p.shape,c),m=ir({inputs:{x:p},backend:n,attrs:{shape:[-1,s.util.sizeFromShape(f)]}}),g=dr(m,m.dtype,"min",n);let y;if(i){y=ir({inputs:{x:g},backend:n,attrs:{shape:s.backend_util.expandShapeToKeepDim(h,u)}})}else y=ir({inputs:{x:g},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=d&&n.disposeIntermediateTensorInfo(p),y}},ui=Qn({opSnippet:Mn+"\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+Ln+"\n  return result;\n",cpuKernelImpl:Lt}),ci={kernelName:s.Minimum,backendName:"webgl",kernelFunc:ui};class di{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=Fe(r),s=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),l="reflect"===n?0:1;this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${o});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${l};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};\n          }\n        }\n        ${a} coords = outC - start;\n        setOutput(getX(${i}));\n      }\n    `:`\n        int start = ${s};\n        int end = ${o};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${l};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${l};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class pi{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=Fe(r),s=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=fn("rc",r),l=fn("source",r),u=`${i[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${l.slice(-2).join()})`,d="reflect"===n?0:1;let p="";if(1===r){const e=`\n        ${a} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${d};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${d};\n        }\n        source -= start;\n      `;p=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${i[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n      `}else{const e=`\n        ${a} source = rc;\n        ${a} lt = ${a}(lessThan(source, start));\n        ${a} gte = ${a}(greaterThanEqual(source, end));\n        ${a} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${d}) +\n                gte * ((end - 1) * 2 - source + ${d});\n        source -= start;\n      `;p=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${i[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${i[r-2]} += 1;\n        if(${i[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${l.join()}), ${c});\n          ${i[r-1]} += 1;\n          if(${u}) {\n            ${e}\n            result[3] = getChannel(getX(${l.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${o});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const hi={kernelName:s.MirrorPad,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:r}=e;const{x:a}=t,{paddings:o,mode:i}=r,l=(0,s.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new pi(a.shape,o,i):new di(a.shape,o,i);return n.runWebGLProgram(l,[a],a.dtype)}},fi=Qn({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  "+Ln+"\n  return result;\n"}),mi={kernelName:s.Mod,backendName:"webgl",kernelFunc:fi};class gi{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}const yi=Qn({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),bi={kernelName:s.RealDiv,backendName:"webgl",kernelFunc:yi},vi="return a - b;",xi=Qn({opSnippet:vi,packedOpSnippet:vi,supportsComplex:!0,cpuKernelImpl:ln}),ki={kernelName:s.Sub,backendName:"webgl",kernelFunc:xi};function wi(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:o}=r,i=s.util.parseAxisParam([o],a.shape),l=Xo({inputs:{x:a},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),u=s.backend_util.expandShapeToKeepDim(l.shape,i),c=ir({inputs:{x:l},backend:n,attrs:{shape:u}}),d=xi({inputs:{a:a,b:c},backend:n}),p=Bs({inputs:{x:d},backend:n}),h=mr({inputs:{x:p},backend:n,attrs:{axis:i,keepDims:!1}}),f=ir({inputs:{x:h},backend:n,attrs:{shape:u}}),m=yi({inputs:{a:p,b:f},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),m}const Si={kernelName:s.Softmax,backendName:"webgl",kernelFunc:wi};const Ti={kernelName:s.Multinomial,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:o,normalized:i}=r,l=i?a:wi({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),u=l.shape[0],c=l.shape[1],d=new gi(u,c,s),p=[[o]],h=n.runWebGLProgram(d,[l],"int32",p);return i||n.disposeIntermediateTensorInfo(l),h}},Ni=wn+"\n  return -x;\n";const Ii={kernelName:s.Neg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.texData.get(r.dataId),[t,a]=Bt(e.values,r.shape,r.dtype);return n.makeTensorInfo(a,r.dtype,t)}let a;return a=(0,s.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new Cn(r.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new kn(r.shape,Ni),n.runWebGLProgram(a,[r],r.dtype)}},Ci=s.kernel_impls.nonMaxSuppressionV3Impl;const Ei={kernelName:s.NonMaxSuppressionV3,backendName:"webgl",kernelFunc:function(e){s.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:o}=t,{maxOutputSize:i,iouThreshold:l,scoreThreshold:u}=r,c=n.readSync(a.dataId),d=n.readSync(o.dataId),{selectedIndices:p}=Ci(c,d,i,l,u);return n.makeTensorInfo([p.length],"int32",new Int32Array(p))}},$i=s.kernel_impls.nonMaxSuppressionV4Impl;const Ai={kernelName:s.NonMaxSuppressionV4,backendName:"webgl",kernelFunc:function(e){s.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:o}=t,{maxOutputSize:i,iouThreshold:l,scoreThreshold:u,padToMaxOutputSize:c}=r,d=n.readSync(a.dataId),p=n.readSync(o.dataId),{selectedIndices:h,validOutputs:f}=$i(d,p,i,l,u,c);return[n.makeTensorInfo([h.length],"int32",new Int32Array(h)),n.makeTensorInfo([],"int32",new Int32Array([f]))]}},_i=s.kernel_impls.nonMaxSuppressionV5Impl;const Ri={kernelName:s.NonMaxSuppressionV5,backendName:"webgl",kernelFunc:function(e){s.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:o}=t,{maxOutputSize:i,iouThreshold:l,scoreThreshold:u,softNmsSigma:c}=r,d=n.readSync(a.dataId),p=n.readSync(o.dataId),h=i,f=l,m=u,g=c,{selectedIndices:y,selectedScores:b}=_i(d,p,h,f,m,g);return[n.makeTensorInfo([y.length],"int32",new Int32Array(y)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}};class Fi{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const Oi={kernelName:s.OneHot,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{dtype:o,depth:i,onValue:l,offValue:u}=r,c=s.util.sizeFromShape(a.shape),d=new Fi(c,i,l,u),p=ir({inputs:{x:a},backend:n,attrs:{shape:[c]}}),h=n.runWebGLProgram(d,[p],o);n.disposeIntermediateTensorInfo(p);const f=ir({inputs:{x:h},backend:n,attrs:{shape:[...a.shape,i]}});return n.disposeIntermediateTensorInfo(h),f}};function Di(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=ka({inputs:{input:r},backend:n}),t=Di({inputs:{x:e},backend:n}),a=Ma({inputs:{input:r},backend:n}),s=Di({inputs:{x:a},backend:n}),o=Wn({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),o}return Zs({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const Mi={kernelName:s.ZerosLike,backendName:"webgl",kernelFunc:Di};const Pi={kernelName:s.OnesLike,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===a.dtype){const t=ka({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=Ma({inputs:{input:a},backend:r}),o=Di({inputs:{x:s},backend:r}),i=Wn({inputs:{real:n,imag:o},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(o),i}return Zs({attrs:{shape:a.shape,dtype:a.dtype,value:1},backend:r})}};const Li={kernelName:s.Pack,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return Ws({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const o=t[0].shape,i=t[0].dtype;t.forEach((e=>{s.util.assertShapesMatch(o,e.shape,"All tensors passed to stack must have matching shapes"),s.util.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const l=[],u=za({inputs:t.map((e=>{const t=Ws({inputs:{input:e},backend:n,attrs:{dim:a}});return l.push(t),t})),backend:n,attrs:{axis:a}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}};class zi{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=Fe(r),s=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${o});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${a} coords = outC - start;\n          setOutput(getX(${i}));\n        }\n      }\n    `:`\n        int start = ${s};\n        int end = ${o};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class Bi{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=Fe(r),s=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=fn("rc",r),l=fn("source",r),u=`${i[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${l.slice(-2).join()})`,d=[`${a} rc = outputLoc;`,`${i[r-1]} += 1;\n       if(${u}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${i[r-2]} += 1;\n       if(${i[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${i[r-1]} += 1;\n         if(${u}) {`],p=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let h="";for(let f=0,m=1===r?2:4;f<m;f++)h+=`\n        ${d[f]}\n        if (${p}) {\n          result[${f}] = float(value);\n        } else {\n          ${a} source = rc - start;\n          result[${f}] = getChannel(getX(${l.join()}), ${c});\n        }\n      `;h+=1===r?"} ":"}}",this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${o});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${h}\n        setOutput(result);\n      }\n    `}}const Vi=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:o,constantValue:i}=r;if(0===s.util.sizeFromShape(a.shape)){return Zs({backend:n,attrs:{shape:o.map(((e,t)=>e[0]+a.shape[t]+e[1])),value:i,dtype:a.dtype}})}const l=(0,s.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Bi(a.shape,o,i):new zi(a.shape,o,i),u=[[i]];return n.runWebGLProgram(l,[a],a.dtype,u)},Wi={kernelName:s.PadV2,backendName:"webgl",kernelFunc:Vi},Ui=Qn({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  "+Ln+"\n  return result;\n"}),Gi={kernelName:s.Pow,backendName:"webgl",kernelFunc:Ui};const ji={kernelName:s.Prod,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:o,keepDims:i}=r,l=a.shape.length,u=[],c=s.util.parseAxisParam(o,a.shape);let d=c;const p=s.backend_util.getAxesPermutation(d,l);let h,f=a;if(null!=p&&(f=yr({inputs:{x:a},backend:n,attrs:{perm:p}}),d=s.backend_util.getInnerMostAxes(d.length,l),u.push(f)),s.backend_util.assertAxesAreInnerMostDims("prod",d,l),n.shouldExecuteOnCPU([f])){const e=n.texData.get(f.dataId).values,{outVals:t,outShape:r,outDtype:a}=Wt(f.shape,f.dtype,e,d);h=n.makeTensorInfo(r,a,t)}else{const[e,t]=s.backend_util.computeOutAndReduceShapes(f.shape,d),r=s.util.sizeFromShape(t),o=ir({inputs:{x:f},backend:n,attrs:{shape:[-1,r]}}),i=dr(o,(0,s.sumOutType)(a.dtype),"prod",n);h=ir({inputs:{x:i},backend:n,attrs:{shape:e}}),u.push(o),u.push(i)}if(i){u.push(h);const e=s.backend_util.expandShapeToKeepDim(h.shape,c);h=ir({inputs:{x:h},backend:n,attrs:{shape:e}})}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}};const Hi={kernelName:s.RaggedGather,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:a,paramsDenseValues:s,indices:o}=t,{outputRaggedRank:i}=r,l=a.map((e=>n.readSync(e.dataId))),u=a.map((e=>e.shape)),c=n.readSync(s.dataId),d=n.readSync(o.dataId),[p,h,f]=Ut(l,u,c,s.shape,s.dtype,d,o.shape,i),m=p.map((e=>n.makeTensorInfo([e.length],"int32",e))),g=n.makeTensorInfo(f,s.dtype,h);return m.concat([g])}};const Yi={kernelName:s.RaggedRange,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:r,limits:a,deltas:s}=t,o=n.readSync(r.dataId),i=n.readSync(a.dataId),l=n.readSync(s.dataId),[u,c]=Gt(o,r.shape,r.dtype,i,a.shape,l,s.shape);return[n.makeTensorInfo([u.length],"int32",u),n.makeTensorInfo([c.length],r.dtype,c)]}};const qi={kernelName:s.RaggedTensorToTensor,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{shape:a,values:s,defaultValue:o,rowPartitionTensors:i}=t,{rowPartitionTypes:l}=r,u=n.readSync(a.dataId),c=n.readSync(s.dataId),d=n.readSync(o.dataId),p=i.map((e=>n.readSync(e.dataId))),h=i.map((e=>e.shape)),[f,m]=jt(u,a.shape,c,s.shape,s.dtype,d,o.shape,p,h,l);return n.makeTensorInfo(f,s.dtype,m)}},Ki=e=>{const{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:o}=n,i=Ht(r,a,s,o);return t.makeTensorInfo([i.length],o,i)},Xi={kernelName:s.Range,backendName:"webgl",kernelFunc:Ki},Zi=Zn({opSnippet:"return 1.0 / x;"}),Qi={kernelName:s.Reciprocal,backendName:"webgl",kernelFunc:Zi},Ji=Zn({opSnippet:wn+"\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),el={kernelName:s.Relu,backendName:"webgl",kernelFunc:Ji},tl=Zn({opSnippet:wn+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),nl={kernelName:s.Relu6,backendName:"webgl",kernelFunc:tl};class rl{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];const[s,o,i,l]=e;this.outputShape=[s,t,n,l];const u=[r&&t>1?o-1:o,r&&n>1?i-1:i],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let d;d=a?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${o}.0, ${i}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class al{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,o,i,l]=e;this.outputShape=[s,t,n,l];const u=[r&&t>1?o-1:o,r&&n>1?i-1:i],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let d;d=a?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${o}.0, ${i}.0,\n                                     ${i}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const sl={kernelName:s.ResizeBilinear,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:o,halfPixelCenters:i,size:l}=r,[u,c]=l,d=(0,s.env)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new al(a.shape,u,c,o,i):new rl(a.shape,u,c,o,i);return n.runWebGLProgram(d,[a],"float32")}};class ol{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,s,o]=e,i=[n&&s>1?r-1:r,n&&o>1?a-1:a],l=[n&&s>1?s-1:s,n&&o>1?o-1:o],u=i[0]/l[0],c=i[1]/l[1],d=1/u,p=1/c,h=2*Math.ceil(d)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${d});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${h});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${o}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const il={kernelName:s.ResizeBilinearGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:o}=r,i=new ol(s.shape,a.shape,o);return n.runWebGLProgram(i,[s],s.dtype)}};class ll{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];const[s,o,i,l]=e;this.outputShape=[s,t,n,l];const u=[r&&t>1?o-1:o,r&&n>1?i-1:i],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],d=r?"0.5":"0.0";let p;p=a?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${o}.0, ${i}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${p};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class ul{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,o,i,l]=e;this.outputShape=[s,t,n,l];const u=[r&&t>1?o-1:o,r&&n>1?i-1:i],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],d=r?"0.5":"0.0";let p;p=a?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${o}.0, ${i}.0,\n                                     ${i}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${p};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const cl={kernelName:s.ResizeNearestNeighbor,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:o,halfPixelCenters:i,size:l}=r,[u,c]=l,d=(0,s.env)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new ul(a.shape,u,c,o,i):new ll(a.shape,u,c,o,i);return n.runWebGLProgram(d,[a],a.dtype)}};class dl{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,s,o]=e,i=[n&&s>1?r-1:r,n&&o>1?a-1:a],l=[n&&s>1?s-1:s,n&&o>1?o-1:o],u=i[0]/l[0],c=i[1]/l[1],d=1/u,p=1/c,h=2*Math.ceil(d)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${d});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${h});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${o}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${i[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${i[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${a}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const pl={kernelName:s.ResizeNearestNeighborGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:o}=r,i=new dl(s.shape,a.shape,o);return n.runWebGLProgram(i,[s],s.dtype)}};class hl{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=e.map(((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),a=Fe(n);this.userCode=`\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class fl{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=fn("rc",n),a=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,s=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,o=Fe(n);function i(n){const r=e.map(((r,a)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}(a,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${a}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${o} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return i(e)}(r.slice())};\n          if(${a}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",i(e)}(r.slice())};\n          }\n          if(${s}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",i(e)}(r.slice())};\n            if(${a}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",i(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const ml={kernelName:s.Reverse,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:o}=r,i=a.shape.length,l=s.util.parseAxisParam(o,a.shape);if(0===i)return Bn({inputs:{x:a},backend:n});const u=(0,s.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new fl(a.shape,l):new hl(a.shape,l);return n.runWebGLProgram(u,[a],a.dtype)}};class gl{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],r=e[2];this.outputShape=e;let a="";a="number"===typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${a}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const yl={kernelName:s.RotateWithOffset,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:r}=e;const{image:a}=t,{radians:o,fillValue:i,center:l}=n,u=r,c=new gl(a.shape,i),[d,p]=s.backend_util.getImageCenter(l,a.shape[1],a.shape[2]),h=[[d,p,Math.sin(o),Math.cos(o)]];return u.runWebGLProgram(c,[a],a.dtype,h)}},bl=Zn({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),vl={kernelName:s.Round,backendName:"webgl",kernelFunc:bl},xl=Zn({opSnippet:"return inversesqrt(x);",cpuKernelImpl:Yt}),kl={kernelName:s.Rsqrt,backendName:"webgl",kernelFunc:xl};class wl{constructor(e,t,n,r,a,s){let o=arguments.length>7&&void 0!==arguments[7]&&arguments[7];this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;const i=Fe(a.length),l=Fe(s.length);let u="";1===n?u="i":2===n&&(u="i, j");const c=`getIndices(${u})`;let d="";1===r?d="i":2===r&&(d="i, coords[1]");const p=`getUpdates(${d})`;let h="";o&&(h="coords[0], coords[1]");const f=`getDefaultValue(${h})`,m=t>1?"strides[j]":"strides";this.userCode=`\n        ${i} strides = ${i}(${a});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${c});\n              flattenedIndex += index * ${m};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${p};\n              found = true;\n            }\n          }\n          setOutput(mix(${f}, sum, float(found)));\n        }\n      `}}class Sl{constructor(e,t,n,r,a,s){let o=arguments.length>7&&void 0!==arguments[7]&&arguments[7];this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s;const i=Fe(a.length),l=Fe(s.length);let u="";1===n?u="i":2===n&&(u="i, j");const c=`getIndices(${u})`;let d="";1===r?d="i":2===r&&(d="i, coords[1]");const p=`getUpdates(${d})`;let h="";o&&(h="coords[0], coords[1]");const f=`getDefaultValue(${h})`,m=t>1?"strides[j]":"strides",g=t>1?"strides[j + 1]":"strides";this.userCode=`\n        ${i} strides = ${i}(${a});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          vec4 sum = vec4(0.);\n          vec4 found = vec4(0.);\n          for (int i = 0; i < ${e}; i+=2) {\n            ivec2 flattenedIndex = ivec2(0);\n            for (int j = 0; j < ${t}; j+=2) {\n              ivec4 index = round(${c});\n              flattenedIndex += index.xz * ${m};\n              if (j + 1 < ${t}) {\n                flattenedIndex += index.yw * ${g};\n              }\n            }\n            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||\n                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {\n              vec4 updVals = ${p};\n              if (flattenedIndex[0] == coords[0]) {\n                sum.xy += updVals.xy;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[0] == coords[0] + 1) {\n                sum.zw += updVals.xy;\n                found.zw = vec2(1.);\n              }\n              if (flattenedIndex[1] == coords[0]) {\n                sum.xy += updVals.zw;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[1] == coords[0] + 1) {\n                sum.zw += updVals.zw;\n                found.zw = vec2(1.);\n              }\n            }\n          }\n          setOutput(mix(${f}, sum, found));\n        }\n      `}}const Tl={kernelName:s.ScatterNd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:o}=t,{shape:i}=r,{sliceRank:l,numUpdates:u,sliceSize:c,strides:d,outputSize:p}=s.backend_util.calculateShapes(o,a,i),h=[p/c,c];if(0===p)return n.makeTensorInfo(i,a.dtype);const f=ir({inputs:{x:a},backend:n,attrs:{shape:[u,l]}}),m=ir({inputs:{x:o},backend:n,attrs:{shape:[u,c]}}),g=n.makeTensorInfo([],"float32",new Float32Array([0]));let y;y=(0,s.env)().getBool("WEBGL_PACK")?new Sl(u,l,f.shape.length,m.shape.length,d,h):new wl(u,l,f.shape.length,m.shape.length,d,h);const b=n.runWebGLProgram(y,[m,f,g],m.dtype),v=ir({inputs:{x:b},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(g),v}};class Nl{constructor(e,t,n,r){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];const a=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,o=2===(0,s.env)().getNumber("WEBGL_VERSION")?"while (left < right) {":a,i="left"===r?"<":"<=";this.userCode=`\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ${o}\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ${i} value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     `}}const Il={kernelName:s.SearchSorted,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sortedSequence:a,values:s}=t,{side:o}=r,i=new Nl(a.shape[0],a.shape[1],s.shape[1],o),l=[[a.shape[1]]];return n.runWebGLProgram(i,[a,s],"int32",l)}};class Cl{constructor(e,t,n){let r,a;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)a="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],o=[];for(let r=0;r<t.length;r++)o.push(`${n[r]}`),r<e&&s.push(`${n[r]}`);r=s.join(),a=o.join()}const s=Fe(n);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${a}));\n        } else {\n          setOutput(getB(${a}));\n        }\n      }\n    `}}const El={kernelName:s.Select,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:a,e:o}=t,i=new Cl(r.shape.length,a.shape,a.shape.length);return n.runWebGLProgram(i,[r,a,o],(0,s.upcastType)(a.dtype,o.dtype))}},$l=Zn({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${s.backend_util.SELU_SCALEALPHA};\n  float scale = ${s.backend_util.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),Al={kernelName:s.Selu,backendName:"webgl",kernelFunc:$l},_l=Zn({opSnippet:Xn+"\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:Kt}),Rl={kernelName:s.Sigmoid,backendName:"webgl",kernelFunc:_l},Fl=Zn({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),Ol={kernelName:s.Sign,backendName:"webgl",kernelFunc:Fl},Dl=Zn({opSnippet:Xn+"\n  return sin(x);\n",packedOpSnippet:`\n  vec4 result = sin(x);\n  bvec4 isNaN = isnan(x);\n  ${Ln}\n  return result;\n`}),Ml={kernelName:s.Sin,backendName:"webgl",kernelFunc:Dl},Pl=Zn({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),Ll={kernelName:s.Sinh,backendName:"webgl",kernelFunc:Pl},zl=Zn({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),Bl={kernelName:s.Softplus,backendName:"webgl",kernelFunc:zl},Vl={kernelName:s.SpaceToBatchND,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:o,paddings:i}=r;s.util.assert(a.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const l=o.reduce(((e,t)=>e*t)),u=[[0,0]];u.push(...i);for(let s=1+o.length;s<a.shape.length;++s)u.push([0,0]);const c=[],d=Vi({inputs:{x:a},backend:n,attrs:{paddings:u,constantValue:0}}),p=s.backend_util.getReshaped(d.shape,o,l,!1),h=s.backend_util.getPermuted(p.length,o.length,!1),f=s.backend_util.getReshapedPermuted(d.shape,o,l,!1),m=ir({inputs:{x:d},backend:n,attrs:{shape:p}}),g=yr({inputs:{x:m},backend:n,attrs:{perm:h}}),y=ir({inputs:{x:g},backend:n,attrs:{shape:f}});return c.push(d),c.push(m),c.push(g),c.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}};const Wl={kernelName:s.SparseFillEmptyRows,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:o}=t;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${s.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${r.shape}`);if(1!==a.shape.length)throw new Error(`Values must be a vector, saw:\n         ${a.shape}`);if(0!==o.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${o.shape}`);const i=n.readSync(r.dataId),l=n.readSync(a.dataId),u=n.readSync(s.dataId),c=n.readSync(o.dataId)[0],[d,p,h,f,m]=Qt(i,r.shape,r.dtype,l,a.dtype,u,c);return[n.makeTensorInfo(p,r.dtype,d),n.makeTensorInfo([p[0]],a.dtype,h),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}};const Ul={kernelName:s.SparseReshape,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);const o=Array.from(n.readSync(a.dataId)),i=n.readSync(r.dataId),l=Array.from(n.readSync(s.dataId)),[u,c,d]=Jt(i,r.shape,r.dtype,o,l);return[n.makeTensorInfo(c,r.dtype,u),n.makeTensorInfo([d.length],s.dtype,new Int32Array(d))]}};const Gl={kernelName:s.SparseSegmentMean,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${s.shape}`);const o=n.readSync(r.dataId),i=n.readSync(a.dataId),l=n.readSync(s.dataId),[u,c]=en(o,r.shape,r.dtype,i,l,!0);return n.makeTensorInfo(c,r.dtype,u)}};const jl={kernelName:s.SparseSegmentSum,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${s.shape}`);const o=n.readSync(r.dataId),i=n.readSync(a.dataId),l=n.readSync(s.dataId),[u,c]=en(o,r.shape,r.dtype,i,l);return n.makeTensorInfo(c,r.dtype,u)}};const Hl={kernelName:s.SparseToDense,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:o,defaultValue:i}=t,{outputShape:l}=r,{sliceRank:u,numUpdates:c,sliceSize:d,strides:p,outputSize:h}=s.backend_util.calculateShapes(o,a,l),f=!1;if("string"===o.dtype){const e=n.bufferSync(a),t=n.bufferSync(o),r=s.util.decodeString(n.readSync(i.dataId)[0]),m=qt(e,t,l,h,d,c,u,p,r,f);return n.makeTensorInfo(l,m.dtype,m.values)}const m=new wl(c,u,a.shape.length,o.shape.length,p,[h,1],f),g=n.runWebGLProgram(m,[o,a,i],o.dtype),y=ir({inputs:{x:g},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(g),y}};const Yl={kernelName:s.SplitV,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:o,axis:i}=r,l=s.util.parseAxisParam(i,a.shape)[0],u=s.backend_util.prepareSplitSize(a,o,l),c=a.shape.length,d=new Array(c).fill(0),p=a.shape.slice();return u.map((e=>{const t=[...p];t[l]=e;const r=ha({inputs:{x:a},backend:n,attrs:{begin:d,size:t}});return d[l]+=e,r}))}},ql="return sqrt(x);",Kl=Zn({opSnippet:ql,packedOpSnippet:ql,cpuKernelImpl:tn}),Xl={kernelName:s.Sqrt,backendName:"webgl",kernelFunc:Kl},Zl=Zn({opSnippet:"return x * x;"}),Ql={kernelName:s.Square,backendName:"webgl",kernelFunc:Zl},Jl="return (a - b) * (a - b);",eu=Qn({opSnippet:Jl,packedOpSnippet:Jl}),tu={kernelName:s.SquaredDifference,backendName:"webgl",kernelFunc:eu};const nu={kernelName:s.StaticRegexReplace,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");const o=n.readSync(a.dataId),i=s.backend_util.fromUint8ToStringArray(o),l=nn(i,"string",r);return n.makeTensorInfo(a.shape,"string",l)}};const ru={kernelName:s.Step,backendName:"webgl",kernelFunc:function(e){let{inputs:t,attrs:n,backend:r}=e;const{x:a}=t,s=wn+`\n    return x > 0.0 ? 1.0 : float(${n.alpha});\n  `,o=new kn(a.shape,s);return r.runWebGLProgram(o,[a],a.dtype)}};class au{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,a=Fe(n.length),s=Fe(n.length);let o="";if(1===r)o="coords * strides + begin";else{let e=0;o=n.map(((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${a} begin = ${a}(${e});\n      ${a} strides = ${a}(${t});\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${o}));\n      }\n    `}}const su={kernelName:s.StridedSlice,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:o,end:i,strides:l,beginMask:u,endMask:c,ellipsisMask:d,newAxisMask:p,shrinkAxisMask:h}=r,{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:y,isSimpleSlice:b,begin:v,end:x,strides:k}=s.slice_util.sliceInfo(a.shape,o,i,l,u,c,d,p,h);let w;if(g)w=ir({inputs:{x:a},backend:n,attrs:{shape:m}});else if(y||b){s.util.assert(a.shape.length>=1,(()=>`Input must have rank at least 1, got: ${a.shape.length}`));const e=s.slice_util.computeOutShape(v,x,k),t=ha({inputs:{x:a},backend:n,attrs:{begin:v,size:e}});w=ir({inputs:{x:t},backend:n,attrs:{shape:m}}),n.disposeIntermediateTensorInfo(t)}else{if(n.shouldExecuteOnCPU([a])){const e=n.readSync(a.dataId),t=(0,s.buffer)(a.shape,a.dtype,e),r=rn(f,t,k,v);w=n.makeTensorInfo(m,a.dtype,r.values)}else{const e=new au(v,k,f);w=n.runWebGLProgram(e,[a],a.dtype)}}const S=ir({inputs:{x:w},backend:n,attrs:{shape:m}});return n.disposeIntermediateTensorInfo(w),S}};const ou={kernelName:s.StringNGrams,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:o,rightPad:i,padWidth:l,preserveShortSequences:u}=r,{data:c,dataSplits:d}=t,p=n.readSync(c.dataId),h=n.readSync(d.dataId),[f,m]=an(p,h,a,s,o,i,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}};const iu={kernelName:s.StringSplit,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:o}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==o.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${o.shape}`);const i=n.readSync(s.dataId),l=n.readSync(o.dataId)[0],[u,c,d]=sn(i,l,a),p=c.length;return[n.makeTensorInfo([p,2],"int32",u),n.makeTensorInfo([p],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(d))]}};const lu={kernelName:s.StringToHashBucketFast,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");const o=n.readSync(s.dataId),i=on(o,a);return n.makeTensorInfo(s.shape,"int32",i)}},uu=Zn({opSnippet:"return tan(x);"}),cu={kernelName:s.Tan,backendName:"webgl",kernelFunc:uu},du=Zn({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),pu={kernelName:s.Tanh,backendName:"webgl",kernelFunc:du};const hu={kernelName:s.TensorScatterUpdate,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{tensor:a,indices:o,updates:i}=t,{}=r,{sliceRank:l,numUpdates:u,sliceSize:c,strides:d,outputSize:p}=s.backend_util.calculateShapes(i,o,a.shape),h=[p/c,c];if(0===p)return n.makeTensorInfo(a.shape,o.dtype);const f=ir({inputs:{x:o},backend:n,attrs:{shape:[u,l]}}),m=ir({inputs:{x:i},backend:n,attrs:{shape:[u,c]}}),g=ir({inputs:{x:a},backend:n,attrs:{shape:h}}),y=new wl(u,l,f.shape.length,m.shape.length,d,h,!1,!0),b=n.runWebGLProgram(y,[m,f,g],g.dtype),v=ir({inputs:{x:b},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(b),v}};class fu{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[s]*t[s];this.outputShape=n,this.rank=n.length;const r=Fe(this.rank),a=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let a=0;a<e.length;a++)r.push(`imod(${n[a]}, ${e[a]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${a}));\n      }\n    `}}function mu(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:o}=r;if("string"===a.dtype||a.shape.length>5){const e=n.readSync(a.dataId),t="string"===a.dtype?e.map((e=>s.util.decodeString(e))):e,r=(0,s.buffer)(a.shape,a.dtype,t),i=un(r,o);return n.makeTensorInfo(i.shape,i.dtype,i.values)}const i=new fu(a.shape,o);return n.runWebGLProgram(i,[a],a.dtype)}const gu={kernelName:s.Tile,backendName:"webgl",kernelFunc:mu};class yu{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class bu{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function vu(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function xu(e){let t=1;for(;t<e;)t*=2;return t}const ku={kernelName:s.TopK,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:o,sorted:i}=r,l=(0,s.env)().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),u=(0,s.env)().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),c=a.shape,d=c[c.length-1];if(n.shouldExecuteOnCPU([a])||d<l||o>u){const e=n.readSync(a.dataId),[t,r]=cn(e,c,a.dtype,o,i);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===o)return c[c.length-1]=0,[n.makeTensorInfo(c,a.dtype,[]),n.makeTensorInfo(c,"int32",[])];if(1===d)return[a,Zs({attrs:{shape:c,dtype:"int32",value:0},backend:n})];const p=n.texData.get(a.dataId),h=null!==p&&p.isPacked,f=h?n.unpackTensor(a):a,m=s.util.sizeFromShape(c)/d,g=ir({inputs:{x:f},attrs:{shape:[m,d]},backend:n});h&&vu(n,f);const y=xu(o),b=xu(d);let v=null;const x=()=>null===v?[g,g]:[g,v],k=(e,t,r)=>{const a=x(),s=new yu(r),o=[[d],[null===v?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],i=v;v=n.runWebGLProgram(s,a,"int32",o),vu(n,i)};for(let s=1;s<y;s*=2){const e=2*s;for(let t=s;t>=1;t/=2)k(e,t,[m,b])}for(let s=b;s>y;s/=2){const e=x(),t=new bu([m,s/2]),r=[[d],[null===v?1:0],[y]],a=v;v=n.runWebGLProgram(t,e,"int32",r),vu(n,a);const o=y/2,i=2*o;for(let n=o;n>=1;n/=2)k(i,n,v.shape)}let w=v;v=ha({inputs:{x:v},backend:n,attrs:{begin:0,size:[m,o]}}),vu(n,w);let S=yo({inputs:{x:g,indices:v},backend:n,attrs:{axis:1,batchDims:1}});vu(n,g);const T=c.slice(0,-1);T.push(o),w=v,v=ir({inputs:{x:v},attrs:{shape:T},backend:n}),vu(n,w);const N=S;return S=ir({inputs:{x:S},attrs:{shape:T},backend:n}),vu(n,N),[S,v]}};class wu{constructor(e,t,n,r,a,s){this.variableNames=["Image","Transforms"],this.outputShape=s;const o="nearest"===n?1:2;let i;switch(r){case"constant":default:i=1;break;case"reflect":i=2;break;case"wrap":i=3;break;case"nearest":i=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${i} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${i} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${i} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${a});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${a});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${o} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const Su={kernelName:s.Transform,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a,transforms:s}=t,{interpolation:o,fillMode:i,fillValue:l,outputShape:u}=r,[c,d,p,h]=a.shape,[f,m]=null!=u?u:[d,p],g=new wu(d,p,o,i,l,[c,f,m,h]);return n.runWebGLProgram(g,[a,s],"float32")}};const Tu={kernelName:s.Unique,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;fe(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const o=r.readSync(s.dataId),{outputValues:i,outputShape:l,indices:u}=pn(o,a,s.shape,s.dtype);return[r.makeTensorInfo(l,s.dtype,i),r.makeTensorInfo([u.length],"int32",u)]}};const Nu={kernelName:s.Unpack,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:s}=r;s<0&&(s+=a.shape.length);const o=a,i=o.shape.length,l=a.shape[s],u=new Array(i-1);let c=0;for(let m=0;m<i;m++)m!==s&&(u[c++]=o.shape[m]);const d=[],p=new Array(i).fill(0),h=o.shape.slice();h[s]=1;const f=new Array(l);for(let m=0;m<f.length;m++){p[s]=m;const e=ha({inputs:{x:o},backend:n,attrs:{begin:p,size:h}}),t=ir({inputs:{x:e},backend:n,attrs:{shape:u}});f[m]=t,d.push(e)}return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class Iu{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,a=e.inSize,s=e.numSegments,o=s*Math.ceil(a/n);this.outputShape=[r,o];const i=4*Math.floor(n/4),l=n%4,u="\n        sumValue += dot(values, segFilter);\n    ";let c="";a%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `);let d="";a%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${d}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${s})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${s})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}const Cu=[xr,wr,Tr,Ir,$r,Rr,Fr,Or,Br,Vr,Ur,jr,Yr,Kr,Zr,ea,ta,aa,sa,oa,ua,ma,ga,ya,ba,Sa,Ia,$a,Un,Ra,Ba,qa,Ja,ts,ns,rs,as,os,ls,cs,gs,ys,bs,xs,Ss,Is,Cs,$s,_s,Rs,Os,Ds,Ps,zs,Vs,Us,Hs,Ks,Qs,eo,ro,so,lo,po,ho,mo,bo,xo,wo,Vn,So,Pa,No,Co,$o,Hn,_o,Fo,Oo,Mo,Lo,Bo,Wo,Go,Yo,Ko,Zo,Jo,ei,ti,ai,si,oi,ii,li,ci,hi,mi,Ti,or,Ii,Ei,Ai,Ri,xa,Oi,Pi,Li,Wi,Gi,Kn,ji,Hi,Yi,qi,Xi,wa,bi,Qi,el,nl,lr,sl,il,cl,pl,ml,yl,vl,kl,Tl,Il,El,Al,Rl,Ol,Ml,Ll,fa,Si,Bl,Vl,Wl,Ul,Gl,jl,Hl,Yl,Xl,Ql,tu,nu,ru,su,ou,iu,lu,ki,gr,cu,pu,hu,gu,ku,Su,br,Tu,Nu,{kernelName:s.UnsortedSegmentSum,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:o}=t,{numSegments:i}=r,l=a.shape.length,u=[];let c=0;const d=s.backend_util.getAxesPermutation([c],l);let p=a;null!=d&&(p=yr({inputs:{x:a},backend:n,attrs:{perm:d}}),u.push(p),c=s.backend_util.getInnerMostAxes(1,l)[0]);const h=s.backend_util.segment_util.computeOutShape(p.shape,c,i),f=s.util.sizeFromShape([p.shape[c]]),m=ir({inputs:{x:p},backend:n,attrs:{shape:[-1,f]}});u.push(m);const g=(0,s.sumOutType)(a.dtype),y=(e,t,r,a,o)=>{const i=e.shape[0],l=e.shape[1],c=s.backend_util.segment_util.segOpComputeOptimalWindowSize(l,o),d=new Iu({windowSize:c,inSize:l,batchSize:i,numSegments:o},t),p=n.compileAndRun(d,[e,r],a);if(u.push(p),p.shape[1]===o)return p;const h=Ki({backend:n,attrs:{start:0,stop:o,step:1,dtype:"float32"}}),f=mu({inputs:{x:h},backend:n,attrs:{reps:[l/c]}});u.push(h),u.push(f);return y(p,t,f,a,o)},b=ir({inputs:{x:y(m,"unsortedSegmentSum",o,g,i)},backend:n,attrs:{shape:h}});let v=b;if(null!=d){u.push(b);const e=s.backend_util.getUndoAxesPermutation(d);v=yr({inputs:{x:v},backend:n,attrs:{perm:e}})}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),v}},Mi];for(const Eu of Cu)(0,s.registerKernel)(Eu)},5995:(e,t,n)=>{"use strict";function r(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.real,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}n.d(t,{r:()=>a,x:()=>r});const a={kernelName:n(5743).Real,backendName:"cpu",kernelFunc:r}},6005:(e,t,n)=>{"use strict";n.d(t,{E:()=>o});var r=n(2164),a=n(9554),s=n(4148);const o=(0,n(7892).op)({isInf_:function(e){const t={x:(0,s.YT)(e,"x","isInf")};return r.T2.runKernel(a.E3$,t)}})},6044:(e,t,n)=>{"use strict";n.d(t,{j:()=>c});var r=n(2164),a=n(9554),s=n(4148),o=n(1426),i=n(7538),l=n(7892),u=n(5583);const c=(0,l.op)({maxPool_:function(e,t,n,l,c){const d=(0,s.YT)(e,"x","maxPool");let p=d,h=!1;3===d.rank&&(h=!0,p=(0,u.t)(d,[1,d.shape[0],d.shape[1],d.shape[2]])),o.vA(4===p.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${p.rank}.`)),o.vA(i.G0(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),i.s_("maxPool",l,c);const f={x:p},m={filterSize:t,strides:n,pad:l,dimRoundingMode:c},g=r.T2.runKernel(a.t3d,f,m);return h?(0,u.t)(g,[g.shape[1],g.shape[2],g.shape[3]]):g}})},6149:(e,t,n)=>{"use strict";n.d(t,{f:()=>i});var r=n(2164),a=n(9554),s=n(4148),o=n(1426);const i=(0,n(7892).op)({complex_:function(e,t){const n=(0,s.YT)(e,"real","complex"),i=(0,s.YT)(t,"imag","complex");o.O3(n.shape,i.shape,`real and imag shapes, ${n.shape} and ${i.shape}, must match in call to tf.complex().`);const l={real:n,imag:i};return r.T2.runKernel(a.pr3,l)}})},6178:(e,t,n)=>{"use strict";n.d(t,{k:()=>o});var r=n(2164),a=n(9554),s=n(4148);const o=(0,n(7892).op)({gather_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;const i={x:(0,s.YT)(e,"x","gather"),indices:(0,s.YT)(t,"indices","gather","int32")},l={axis:n,batchDims:o};return r.T2.runKernel(a.mxL,i,l)}})},6238:(e,t,n)=>{"use strict";n.d(t,{j:()=>a});var r=n(5743);function a(e,t,n,a){const s=r.util.getTypedArrayFromDType(a,r.util.sizeFromShape(n));for(let r=0;r<s.length;++r){const n=r*t;let a=e[n];for(let r=0;r<t;++r){const t=e[n+r];(Number.isNaN(t)||t>a)&&(a=t)}s[r]=a}return s}},6288:function(e,t,n){var r;!function(e,a){function s(e){var t=this;t.next=function(){var e,n,r=t.w,a=t.X,s=t.i;return t.w=r=r+1640531527|0,n=a[s+34&127],e=a[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=a[s]=n^e,t.i=s,n+(r^r>>>16)|0},function(e,t){var n,r,a,s,o,i=[],l=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,l=Math.max(l,t.length)),a=0,s=-32;s<l;++s)t&&(r^=t.charCodeAt((s+32)%t.length)),0===s&&(o=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(o=o+1640531527|0,a=0==(n=i[127&s]^=r+o)?a+1:0);for(a>=128&&(i[127&(t&&t.length||0)]=-1),a=127,s=512;s>0;--s)r=i[a+34&127],n=i[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,i[a]=r^n;e.w=o,e.X=i,e.i=a}(t,e)}function o(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function i(e,t){null==e&&(e=+new Date);var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.X&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=i:n.amdD&&n.amdO?void 0===(r=function(){return i}.call(t,n,t,a))||(a.exports=r):this.xor4096=i}(0,e=n.nmd(e),n.amdD)},6309:(e,t,n)=>{"use strict";n.d(t,{V:()=>o});var r=n(2164),a=n(9554),s=n(4148);const o=(0,n(7892).op)({reciprocal_:function(e){const t={x:(0,s.YT)(e,"x","reciprocal")};return r.T2.runKernel(a.huO,t)}})},6349:(e,t,n)=>{"use strict";n.d(t,{F:()=>i});var r=n(2164),a=n(9554),s=n(8804),o=n(4148);const i=(0,n(7892).op)({atan2_:function(e,t){let n=(0,o.YT)(e,"a","atan2"),i=(0,o.YT)(t,"b","atan2");[n,i]=(0,s.makeTypesMatch)(n,i);const l={a:n,b:i};return r.T2.runKernel(a.lxb,l)}})},6410:(e,t,n)=>{"use strict";n.d(t,{c:()=>l});var r=n(2164),a=n(9554),s=n(1426),o=n(7892),i=n(5583);const l=(0,o.op)({conv3DBackpropInput_:function(e,t,n,o,l){s.vA(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let u=e,c=t,d=!1;4===t.rank&&(d=!0,c=(0,i.t)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),u=[1,e[0],e[1],e[2],e[3]]);const p=u[4],h=c.shape[4];s.vA(5===u.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${u.length}.`)),s.vA(5===c.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${c.rank}`)),s.vA(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),s.vA(p===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${p}) must match input depth for filter ${n.shape[3]}.`)),s.vA(h===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[4]}.`));const f={dy:c,filter:n},m={pad:l,strides:o,inputShape:u},g=r.T2.runKernel(a.gC7,f,m);return d?(0,i.t)(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}})},6434:(e,t,n)=>{"use strict";n.d(t,{O:()=>l});var r=n(4148),a=n(1426),s=n(5162),o=n(7892),i=n(5583);const l=(0,o.op)({dot_:function(e,t){const n=(0,r.YT)(e,"t1","dot"),o=(0,r.YT)(t,"t2","dot");a.vA((1===n.rank||2===n.rank)&&(1===o.rank||2===o.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${o.rank}.`));const l=1===n.rank?n.size:n.shape[1],u=1===o.rank?o.size:o.shape[0];if(a.vA(l===u,(()=>`Error in dot: inner dimensions of inputs must match, but got ${l} and ${u}.`)),1===n.rank&&1===o.rank){const e=(0,i.t)(n,[1,-1]),t=(0,i.t)(o,[-1,1]),r=(0,s.N)(e,t);return(0,i.t)(r,[])}if(1===n.rank&&2===o.rank){const e=(0,i.t)(n,[1,-1]),t=(0,i.t)(o,[o.shape[0],o.shape[1]]),r=(0,s.N)(e,t);return(0,i.t)(r,[r.size])}if(2===n.rank&&1===o.rank){const e=(0,i.t)(o,[-1,1]),t=(0,s.N)(n,e);return(0,i.t)(t,[t.size])}{const e=(0,i.t)(o,[o.shape[0],o.shape[1]]);return(0,s.N)(n,e)}}})},6464:(e,t,n)=>{"use strict";n.d(t,{y:()=>o});var r=n(2164),a=n(9554),s=n(4148);const o=(0,n(7892).op)({asinh_:function(e){const t={x:(0,s.YT)(e,"x","asinh")};return r.T2.runKernel(a.epO,t)}})},6509:(e,t,n)=>{"use strict";n.d(t,{L:()=>o});var r=n(2164),a=n(9554),s=n(4148);const o=(0,n(7892).op)({round_:function(e){const t={x:(0,s.YT)(e,"x","round")};return r.T2.runKernel(a.hVg,t)}})},6532:(e,t,n)=>{"use strict";n.d(t,{y:()=>o});var r=n(2164),a=n(9554),s=n(4148);const o=(0,n(7892).op)({tanh_:function(e){const t={x:(0,s.YT)(e,"x","tanh","float32")};return r.T2.runKernel(a.iuW,t)}})},6561:(e,t,n)=>{"use strict";n.d(t,{B:()=>u});var r=n(2164),a=n(9554),s=n(8804),o=n(4148),i=n(8805),l=n(7794);const u=(0,n(7892).op)({minimum_:function(e,t){let n=(0,o.YT)(e,"a","minimum"),u=(0,o.YT)(t,"b","minimum");[n,u]=(0,s.makeTypesMatch)(n,u),"bool"===n.dtype&&(n=(0,l.w)(n,"int32"),u=(0,l.w)(u,"int32")),(0,i.assertAndGetBroadcastShape)(n.shape,u.shape);const c={a:n,b:u};return r.T2.runKernel(a.LG0,c)}})},6574:(e,t,n)=>{"use strict";function r(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];console.log(e.toString(t))}n.d(t,{y:()=>r})},6584:(e,t,n)=>{"use strict";n.d(t,{K:()=>u});var r=n(2164),a=n(9554),s=n(4148),o=n(1426),i=n(7892),l=n(5583);const u=(0,i.op)({localResponseNormalization_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:5,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,u=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.5;const c=(0,s.YT)(e,"x","localResponseNormalization");o.vA(4===c.rank||3===c.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${c.rank}.`)),o.vA(o.E6(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let d=c,p=!1;3===c.rank&&(p=!0,d=(0,l.t)(c,[1,c.shape[0],c.shape[1],c.shape[2]]));const h={x:d},f={depthRadius:t,bias:n,alpha:i,beta:u},m=r.T2.runKernel(a.jM4,h,f);return p?(0,l.t)(m,[m.shape[1],m.shape[2],m.shape[3]]):m}})},6635:(e,t,n)=>{"use strict";n.d(t,{q:()=>a});var r=n(5743);function a(e,t,n,a){if(e===t||e<t&&n<0||t<e&&n>1)return r.util.makeZerosTypedArray(0,a);const s=Math.abs(Math.ceil((t-e)/n)),o=r.util.makeZerosTypedArray(s,a);t<e&&1===n&&(n=-1),o[0]=e;for(let r=1;r<o.length;r++)o[r]=o[r-1]+n;return o}},6672:(e,t,n)=>{"use strict";var r=n(5043);function a(e){var t="https://react.dev/errors/"+e;if(1<arguments.length){t+="?args[]="+encodeURIComponent(arguments[1]);for(var n=2;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n])}return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}function s(){}var o={d:{f:s,r:function(){throw Error(a(522))},D:s,C:s,L:s,m:s,X:s,S:s,M:s},p:0,findDOMNode:null},i=Symbol.for("react.portal");var l=r.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE;function u(e,t){return"font"===e?"":"string"===typeof t?"use-credentials"===t?t:"":void 0}t.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE=o,t.createPortal=function(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!t||1!==t.nodeType&&9!==t.nodeType&&11!==t.nodeType)throw Error(a(299));return function(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:i,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}(e,t,null,n)},t.flushSync=function(e){var t=l.T,n=o.p;try{if(l.T=null,o.p=2,e)return e()}finally{l.T=t,o.p=n,o.d.f()}},t.preconnect=function(e,t){"string"===typeof e&&(t?t="string"===typeof(t=t.crossOrigin)?"use-credentials"===t?t:"":void 0:t=null,o.d.C(e,t))},t.prefetchDNS=function(e){"string"===typeof e&&o.d.D(e)},t.preinit=function(e,t){if("string"===typeof e&&t&&"string"===typeof t.as){var n=t.as,r=u(n,t.crossOrigin),a="string"===typeof t.integrity?t.integrity:void 0,s="string"===typeof t.fetchPriority?t.fetchPriority:void 0;"style"===n?o.d.S(e,"string"===typeof t.precedence?t.precedence:void 0,{crossOrigin:r,integrity:a,fetchPriority:s}):"script"===n&&o.d.X(e,{crossOrigin:r,integrity:a,fetchPriority:s,nonce:"string"===typeof t.nonce?t.nonce:void 0})}},t.preinitModule=function(e,t){if("string"===typeof e)if("object"===typeof t&&null!==t){if(null==t.as||"script"===t.as){var n=u(t.as,t.crossOrigin);o.d.M(e,{crossOrigin:n,integrity:"string"===typeof t.integrity?t.integrity:void 0,nonce:"string"===typeof t.nonce?t.nonce:void 0})}}else null==t&&o.d.M(e)},t.preload=function(e,t){if("string"===typeof e&&"object"===typeof t&&null!==t&&"string"===typeof t.as){var n=t.as,r=u(n,t.crossOrigin);o.d.L(e,n,{crossOrigin:r,integrity:"string"===typeof t.integrity?t.integrity:void 0,nonce:"string"===typeof t.nonce?t.nonce:void 0,type:"string"===typeof t.type?t.type:void 0,fetchPriority:"string"===typeof t.fetchPriority?t.fetchPriority:void 0,referrerPolicy:"string"===typeof t.referrerPolicy?t.referrerPolicy:void 0,imageSrcSet:"string"===typeof t.imageSrcSet?t.imageSrcSet:void 0,imageSizes:"string"===typeof t.imageSizes?t.imageSizes:void 0,media:"string"===typeof t.media?t.media:void 0})}},t.preloadModule=function(e,t){if("string"===typeof e)if(t){var n=u(t.as,t.crossOrigin);o.d.m(e,{as:"string"===typeof t.as&&"script"!==t.as?t.as:void 0,crossOrigin:n,integrity:"string"===typeof t.integrity?t.integrity:void 0})}else o.d.m(e)},t.requestFormReset=function(e){o.d.r(e)},t.unstable_batchedUpdates=function(e,t){return e(t)},t.useFormState=function(e,t,n){return l.H.useFormState(e,t,n)},t.useFormStatus=function(){return l.H.useHostTransitionStatus()},t.version="19.1.0"},6692:(e,t,n)=>{"use strict";function r(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,a=e.length,s=0,o=!1;for(;r<a;){s=r+(a-r>>>1);const i=n(t,e[s]);i>0?r=s+1:(a=s,o=!i)}return o?r:-r-1}(e,t,n||a)}(e,t,n),s=r<0?-(r+1):r;e.splice(s,0,t)}function a(e,t){return e>t?1:e<t?-1:0}function s(e,t,n,r,a){return l(e,t,n,r,a,0)}function o(e,t,n,r,a,s){return l(e,t,n,r,a,0,!1,s,!0)}function i(e,t,n,r,a,s){return l(e,t,n,r,a,s,!0)}function l(e,t,n,a,s,o){let i=arguments.length>6&&void 0!==arguments[6]&&arguments[6],l=arguments.length>7&&void 0!==arguments[7]&&arguments[7],p=arguments.length>8&&void 0!==arguments[8]&&arguments[8];const h=[];for(let r=0;r<t.length;r++)t[r]>s&&h.push({score:t[r],boxIndex:r,suppressBeginIndex:0});h.sort(d);const f=o>0?-.5/o:0,m=[],g=[];for(;m.length<n&&h.length>0;){const t=h.pop(),{score:n,boxIndex:o,suppressBeginIndex:i}=t;if(n<s)break;let l=!1;for(let r=m.length-1;r>=i;--r){const n=u(e,o,m[r]);if(n>=a){l=!0;break}if(t.score=t.score*c(a,f,n),t.score<=s)break}t.suppressBeginIndex=m.length,l||(t.score===n?(m.push(o),g.push(t.score)):t.score>s&&r(h,t,d))}const y=m.length,b=n-y;l&&b>0&&(m.push(...new Array(b).fill(0)),g.push(...new Array(b).fill(0)));const v={selectedIndices:m};return i&&(v.selectedScores=g),p&&(v.validOutputs=y),v}function u(e,t,n){const r=e.subarray(4*t,4*t+4),a=e.subarray(4*n,4*n+4),s=Math.min(r[0],r[2]),o=Math.min(r[1],r[3]),i=Math.max(r[0],r[2]),l=Math.max(r[1],r[3]),u=Math.min(a[0],a[2]),c=Math.min(a[1],a[3]),d=Math.max(a[0],a[2]),p=Math.max(a[1],a[3]),h=(i-s)*(l-o),f=(d-u)*(p-c);if(h<=0||f<=0)return 0;const m=Math.max(s,u),g=Math.max(o,c),y=Math.min(i,d),b=Math.min(l,p),v=Math.max(y-m,0)*Math.max(b-g,0);return v/(h+f-v)}function c(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function d(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}n.d(t,{c7:()=>s,ZS:()=>o,ut:()=>i})},6719:(e,t,n)=>{"use strict";n.d(t,{V:()=>o});var r=n(2164),a=n(9554),s=n(4148);const o=(0,n(7892).op)({softmax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=(0,s.YT)(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const o={logits:n},i={dim:t};return r.T2.runKernel(a.rFG,o,i)}})},6777:(e,t,n)=>{"use strict";n.d(t,{Z:()=>o});var r=n(2164),a=n(9554),s=n(4148);const o=(0,n(7892).op)({rsqrt_:function(e){const t={x:(0,s.YT)(e,"x","rsqrt","float32")};return r.T2.runKernel(a.TOR,t)}})},6790:(e,t,n)=>{"use strict";n.d(t,{GJ:()=>r,uI:()=>a});class r{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class a{refCount(e){return s("refCount")}incRef(e){return s("incRef")}timerAvailable(){return!0}time(e){return s("time")}read(e){return s("read")}readSync(e){return s("readSync")}readToGPU(e,t){return s("readToGPU")}numDataIds(){return s("numDataIds")}disposeData(e,t){return s("disposeData")}write(e,t,n){return s("write")}move(e,t,n,r,a){return s("move")}createTensorFromGPUData(e,t,n){return s("createTensorFromGPUData")}memory(){return s("memory")}floatPrecision(){return s("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return s("dispose")}}function s(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}},6865:(e,t,n)=>{"use strict";n.d(t,{M:()=>o});var r=n(2164),a=n(9554),s=n(4148);const o=(0,n(7892).op)({oneHot_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"int32";if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const l={indices:(0,s.YT)(e,"indices","oneHot","int32")},u={dtype:i,depth:t,onValue:n,offValue:o};return r.T2.runKernel(a.urI,l,u)}})},6927:(e,t,n)=>{"use strict";n.d(t,{H:()=>u});var r=n(2164),a=n(9554),s=n(1426),o=n(7538),i=n(7892),l=n(5583);const u=(0,i.op)({conv2DBackpropFilter_:function(e,t,n,i,u){let c=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC",d=arguments.length>6?arguments[6]:void 0,p=e;3===e.rank&&(p=(0,l.t)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let h=t;3===h.rank&&(h=(0,l.t)(t,[1,t.shape[0],t.shape[1],t.shape[2]])),s.vA(4===p.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${p.shape}.`)),s.vA(4===h.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${h.shape}.`)),s.vA(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const f="NHWC"===c?p.shape[3]:p.shape[1],m="NHWC"===c?h.shape[3]:h.shape[1];s.vA(f===n[2],(()=>`Error in conv2dDerFilter: depth of input ${f}) must match input depth in filter (${n[2]}.`)),s.vA(m===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${m}) must match output depth for filter (${n[3]}).`)),o.s_("conv2dDerFilter",u,d);const g={x:p,dy:h},y={strides:i,pad:u,dataFormat:c,dimRoundingMode:d,filterShape:n};return r.T2.runKernel(a.rFm,g,y)}})},7004:(e,t,n)=>{"use strict";var r=n(8853),a=n(5043),s=n(7950);function o(e){var t="https://react.dev/errors/"+e;if(1<arguments.length){t+="?args[]="+encodeURIComponent(arguments[1]);for(var n=2;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n])}return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}function i(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType)}function l(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!==(4098&(t=e).flags)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function u(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&(null!==(e=e.alternate)&&(t=e.memoizedState)),null!==t)return t.dehydrated}return null}function c(e){if(l(e)!==e)throw Error(o(188))}function d(e){var t=e.tag;if(5===t||26===t||27===t||6===t)return e;for(e=e.child;null!==e;){if(null!==(t=d(e)))return t;e=e.sibling}return null}var p=Object.assign,h=Symbol.for("react.element"),f=Symbol.for("react.transitional.element"),m=Symbol.for("react.portal"),g=Symbol.for("react.fragment"),y=Symbol.for("react.strict_mode"),b=Symbol.for("react.profiler"),v=Symbol.for("react.provider"),x=Symbol.for("react.consumer"),k=Symbol.for("react.context"),w=Symbol.for("react.forward_ref"),S=Symbol.for("react.suspense"),T=Symbol.for("react.suspense_list"),N=Symbol.for("react.memo"),I=Symbol.for("react.lazy");Symbol.for("react.scope");var C=Symbol.for("react.activity");Symbol.for("react.legacy_hidden"),Symbol.for("react.tracing_marker");var E=Symbol.for("react.memo_cache_sentinel");Symbol.for("react.view_transition");var $=Symbol.iterator;function A(e){return null===e||"object"!==typeof e?null:"function"===typeof(e=$&&e[$]||e["@@iterator"])?e:null}var _=Symbol.for("react.client.reference");function R(e){if(null==e)return null;if("function"===typeof e)return e.$$typeof===_?null:e.displayName||e.name||null;if("string"===typeof e)return e;switch(e){case g:return"Fragment";case b:return"Profiler";case y:return"StrictMode";case S:return"Suspense";case T:return"SuspenseList";case C:return"Activity"}if("object"===typeof e)switch(e.$$typeof){case m:return"Portal";case k:return(e.displayName||"Context")+".Provider";case x:return(e._context.displayName||"Context")+".Consumer";case w:var t=e.render;return(e=e.displayName)||(e=""!==(e=t.displayName||t.name||"")?"ForwardRef("+e+")":"ForwardRef"),e;case N:return null!==(t=e.displayName||null)?t:R(e.type)||"Memo";case I:t=e._payload,e=e._init;try{return R(e(t))}catch(n){}}return null}var F=Array.isArray,O=a.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,D=s.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,M={pending:!1,data:null,method:null,action:null},P=[],L=-1;function z(e){return{current:e}}function B(e){0>L||(e.current=P[L],P[L]=null,L--)}function V(e,t){L++,P[L]=e.current,e.current=t}var W=z(null),U=z(null),G=z(null),j=z(null);function H(e,t){switch(V(G,t),V(U,e),V(W,null),t.nodeType){case 9:case 11:e=(e=t.documentElement)&&(e=e.namespaceURI)?ad(e):0;break;default:if(e=t.tagName,t=t.namespaceURI)e=sd(t=ad(t),e);else switch(e){case"svg":e=1;break;case"math":e=2;break;default:e=0}}B(W),V(W,e)}function Y(){B(W),B(U),B(G)}function q(e){null!==e.memoizedState&&V(j,e);var t=W.current,n=sd(t,e.type);t!==n&&(V(U,e),V(W,n))}function K(e){U.current===e&&(B(W),B(U)),j.current===e&&(B(j),qd._currentValue=M)}var X=Object.prototype.hasOwnProperty,Z=r.unstable_scheduleCallback,Q=r.unstable_cancelCallback,J=r.unstable_shouldYield,ee=r.unstable_requestPaint,te=r.unstable_now,ne=r.unstable_getCurrentPriorityLevel,re=r.unstable_ImmediatePriority,ae=r.unstable_UserBlockingPriority,se=r.unstable_NormalPriority,oe=r.unstable_LowPriority,ie=r.unstable_IdlePriority,le=r.log,ue=r.unstable_setDisableYieldValue,ce=null,de=null;function pe(e){if("function"===typeof le&&ue(e),de&&"function"===typeof de.setStrictMode)try{de.setStrictMode(ce,e)}catch(t){}}var he=Math.clz32?Math.clz32:function(e){return 0===(e>>>=0)?32:31-(fe(e)/me|0)|0},fe=Math.log,me=Math.LN2;var ge=256,ye=4194304;function be(e){var t=42&e;if(0!==t)return t;switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:return 64;case 128:return 128;case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return 4194048&e;case 4194304:case 8388608:case 16777216:case 33554432:return 62914560&e;case 67108864:return 67108864;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 0;default:return e}}function ve(e,t,n){var r=e.pendingLanes;if(0===r)return 0;var a=0,s=e.suspendedLanes,o=e.pingedLanes;e=e.warmLanes;var i=134217727&r;return 0!==i?0!==(r=i&~s)?a=be(r):0!==(o&=i)?a=be(o):n||0!==(n=i&~e)&&(a=be(n)):0!==(i=r&~s)?a=be(i):0!==o?a=be(o):n||0!==(n=r&~e)&&(a=be(n)),0===a?0:0!==t&&t!==a&&0===(t&s)&&((s=a&-a)>=(n=t&-t)||32===s&&0!==(4194048&n))?t:a}function xe(e,t){return 0===(e.pendingLanes&~(e.suspendedLanes&~e.pingedLanes)&t)}function ke(e,t){switch(e){case 1:case 2:case 4:case 8:case 64:return t+250;case 16:case 32:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return t+5e3;default:return-1}}function we(){var e=ge;return 0===(4194048&(ge<<=1))&&(ge=256),e}function Se(){var e=ye;return 0===(62914560&(ye<<=1))&&(ye=4194304),e}function Te(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function Ne(e,t){e.pendingLanes|=t,268435456!==t&&(e.suspendedLanes=0,e.pingedLanes=0,e.warmLanes=0)}function Ie(e,t,n){e.pendingLanes|=t,e.suspendedLanes&=~t;var r=31-he(t);e.entangledLanes|=t,e.entanglements[r]=1073741824|e.entanglements[r]|4194090&n}function Ce(e,t){var n=e.entangledLanes|=t;for(e=e.entanglements;n;){var r=31-he(n),a=1<<r;a&t|e[r]&t&&(e[r]|=t),n&=~a}}function Ee(e){switch(e){case 2:e=1;break;case 8:e=4;break;case 32:e=16;break;case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:e=128;break;case 268435456:e=134217728;break;default:e=0}return e}function $e(e){return 2<(e&=-e)?8<e?0!==(134217727&e)?32:268435456:8:2}function Ae(){var e=D.p;return 0!==e?e:void 0===(e=window.event)?32:up(e.type)}var _e=Math.random().toString(36).slice(2),Re="__reactFiber$"+_e,Fe="__reactProps$"+_e,Oe="__reactContainer$"+_e,De="__reactEvents$"+_e,Me="__reactListeners$"+_e,Pe="__reactHandles$"+_e,Le="__reactResources$"+_e,ze="__reactMarker$"+_e;function Be(e){delete e[Re],delete e[Fe],delete e[De],delete e[Me],delete e[Pe]}function Ve(e){var t=e[Re];if(t)return t;for(var n=e.parentNode;n;){if(t=n[Oe]||n[Re]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=vd(e);null!==e;){if(n=e[Re])return n;e=vd(e)}return t}n=(e=n).parentNode}return null}function We(e){if(e=e[Re]||e[Oe]){var t=e.tag;if(5===t||6===t||13===t||26===t||27===t||3===t)return e}return null}function Ue(e){var t=e.tag;if(5===t||26===t||27===t||6===t)return e.stateNode;throw Error(o(33))}function Ge(e){var t=e[Le];return t||(t=e[Le]={hoistableStyles:new Map,hoistableScripts:new Map}),t}function je(e){e[ze]=!0}var He=new Set,Ye={};function qe(e,t){Ke(e,t),Ke(e+"Capture",t)}function Ke(e,t){for(Ye[e]=t,e=0;e<t.length;e++)He.add(t[e])}var Xe,Ze,Qe=RegExp("^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$"),Je={},et={};function tt(e,t,n){if(a=t,X.call(et,a)||!X.call(Je,a)&&(Qe.test(a)?et[a]=!0:(Je[a]=!0,0)))if(null===n)e.removeAttribute(t);else{switch(typeof n){case"undefined":case"function":case"symbol":return void e.removeAttribute(t);case"boolean":var r=t.toLowerCase().slice(0,5);if("data-"!==r&&"aria-"!==r)return void e.removeAttribute(t)}e.setAttribute(t,""+n)}var a}function nt(e,t,n){if(null===n)e.removeAttribute(t);else{switch(typeof n){case"undefined":case"function":case"symbol":case"boolean":return void e.removeAttribute(t)}e.setAttribute(t,""+n)}}function rt(e,t,n,r){if(null===r)e.removeAttribute(n);else{switch(typeof r){case"undefined":case"function":case"symbol":case"boolean":return void e.removeAttribute(n)}e.setAttributeNS(t,n,""+r)}}function at(e){if(void 0===Xe)try{throw Error()}catch(n){var t=n.stack.trim().match(/\n( *(at )?)/);Xe=t&&t[1]||"",Ze=-1<n.stack.indexOf("\n    at")?" (<anonymous>)":-1<n.stack.indexOf("@")?"@unknown:0:0":""}return"\n"+Xe+e+Ze}var st=!1;function ot(e,t){if(!e||st)return"";st=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{var r={DetermineComponentFrameRoot:function(){try{if(t){var n=function(){throw Error()};if(Object.defineProperty(n.prototype,"props",{set:function(){throw Error()}}),"object"===typeof Reflect&&Reflect.construct){try{Reflect.construct(n,[])}catch(a){var r=a}Reflect.construct(e,[],n)}else{try{n.call()}catch(s){r=s}e.call(n.prototype)}}else{try{throw Error()}catch(o){r=o}(n=e())&&"function"===typeof n.catch&&n.catch((function(){}))}}catch(i){if(i&&r&&"string"===typeof i.stack)return[i.stack,r.stack]}return[null,null]}};r.DetermineComponentFrameRoot.displayName="DetermineComponentFrameRoot";var a=Object.getOwnPropertyDescriptor(r.DetermineComponentFrameRoot,"name");a&&a.configurable&&Object.defineProperty(r.DetermineComponentFrameRoot,"name",{value:"DetermineComponentFrameRoot"});var s=r.DetermineComponentFrameRoot(),o=s[0],i=s[1];if(o&&i){var l=o.split("\n"),u=i.split("\n");for(a=r=0;r<l.length&&!l[r].includes("DetermineComponentFrameRoot");)r++;for(;a<u.length&&!u[a].includes("DetermineComponentFrameRoot");)a++;if(r===l.length||a===u.length)for(r=l.length-1,a=u.length-1;1<=r&&0<=a&&l[r]!==u[a];)a--;for(;1<=r&&0<=a;r--,a--)if(l[r]!==u[a]){if(1!==r||1!==a)do{if(r--,0>--a||l[r]!==u[a]){var c="\n"+l[r].replace(" at new "," at ");return e.displayName&&c.includes("<anonymous>")&&(c=c.replace("<anonymous>",e.displayName)),c}}while(1<=r&&0<=a);break}}}finally{st=!1,Error.prepareStackTrace=n}return(n=e?e.displayName||e.name:"")?at(n):""}function it(e){switch(e.tag){case 26:case 27:case 5:return at(e.type);case 16:return at("Lazy");case 13:return at("Suspense");case 19:return at("SuspenseList");case 0:case 15:return ot(e.type,!1);case 11:return ot(e.type.render,!1);case 1:return ot(e.type,!0);case 31:return at("Activity");default:return""}}function lt(e){try{var t="";do{t+=it(e),e=e.return}while(e);return t}catch(n){return"\nError generating stack: "+n.message+"\n"+n.stack}}function ut(e){switch(typeof e){case"bigint":case"boolean":case"number":case"string":case"undefined":case"object":return e;default:return""}}function ct(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function dt(e){e._valueTracker||(e._valueTracker=function(e){var t=ct(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&"undefined"!==typeof n&&"function"===typeof n.get&&"function"===typeof n.set){var a=n.get,s=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return a.call(this)},set:function(e){r=""+e,s.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function pt(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=ct(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function ht(e){if("undefined"===typeof(e=e||("undefined"!==typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}var ft=/[\n"\\]/g;function mt(e){return e.replace(ft,(function(e){return"\\"+e.charCodeAt(0).toString(16)+" "}))}function gt(e,t,n,r,a,s,o,i){e.name="",null!=o&&"function"!==typeof o&&"symbol"!==typeof o&&"boolean"!==typeof o?e.type=o:e.removeAttribute("type"),null!=t?"number"===o?(0===t&&""===e.value||e.value!=t)&&(e.value=""+ut(t)):e.value!==""+ut(t)&&(e.value=""+ut(t)):"submit"!==o&&"reset"!==o||e.removeAttribute("value"),null!=t?bt(e,o,ut(t)):null!=n?bt(e,o,ut(n)):null!=r&&e.removeAttribute("value"),null==a&&null!=s&&(e.defaultChecked=!!s),null!=a&&(e.checked=a&&"function"!==typeof a&&"symbol"!==typeof a),null!=i&&"function"!==typeof i&&"symbol"!==typeof i&&"boolean"!==typeof i?e.name=""+ut(i):e.removeAttribute("name")}function yt(e,t,n,r,a,s,o,i){if(null!=s&&"function"!==typeof s&&"symbol"!==typeof s&&"boolean"!==typeof s&&(e.type=s),null!=t||null!=n){if(!("submit"!==s&&"reset"!==s||void 0!==t&&null!==t))return;n=null!=n?""+ut(n):"",t=null!=t?""+ut(t):n,i||t===e.value||(e.value=t),e.defaultValue=t}r="function"!==typeof(r=null!=r?r:a)&&"symbol"!==typeof r&&!!r,e.checked=i?e.checked:!!r,e.defaultChecked=!!r,null!=o&&"function"!==typeof o&&"symbol"!==typeof o&&"boolean"!==typeof o&&(e.name=o)}function bt(e,t,n){"number"===t&&ht(e.ownerDocument)===e||e.defaultValue===""+n||(e.defaultValue=""+n)}function vt(e,t,n,r){if(e=e.options,t){t={};for(var a=0;a<n.length;a++)t["$"+n[a]]=!0;for(n=0;n<e.length;n++)a=t.hasOwnProperty("$"+e[n].value),e[n].selected!==a&&(e[n].selected=a),a&&r&&(e[n].defaultSelected=!0)}else{for(n=""+ut(n),t=null,a=0;a<e.length;a++){if(e[a].value===n)return e[a].selected=!0,void(r&&(e[a].defaultSelected=!0));null!==t||e[a].disabled||(t=e[a])}null!==t&&(t.selected=!0)}}function xt(e,t,n){null==t||((t=""+ut(t))!==e.value&&(e.value=t),null!=n)?e.defaultValue=null!=n?""+ut(n):"":e.defaultValue!==t&&(e.defaultValue=t)}function kt(e,t,n,r){if(null==t){if(null!=r){if(null!=n)throw Error(o(92));if(F(r)){if(1<r.length)throw Error(o(93));r=r[0]}n=r}null==n&&(n=""),t=n}n=ut(t),e.defaultValue=n,(r=e.textContent)===n&&""!==r&&null!==r&&(e.value=r)}function wt(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var St=new Set("animationIterationCount aspectRatio borderImageOutset borderImageSlice borderImageWidth boxFlex boxFlexGroup boxOrdinalGroup columnCount columns flex flexGrow flexPositive flexShrink flexNegative flexOrder gridArea gridRow gridRowEnd gridRowSpan gridRowStart gridColumn gridColumnEnd gridColumnSpan gridColumnStart fontWeight lineClamp lineHeight opacity order orphans scale tabSize widows zIndex zoom fillOpacity floodOpacity stopOpacity strokeDasharray strokeDashoffset strokeMiterlimit strokeOpacity strokeWidth MozAnimationIterationCount MozBoxFlex MozBoxFlexGroup MozLineClamp msAnimationIterationCount msFlex msZoom msFlexGrow msFlexNegative msFlexOrder msFlexPositive msFlexShrink msGridColumn msGridColumnSpan msGridRow msGridRowSpan WebkitAnimationIterationCount WebkitBoxFlex WebKitBoxFlexGroup WebkitBoxOrdinalGroup WebkitColumnCount WebkitColumns WebkitFlex WebkitFlexGrow WebkitFlexPositive WebkitFlexShrink WebkitLineClamp".split(" "));function Tt(e,t,n){var r=0===t.indexOf("--");null==n||"boolean"===typeof n||""===n?r?e.setProperty(t,""):"float"===t?e.cssFloat="":e[t]="":r?e.setProperty(t,n):"number"!==typeof n||0===n||St.has(t)?"float"===t?e.cssFloat=n:e[t]=(""+n).trim():e[t]=n+"px"}function Nt(e,t,n){if(null!=t&&"object"!==typeof t)throw Error(o(62));if(e=e.style,null!=n){for(var r in n)!n.hasOwnProperty(r)||null!=t&&t.hasOwnProperty(r)||(0===r.indexOf("--")?e.setProperty(r,""):"float"===r?e.cssFloat="":e[r]="");for(var a in t)r=t[a],t.hasOwnProperty(a)&&n[a]!==r&&Tt(e,a,r)}else for(var s in t)t.hasOwnProperty(s)&&Tt(e,s,t[s])}function It(e){if(-1===e.indexOf("-"))return!1;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var Ct=new Map([["acceptCharset","accept-charset"],["htmlFor","for"],["httpEquiv","http-equiv"],["crossOrigin","crossorigin"],["accentHeight","accent-height"],["alignmentBaseline","alignment-baseline"],["arabicForm","arabic-form"],["baselineShift","baseline-shift"],["capHeight","cap-height"],["clipPath","clip-path"],["clipRule","clip-rule"],["colorInterpolation","color-interpolation"],["colorInterpolationFilters","color-interpolation-filters"],["colorProfile","color-profile"],["colorRendering","color-rendering"],["dominantBaseline","dominant-baseline"],["enableBackground","enable-background"],["fillOpacity","fill-opacity"],["fillRule","fill-rule"],["floodColor","flood-color"],["floodOpacity","flood-opacity"],["fontFamily","font-family"],["fontSize","font-size"],["fontSizeAdjust","font-size-adjust"],["fontStretch","font-stretch"],["fontStyle","font-style"],["fontVariant","font-variant"],["fontWeight","font-weight"],["glyphName","glyph-name"],["glyphOrientationHorizontal","glyph-orientation-horizontal"],["glyphOrientationVertical","glyph-orientation-vertical"],["horizAdvX","horiz-adv-x"],["horizOriginX","horiz-origin-x"],["imageRendering","image-rendering"],["letterSpacing","letter-spacing"],["lightingColor","lighting-color"],["markerEnd","marker-end"],["markerMid","marker-mid"],["markerStart","marker-start"],["overlinePosition","overline-position"],["overlineThickness","overline-thickness"],["paintOrder","paint-order"],["panose-1","panose-1"],["pointerEvents","pointer-events"],["renderingIntent","rendering-intent"],["shapeRendering","shape-rendering"],["stopColor","stop-color"],["stopOpacity","stop-opacity"],["strikethroughPosition","strikethrough-position"],["strikethroughThickness","strikethrough-thickness"],["strokeDasharray","stroke-dasharray"],["strokeDashoffset","stroke-dashoffset"],["strokeLinecap","stroke-linecap"],["strokeLinejoin","stroke-linejoin"],["strokeMiterlimit","stroke-miterlimit"],["strokeOpacity","stroke-opacity"],["strokeWidth","stroke-width"],["textAnchor","text-anchor"],["textDecoration","text-decoration"],["textRendering","text-rendering"],["transformOrigin","transform-origin"],["underlinePosition","underline-position"],["underlineThickness","underline-thickness"],["unicodeBidi","unicode-bidi"],["unicodeRange","unicode-range"],["unitsPerEm","units-per-em"],["vAlphabetic","v-alphabetic"],["vHanging","v-hanging"],["vIdeographic","v-ideographic"],["vMathematical","v-mathematical"],["vectorEffect","vector-effect"],["vertAdvY","vert-adv-y"],["vertOriginX","vert-origin-x"],["vertOriginY","vert-origin-y"],["wordSpacing","word-spacing"],["writingMode","writing-mode"],["xmlnsXlink","xmlns:xlink"],["xHeight","x-height"]]),Et=/^[\u0000-\u001F ]*j[\r\n\t]*a[\r\n\t]*v[\r\n\t]*a[\r\n\t]*s[\r\n\t]*c[\r\n\t]*r[\r\n\t]*i[\r\n\t]*p[\r\n\t]*t[\r\n\t]*:/i;function $t(e){return Et.test(""+e)?"javascript:throw new Error('React has blocked a javascript: URL as a security precaution.')":e}var At=null;function _t(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var Rt=null,Ft=null;function Ot(e){var t=We(e);if(t&&(e=t.stateNode)){var n=e[Fe]||null;e:switch(e=t.stateNode,t.type){case"input":if(gt(e,n.value,n.defaultValue,n.defaultValue,n.checked,n.defaultChecked,n.type,n.name),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll('input[name="'+mt(""+t)+'"][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var a=r[Fe]||null;if(!a)throw Error(o(90));gt(r,a.value,a.defaultValue,a.defaultValue,a.checked,a.defaultChecked,a.type,a.name)}}for(t=0;t<n.length;t++)(r=n[t]).form===e.form&&pt(r)}break e;case"textarea":xt(e,n.value,n.defaultValue);break e;case"select":null!=(t=n.value)&&vt(e,!!n.multiple,t,!1)}}}var Dt=!1;function Mt(e,t,n){if(Dt)return e(t,n);Dt=!0;try{return e(t)}finally{if(Dt=!1,(null!==Rt||null!==Ft)&&(Vu(),Rt&&(t=Rt,e=Ft,Ft=Rt=null,Ot(t),e)))for(t=0;t<e.length;t++)Ot(e[t])}}function Pt(e,t){var n=e.stateNode;if(null===n)return null;var r=n[Fe]||null;if(null===r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(n&&"function"!==typeof n)throw Error(o(231,t,typeof n));return n}var Lt=!("undefined"===typeof window||"undefined"===typeof window.document||"undefined"===typeof window.document.createElement),zt=!1;if(Lt)try{var Bt={};Object.defineProperty(Bt,"passive",{get:function(){zt=!0}}),window.addEventListener("test",Bt,Bt),window.removeEventListener("test",Bt,Bt)}catch(Fp){zt=!1}var Vt=null,Wt=null,Ut=null;function Gt(){if(Ut)return Ut;var e,t,n=Wt,r=n.length,a="value"in Vt?Vt.value:Vt.textContent,s=a.length;for(e=0;e<r&&n[e]===a[e];e++);var o=r-e;for(t=1;t<=o&&n[r-t]===a[s-t];t++);return Ut=a.slice(e,1<t?1-t:void 0)}function jt(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function Ht(){return!0}function Yt(){return!1}function qt(e){function t(t,n,r,a,s){for(var o in this._reactName=t,this._targetInst=r,this.type=n,this.nativeEvent=a,this.target=s,this.currentTarget=null,e)e.hasOwnProperty(o)&&(t=e[o],this[o]=t?t(a):a[o]);return this.isDefaultPrevented=(null!=a.defaultPrevented?a.defaultPrevented:!1===a.returnValue)?Ht:Yt,this.isPropagationStopped=Yt,this}return p(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!==typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=Ht)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!==typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=Ht)},persist:function(){},isPersistent:Ht}),t}var Kt,Xt,Zt,Qt={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},Jt=qt(Qt),en=p({},Qt,{view:0,detail:0}),tn=qt(en),nn=p({},en,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:fn,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==Zt&&(Zt&&"mousemove"===e.type?(Kt=e.screenX-Zt.screenX,Xt=e.screenY-Zt.screenY):Xt=Kt=0,Zt=e),Kt)},movementY:function(e){return"movementY"in e?e.movementY:Xt}}),rn=qt(nn),an=qt(p({},nn,{dataTransfer:0})),sn=qt(p({},en,{relatedTarget:0})),on=qt(p({},Qt,{animationName:0,elapsedTime:0,pseudoElement:0})),ln=qt(p({},Qt,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}})),un=qt(p({},Qt,{data:0})),cn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},dn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},pn={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function hn(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=pn[e])&&!!t[e]}function fn(){return hn}var mn=qt(p({},en,{key:function(e){if(e.key){var t=cn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=jt(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?dn[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:fn,charCode:function(e){return"keypress"===e.type?jt(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?jt(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}})),gn=qt(p({},nn,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),yn=qt(p({},en,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:fn})),bn=qt(p({},Qt,{propertyName:0,elapsedTime:0,pseudoElement:0})),vn=qt(p({},nn,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0})),xn=qt(p({},Qt,{newState:0,oldState:0})),kn=[9,13,27,32],wn=Lt&&"CompositionEvent"in window,Sn=null;Lt&&"documentMode"in document&&(Sn=document.documentMode);var Tn=Lt&&"TextEvent"in window&&!Sn,Nn=Lt&&(!wn||Sn&&8<Sn&&11>=Sn),In=String.fromCharCode(32),Cn=!1;function En(e,t){switch(e){case"keyup":return-1!==kn.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function $n(e){return"object"===typeof(e=e.detail)&&"data"in e?e.data:null}var An=!1;var _n={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Rn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!_n[e.type]:"textarea"===t}function Fn(e,t,n,r){Rt?Ft?Ft.push(r):Ft=[r]:Rt=r,0<(t=Gc(t,"onChange")).length&&(n=new Jt("onChange","change",null,n,r),e.push({event:n,listeners:t}))}var On=null,Dn=null;function Mn(e){Mc(e,0)}function Pn(e){if(pt(Ue(e)))return e}function Ln(e,t){if("change"===e)return t}var zn=!1;if(Lt){var Bn;if(Lt){var Vn="oninput"in document;if(!Vn){var Wn=document.createElement("div");Wn.setAttribute("oninput","return;"),Vn="function"===typeof Wn.oninput}Bn=Vn}else Bn=!1;zn=Bn&&(!document.documentMode||9<document.documentMode)}function Un(){On&&(On.detachEvent("onpropertychange",Gn),Dn=On=null)}function Gn(e){if("value"===e.propertyName&&Pn(Dn)){var t=[];Fn(t,Dn,e,_t(e)),Mt(Mn,t)}}function jn(e,t,n){"focusin"===e?(Un(),Dn=n,(On=t).attachEvent("onpropertychange",Gn)):"focusout"===e&&Un()}function Hn(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Pn(Dn)}function Yn(e,t){if("click"===e)return Pn(t)}function qn(e,t){if("input"===e||"change"===e)return Pn(t)}var Kn="function"===typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e===1/t)||e!==e&&t!==t};function Xn(e,t){if(Kn(e,t))return!0;if("object"!==typeof e||null===e||"object"!==typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++){var a=n[r];if(!X.call(t,a)||!Kn(e[a],t[a]))return!1}return!0}function Zn(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function Qn(e,t){var n,r=Zn(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=Zn(r)}}function Jn(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?Jn(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function er(e){for(var t=ht((e=null!=e&&null!=e.ownerDocument&&null!=e.ownerDocument.defaultView?e.ownerDocument.defaultView:window).document);t instanceof e.HTMLIFrameElement;){try{var n="string"===typeof t.contentWindow.location.href}catch(r){n=!1}if(!n)break;t=ht((e=t.contentWindow).document)}return t}function tr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var nr=Lt&&"documentMode"in document&&11>=document.documentMode,rr=null,ar=null,sr=null,or=!1;function ir(e,t,n){var r=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;or||null==rr||rr!==ht(r)||("selectionStart"in(r=rr)&&tr(r)?r={start:r.selectionStart,end:r.selectionEnd}:r={anchorNode:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset},sr&&Xn(sr,r)||(sr=r,0<(r=Gc(ar,"onSelect")).length&&(t=new Jt("onSelect","select",null,t,n),e.push({event:t,listeners:r}),t.target=rr)))}function lr(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var ur={animationend:lr("Animation","AnimationEnd"),animationiteration:lr("Animation","AnimationIteration"),animationstart:lr("Animation","AnimationStart"),transitionrun:lr("Transition","TransitionRun"),transitionstart:lr("Transition","TransitionStart"),transitioncancel:lr("Transition","TransitionCancel"),transitionend:lr("Transition","TransitionEnd")},cr={},dr={};function pr(e){if(cr[e])return cr[e];if(!ur[e])return e;var t,n=ur[e];for(t in n)if(n.hasOwnProperty(t)&&t in dr)return cr[e]=n[t];return e}Lt&&(dr=document.createElement("div").style,"AnimationEvent"in window||(delete ur.animationend.animation,delete ur.animationiteration.animation,delete ur.animationstart.animation),"TransitionEvent"in window||delete ur.transitionend.transition);var hr=pr("animationend"),fr=pr("animationiteration"),mr=pr("animationstart"),gr=pr("transitionrun"),yr=pr("transitionstart"),br=pr("transitioncancel"),vr=pr("transitionend"),xr=new Map,kr="abort auxClick beforeToggle cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function wr(e,t){xr.set(e,t),qe(t,[e])}kr.push("scrollEnd");var Sr=new WeakMap;function Tr(e,t){if("object"===typeof e&&null!==e){var n=Sr.get(e);return void 0!==n?n:(t={value:e,source:t,stack:lt(t)},Sr.set(e,t),t)}return{value:e,source:t,stack:lt(t)}}var Nr=[],Ir=0,Cr=0;function Er(){for(var e=Ir,t=Cr=Ir=0;t<e;){var n=Nr[t];Nr[t++]=null;var r=Nr[t];Nr[t++]=null;var a=Nr[t];Nr[t++]=null;var s=Nr[t];if(Nr[t++]=null,null!==r&&null!==a){var o=r.pending;null===o?a.next=a:(a.next=o.next,o.next=a),r.pending=a}0!==s&&Rr(n,a,s)}}function $r(e,t,n,r){Nr[Ir++]=e,Nr[Ir++]=t,Nr[Ir++]=n,Nr[Ir++]=r,Cr|=r,e.lanes|=r,null!==(e=e.alternate)&&(e.lanes|=r)}function Ar(e,t,n,r){return $r(e,t,n,r),Fr(e)}function _r(e,t){return $r(e,null,null,t),Fr(e)}function Rr(e,t,n){e.lanes|=n;var r=e.alternate;null!==r&&(r.lanes|=n);for(var a=!1,s=e.return;null!==s;)s.childLanes|=n,null!==(r=s.alternate)&&(r.childLanes|=n),22===s.tag&&(null===(e=s.stateNode)||1&e._visibility||(a=!0)),e=s,s=s.return;return 3===e.tag?(s=e.stateNode,a&&null!==t&&(a=31-he(n),null===(r=(e=s.hiddenUpdates)[a])?e[a]=[t]:r.push(t),t.lane=536870912|n),s):null}function Fr(e){if(50<Ru)throw Ru=0,Fu=null,Error(o(185));for(var t=e.return;null!==t;)t=(e=t).return;return 3===e.tag?e.stateNode:null}var Or={};function Dr(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.refCleanup=this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Mr(e,t,n,r){return new Dr(e,t,n,r)}function Pr(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Lr(e,t){var n=e.alternate;return null===n?((n=Mr(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.subtreeFlags=0,n.deletions=null),n.flags=65011712&e.flags,n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n.refCleanup=e.refCleanup,n}function zr(e,t){e.flags&=65011714;var n=e.alternate;return null===n?(e.childLanes=0,e.lanes=t,e.child=null,e.subtreeFlags=0,e.memoizedProps=null,e.memoizedState=null,e.updateQueue=null,e.dependencies=null,e.stateNode=null):(e.childLanes=n.childLanes,e.lanes=n.lanes,e.child=n.child,e.subtreeFlags=0,e.deletions=null,e.memoizedProps=n.memoizedProps,e.memoizedState=n.memoizedState,e.updateQueue=n.updateQueue,e.type=n.type,t=n.dependencies,e.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext}),e}function Br(e,t,n,r,a,s){var i=0;if(r=e,"function"===typeof e)Pr(e)&&(i=1);else if("string"===typeof e)i=function(e,t,n){if(1===n||null!=t.itemProp)return!1;switch(e){case"meta":case"title":return!0;case"style":if("string"!==typeof t.precedence||"string"!==typeof t.href||""===t.href)break;return!0;case"link":if("string"!==typeof t.rel||"string"!==typeof t.href||""===t.href||t.onLoad||t.onError)break;return"stylesheet"!==t.rel||(e=t.disabled,"string"===typeof t.precedence&&null==e);case"script":if(t.async&&"function"!==typeof t.async&&"symbol"!==typeof t.async&&!t.onLoad&&!t.onError&&t.src&&"string"===typeof t.src)return!0}return!1}(e,n,W.current)?26:"html"===e||"head"===e||"body"===e?27:5;else e:switch(e){case C:return(e=Mr(31,n,t,a)).elementType=C,e.lanes=s,e;case g:return Vr(n.children,a,s,t);case y:i=8,a|=24;break;case b:return(e=Mr(12,n,t,2|a)).elementType=b,e.lanes=s,e;case S:return(e=Mr(13,n,t,a)).elementType=S,e.lanes=s,e;case T:return(e=Mr(19,n,t,a)).elementType=T,e.lanes=s,e;default:if("object"===typeof e&&null!==e)switch(e.$$typeof){case v:case k:i=10;break e;case x:i=9;break e;case w:i=11;break e;case N:i=14;break e;case I:i=16,r=null;break e}i=29,n=Error(o(130,null===e?"null":typeof e,"")),r=null}return(t=Mr(i,n,t,a)).elementType=e,t.type=r,t.lanes=s,t}function Vr(e,t,n,r){return(e=Mr(7,e,r,t)).lanes=n,e}function Wr(e,t,n){return(e=Mr(6,e,null,t)).lanes=n,e}function Ur(e,t,n){return(t=Mr(4,null!==e.children?e.children:[],e.key,t)).lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}var Gr=[],jr=0,Hr=null,Yr=0,qr=[],Kr=0,Xr=null,Zr=1,Qr="";function Jr(e,t){Gr[jr++]=Yr,Gr[jr++]=Hr,Hr=e,Yr=t}function ea(e,t,n){qr[Kr++]=Zr,qr[Kr++]=Qr,qr[Kr++]=Xr,Xr=e;var r=Zr;e=Qr;var a=32-he(r)-1;r&=~(1<<a),n+=1;var s=32-he(t)+a;if(30<s){var o=a-a%5;s=(r&(1<<o)-1).toString(32),r>>=o,a-=o,Zr=1<<32-he(t)+a|n<<a|r,Qr=s+e}else Zr=1<<s|n<<a|r,Qr=e}function ta(e){null!==e.return&&(Jr(e,1),ea(e,1,0))}function na(e){for(;e===Hr;)Hr=Gr[--jr],Gr[jr]=null,Yr=Gr[--jr],Gr[jr]=null;for(;e===Xr;)Xr=qr[--Kr],qr[Kr]=null,Qr=qr[--Kr],qr[Kr]=null,Zr=qr[--Kr],qr[Kr]=null}var ra=null,aa=null,sa=!1,oa=null,ia=!1,la=Error(o(519));function ua(e){throw ma(Tr(Error(o(418,"")),e)),la}function ca(e){var t=e.stateNode,n=e.type,r=e.memoizedProps;switch(t[Re]=e,t[Fe]=r,n){case"dialog":Pc("cancel",t),Pc("close",t);break;case"iframe":case"object":case"embed":Pc("load",t);break;case"video":case"audio":for(n=0;n<Oc.length;n++)Pc(Oc[n],t);break;case"source":Pc("error",t);break;case"img":case"image":case"link":Pc("error",t),Pc("load",t);break;case"details":Pc("toggle",t);break;case"input":Pc("invalid",t),yt(t,r.value,r.defaultValue,r.checked,r.defaultChecked,r.type,r.name,!0),dt(t);break;case"select":Pc("invalid",t);break;case"textarea":Pc("invalid",t),kt(t,r.value,r.defaultValue,r.children),dt(t)}"string"!==typeof(n=r.children)&&"number"!==typeof n&&"bigint"!==typeof n||t.textContent===""+n||!0===r.suppressHydrationWarning||Xc(t.textContent,n)?(null!=r.popover&&(Pc("beforetoggle",t),Pc("toggle",t)),null!=r.onScroll&&Pc("scroll",t),null!=r.onScrollEnd&&Pc("scrollend",t),null!=r.onClick&&(t.onclick=Zc),t=!0):t=!1,t||ua(e)}function da(e){for(ra=e.return;ra;)switch(ra.tag){case 5:case 13:return void(ia=!1);case 27:case 3:return void(ia=!0);default:ra=ra.return}}function pa(e){if(e!==ra)return!1;if(!sa)return da(e),sa=!0,!1;var t,n=e.tag;if((t=3!==n&&27!==n)&&((t=5===n)&&(t=!("form"!==(t=e.type)&&"button"!==t)||od(e.type,e.memoizedProps)),t=!t),t&&aa&&ua(e),da(e),13===n){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(o(317));e:{for(e=e.nextSibling,n=0;e;){if(8===e.nodeType)if("/$"===(t=e.data)){if(0===n){aa=yd(e.nextSibling);break e}n--}else"$"!==t&&"$!"!==t&&"$?"!==t||n++;e=e.nextSibling}aa=null}}else 27===n?(n=aa,hd(e.type)?(e=bd,bd=null,aa=e):aa=n):aa=ra?yd(e.stateNode.nextSibling):null;return!0}function ha(){aa=ra=null,sa=!1}function fa(){var e=oa;return null!==e&&(null===vu?vu=e:vu.push.apply(vu,e),oa=null),e}function ma(e){null===oa?oa=[e]:oa.push(e)}var ga=z(null),ya=null,ba=null;function va(e,t,n){V(ga,t._currentValue),t._currentValue=n}function xa(e){e._currentValue=ga.current,B(ga)}function ka(e,t,n){for(;null!==e;){var r=e.alternate;if((e.childLanes&t)!==t?(e.childLanes|=t,null!==r&&(r.childLanes|=t)):null!==r&&(r.childLanes&t)!==t&&(r.childLanes|=t),e===n)break;e=e.return}}function wa(e,t,n,r){var a=e.child;for(null!==a&&(a.return=e);null!==a;){var s=a.dependencies;if(null!==s){var i=a.child;s=s.firstContext;e:for(;null!==s;){var l=s;s=a;for(var u=0;u<t.length;u++)if(l.context===t[u]){s.lanes|=n,null!==(l=s.alternate)&&(l.lanes|=n),ka(s.return,n,e),r||(i=null);break e}s=l.next}}else if(18===a.tag){if(null===(i=a.return))throw Error(o(341));i.lanes|=n,null!==(s=i.alternate)&&(s.lanes|=n),ka(i,n,e),i=null}else i=a.child;if(null!==i)i.return=a;else for(i=a;null!==i;){if(i===e){i=null;break}if(null!==(a=i.sibling)){a.return=i.return,i=a;break}i=i.return}a=i}}function Sa(e,t,n,r){e=null;for(var a=t,s=!1;null!==a;){if(!s)if(0!==(524288&a.flags))s=!0;else if(0!==(262144&a.flags))break;if(10===a.tag){var i=a.alternate;if(null===i)throw Error(o(387));if(null!==(i=i.memoizedProps)){var l=a.type;Kn(a.pendingProps.value,i.value)||(null!==e?e.push(l):e=[l])}}else if(a===j.current){if(null===(i=a.alternate))throw Error(o(387));i.memoizedState.memoizedState!==a.memoizedState.memoizedState&&(null!==e?e.push(qd):e=[qd])}a=a.return}null!==e&&wa(t,e,n,r),t.flags|=262144}function Ta(e){for(e=e.firstContext;null!==e;){if(!Kn(e.context._currentValue,e.memoizedValue))return!0;e=e.next}return!1}function Na(e){ya=e,ba=null,null!==(e=e.dependencies)&&(e.firstContext=null)}function Ia(e){return Ea(ya,e)}function Ca(e,t){return null===ya&&Na(e),Ea(e,t)}function Ea(e,t){var n=t._currentValue;if(t={context:t,memoizedValue:n,next:null},null===ba){if(null===e)throw Error(o(308));ba=t,e.dependencies={lanes:0,firstContext:t},e.flags|=524288}else ba=ba.next=t;return n}var $a="undefined"!==typeof AbortController?AbortController:function(){var e=[],t=this.signal={aborted:!1,addEventListener:function(t,n){e.push(n)}};this.abort=function(){t.aborted=!0,e.forEach((function(e){return e()}))}},Aa=r.unstable_scheduleCallback,_a=r.unstable_NormalPriority,Ra={$$typeof:k,Consumer:null,Provider:null,_currentValue:null,_currentValue2:null,_threadCount:0};function Fa(){return{controller:new $a,data:new Map,refCount:0}}function Oa(e){e.refCount--,0===e.refCount&&Aa(_a,(function(){e.controller.abort()}))}var Da=null,Ma=0,Pa=0,La=null;function za(){if(0===--Ma&&null!==Da){null!==La&&(La.status="fulfilled");var e=Da;Da=null,Pa=0,La=null;for(var t=0;t<e.length;t++)(0,e[t])()}}var Ba=O.S;O.S=function(e,t){"object"===typeof t&&null!==t&&"function"===typeof t.then&&function(e,t){if(null===Da){var n=Da=[];Ma=0,Pa=$c(),La={status:"pending",value:void 0,then:function(e){n.push(e)}}}Ma++,t.then(za,za)}(0,t),null!==Ba&&Ba(e,t)};var Va=z(null);function Wa(){var e=Va.current;return null!==e?e:ru.pooledCache}function Ua(e,t){V(Va,null===t?Va.current:t.pool)}function Ga(){var e=Wa();return null===e?null:{parent:Ra._currentValue,pool:e}}var ja=Error(o(460)),Ha=Error(o(474)),Ya=Error(o(542)),qa={then:function(){}};function Ka(e){return"fulfilled"===(e=e.status)||"rejected"===e}function Xa(){}function Za(e,t,n){switch(void 0===(n=e[n])?e.push(t):n!==t&&(t.then(Xa,Xa),t=n),t.status){case"fulfilled":return t.value;case"rejected":throw es(e=t.reason),e;default:if("string"===typeof t.status)t.then(Xa,Xa);else{if(null!==(e=ru)&&100<e.shellSuspendCounter)throw Error(o(482));(e=t).status="pending",e.then((function(e){if("pending"===t.status){var n=t;n.status="fulfilled",n.value=e}}),(function(e){if("pending"===t.status){var n=t;n.status="rejected",n.reason=e}}))}switch(t.status){case"fulfilled":return t.value;case"rejected":throw es(e=t.reason),e}throw Qa=t,ja}}var Qa=null;function Ja(){if(null===Qa)throw Error(o(459));var e=Qa;return Qa=null,e}function es(e){if(e===ja||e===Ya)throw Error(o(483))}var ts=!1;function ns(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,lanes:0,hiddenCallbacks:null},callbacks:null}}function rs(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,callbacks:null})}function as(e){return{lane:e,tag:0,payload:null,callback:null,next:null}}function ss(e,t,n){var r=e.updateQueue;if(null===r)return null;if(r=r.shared,0!==(2&nu)){var a=r.pending;return null===a?t.next=t:(t.next=a.next,a.next=t),r.pending=t,t=Fr(e),Rr(e,null,n),t}return $r(e,r,t,n),Fr(e)}function os(e,t,n){if(null!==(t=t.updateQueue)&&(t=t.shared,0!==(4194048&n))){var r=t.lanes;n|=r&=e.pendingLanes,t.lanes=n,Ce(e,n)}}function is(e,t){var n=e.updateQueue,r=e.alternate;if(null!==r&&n===(r=r.updateQueue)){var a=null,s=null;if(null!==(n=n.firstBaseUpdate)){do{var o={lane:n.lane,tag:n.tag,payload:n.payload,callback:null,next:null};null===s?a=s=o:s=s.next=o,n=n.next}while(null!==n);null===s?a=s=t:s=s.next=t}else a=s=t;return n={baseState:r.baseState,firstBaseUpdate:a,lastBaseUpdate:s,shared:r.shared,callbacks:r.callbacks},void(e.updateQueue=n)}null===(e=n.lastBaseUpdate)?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}var ls=!1;function us(){if(ls){if(null!==La)throw La}}function cs(e,t,n,r){ls=!1;var a=e.updateQueue;ts=!1;var s=a.firstBaseUpdate,o=a.lastBaseUpdate,i=a.shared.pending;if(null!==i){a.shared.pending=null;var l=i,u=l.next;l.next=null,null===o?s=u:o.next=u,o=l;var c=e.alternate;null!==c&&((i=(c=c.updateQueue).lastBaseUpdate)!==o&&(null===i?c.firstBaseUpdate=u:i.next=u,c.lastBaseUpdate=l))}if(null!==s){var d=a.baseState;for(o=0,c=u=l=null,i=s;;){var h=-536870913&i.lane,f=h!==i.lane;if(f?(su&h)===h:(r&h)===h){0!==h&&h===Pa&&(ls=!0),null!==c&&(c=c.next={lane:0,tag:i.tag,payload:i.payload,callback:null,next:null});e:{var m=e,g=i;h=t;var y=n;switch(g.tag){case 1:if("function"===typeof(m=g.payload)){d=m.call(y,d,h);break e}d=m;break e;case 3:m.flags=-65537&m.flags|128;case 0:if(null===(h="function"===typeof(m=g.payload)?m.call(y,d,h):m)||void 0===h)break e;d=p({},d,h);break e;case 2:ts=!0}}null!==(h=i.callback)&&(e.flags|=64,f&&(e.flags|=8192),null===(f=a.callbacks)?a.callbacks=[h]:f.push(h))}else f={lane:h,tag:i.tag,payload:i.payload,callback:i.callback,next:null},null===c?(u=c=f,l=d):c=c.next=f,o|=h;if(null===(i=i.next)){if(null===(i=a.shared.pending))break;i=(f=i).next,f.next=null,a.lastBaseUpdate=f,a.shared.pending=null}}null===c&&(l=d),a.baseState=l,a.firstBaseUpdate=u,a.lastBaseUpdate=c,null===s&&(a.shared.lanes=0),hu|=o,e.lanes=o,e.memoizedState=d}}function ds(e,t){if("function"!==typeof e)throw Error(o(191,e));e.call(t)}function ps(e,t){var n=e.callbacks;if(null!==n)for(e.callbacks=null,e=0;e<n.length;e++)ds(n[e],t)}var hs=z(null),fs=z(0);function ms(e,t){V(fs,e=du),V(hs,t),du=e|t.baseLanes}function gs(){V(fs,du),V(hs,hs.current)}function ys(){du=fs.current,B(hs),B(fs)}var bs=0,vs=null,xs=null,ks=null,ws=!1,Ss=!1,Ts=!1,Ns=0,Is=0,Cs=null,Es=0;function $s(){throw Error(o(321))}function As(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!Kn(e[n],t[n]))return!1;return!0}function _s(e,t,n,r,a,s){return bs=s,vs=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,O.H=null===e||null===e.memoizedState?Ho:Yo,Ts=!1,s=n(r,a),Ts=!1,Ss&&(s=Fs(t,n,r,a)),Rs(e),s}function Rs(e){O.H=jo;var t=null!==xs&&null!==xs.next;if(bs=0,ks=xs=vs=null,ws=!1,Is=0,Cs=null,t)throw Error(o(300));null===e||Ci||null!==(e=e.dependencies)&&Ta(e)&&(Ci=!0)}function Fs(e,t,n,r){vs=e;var a=0;do{if(Ss&&(Cs=null),Is=0,Ss=!1,25<=a)throw Error(o(301));if(a+=1,ks=xs=null,null!=e.updateQueue){var s=e.updateQueue;s.lastEffect=null,s.events=null,s.stores=null,null!=s.memoCache&&(s.memoCache.index=0)}O.H=qo,s=t(n,r)}while(Ss);return s}function Os(){var e=O.H,t=e.useState()[0];return t="function"===typeof t.then?Bs(t):t,e=e.useState()[0],(null!==xs?xs.memoizedState:null)!==e&&(vs.flags|=1024),t}function Ds(){var e=0!==Ns;return Ns=0,e}function Ms(e,t,n){t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~n}function Ps(e){if(ws){for(e=e.memoizedState;null!==e;){var t=e.queue;null!==t&&(t.pending=null),e=e.next}ws=!1}bs=0,ks=xs=vs=null,Ss=!1,Is=Ns=0,Cs=null}function Ls(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===ks?vs.memoizedState=ks=e:ks=ks.next=e,ks}function zs(){if(null===xs){var e=vs.alternate;e=null!==e?e.memoizedState:null}else e=xs.next;var t=null===ks?vs.memoizedState:ks.next;if(null!==t)ks=t,xs=e;else{if(null===e){if(null===vs.alternate)throw Error(o(467));throw Error(o(310))}e={memoizedState:(xs=e).memoizedState,baseState:xs.baseState,baseQueue:xs.baseQueue,queue:xs.queue,next:null},null===ks?vs.memoizedState=ks=e:ks=ks.next=e}return ks}function Bs(e){var t=Is;return Is+=1,null===Cs&&(Cs=[]),e=Za(Cs,e,t),t=vs,null===(null===ks?t.memoizedState:ks.next)&&(t=t.alternate,O.H=null===t||null===t.memoizedState?Ho:Yo),e}function Vs(e){if(null!==e&&"object"===typeof e){if("function"===typeof e.then)return Bs(e);if(e.$$typeof===k)return Ia(e)}throw Error(o(438,String(e)))}function Ws(e){var t=null,n=vs.updateQueue;if(null!==n&&(t=n.memoCache),null==t){var r=vs.alternate;null!==r&&(null!==(r=r.updateQueue)&&(null!=(r=r.memoCache)&&(t={data:r.data.map((function(e){return e.slice()})),index:0})))}if(null==t&&(t={data:[],index:0}),null===n&&(n={lastEffect:null,events:null,stores:null,memoCache:null},vs.updateQueue=n),n.memoCache=t,void 0===(n=t.data[t.index]))for(n=t.data[t.index]=Array(e),r=0;r<e;r++)n[r]=E;return t.index++,n}function Us(e,t){return"function"===typeof t?t(e):t}function Gs(e){return js(zs(),xs,e)}function js(e,t,n){var r=e.queue;if(null===r)throw Error(o(311));r.lastRenderedReducer=n;var a=e.baseQueue,s=r.pending;if(null!==s){if(null!==a){var i=a.next;a.next=s.next,s.next=i}t.baseQueue=a=s,r.pending=null}if(s=e.baseState,null===a)e.memoizedState=s;else{var l=i=null,u=null,c=t=a.next,d=!1;do{var p=-536870913&c.lane;if(p!==c.lane?(su&p)===p:(bs&p)===p){var h=c.revertLane;if(0===h)null!==u&&(u=u.next={lane:0,revertLane:0,action:c.action,hasEagerState:c.hasEagerState,eagerState:c.eagerState,next:null}),p===Pa&&(d=!0);else{if((bs&h)===h){c=c.next,h===Pa&&(d=!0);continue}p={lane:0,revertLane:c.revertLane,action:c.action,hasEagerState:c.hasEagerState,eagerState:c.eagerState,next:null},null===u?(l=u=p,i=s):u=u.next=p,vs.lanes|=h,hu|=h}p=c.action,Ts&&n(s,p),s=c.hasEagerState?c.eagerState:n(s,p)}else h={lane:p,revertLane:c.revertLane,action:c.action,hasEagerState:c.hasEagerState,eagerState:c.eagerState,next:null},null===u?(l=u=h,i=s):u=u.next=h,vs.lanes|=p,hu|=p;c=c.next}while(null!==c&&c!==t);if(null===u?i=s:u.next=l,!Kn(s,e.memoizedState)&&(Ci=!0,d&&null!==(n=La)))throw n;e.memoizedState=s,e.baseState=i,e.baseQueue=u,r.lastRenderedState=s}return null===a&&(r.lanes=0),[e.memoizedState,r.dispatch]}function Hs(e){var t=zs(),n=t.queue;if(null===n)throw Error(o(311));n.lastRenderedReducer=e;var r=n.dispatch,a=n.pending,s=t.memoizedState;if(null!==a){n.pending=null;var i=a=a.next;do{s=e(s,i.action),i=i.next}while(i!==a);Kn(s,t.memoizedState)||(Ci=!0),t.memoizedState=s,null===t.baseQueue&&(t.baseState=s),n.lastRenderedState=s}return[s,r]}function Ys(e,t,n){var r=vs,a=zs(),s=sa;if(s){if(void 0===n)throw Error(o(407));n=n()}else n=t();var i=!Kn((xs||a).memoizedState,n);if(i&&(a.memoizedState=n,Ci=!0),a=a.queue,yo(2048,8,Xs.bind(null,r,a,e),[e]),a.getSnapshot!==t||i||null!==ks&&1&ks.memoizedState.tag){if(r.flags|=2048,fo(9,{destroy:void 0,resource:void 0},Ks.bind(null,r,a,n,t),null),null===ru)throw Error(o(349));s||0!==(124&bs)||qs(r,t,n)}return n}function qs(e,t,n){e.flags|=16384,e={getSnapshot:t,value:n},null===(t=vs.updateQueue)?(t={lastEffect:null,events:null,stores:null,memoCache:null},vs.updateQueue=t,t.stores=[e]):null===(n=t.stores)?t.stores=[e]:n.push(e)}function Ks(e,t,n,r){t.value=n,t.getSnapshot=r,Zs(t)&&Qs(e)}function Xs(e,t,n){return n((function(){Zs(t)&&Qs(e)}))}function Zs(e){var t=e.getSnapshot;e=e.value;try{var n=t();return!Kn(e,n)}catch(r){return!0}}function Qs(e){var t=_r(e,2);null!==t&&Mu(t,e,2)}function Js(e){var t=Ls();if("function"===typeof e){var n=e;if(e=n(),Ts){pe(!0);try{n()}finally{pe(!1)}}}return t.memoizedState=t.baseState=e,t.queue={pending:null,lanes:0,dispatch:null,lastRenderedReducer:Us,lastRenderedState:e},t}function eo(e,t,n,r){return e.baseState=n,js(e,xs,"function"===typeof r?r:Us)}function to(e,t,n,r,a){if(Wo(e))throw Error(o(485));if(null!==(e=t.action)){var s={payload:a,action:e,next:null,isTransition:!0,status:"pending",value:null,reason:null,listeners:[],then:function(e){s.listeners.push(e)}};null!==O.T?n(!0):s.isTransition=!1,r(s),null===(n=t.pending)?(s.next=t.pending=s,no(t,s)):(s.next=n.next,t.pending=n.next=s)}}function no(e,t){var n=t.action,r=t.payload,a=e.state;if(t.isTransition){var s=O.T,o={};O.T=o;try{var i=n(a,r),l=O.S;null!==l&&l(o,i),ro(e,t,i)}catch(u){so(e,t,u)}finally{O.T=s}}else try{ro(e,t,s=n(a,r))}catch(c){so(e,t,c)}}function ro(e,t,n){null!==n&&"object"===typeof n&&"function"===typeof n.then?n.then((function(n){ao(e,t,n)}),(function(n){return so(e,t,n)})):ao(e,t,n)}function ao(e,t,n){t.status="fulfilled",t.value=n,oo(t),e.state=n,null!==(t=e.pending)&&((n=t.next)===t?e.pending=null:(n=n.next,t.next=n,no(e,n)))}function so(e,t,n){var r=e.pending;if(e.pending=null,null!==r){r=r.next;do{t.status="rejected",t.reason=n,oo(t),t=t.next}while(t!==r)}e.action=null}function oo(e){e=e.listeners;for(var t=0;t<e.length;t++)(0,e[t])()}function io(e,t){return t}function lo(e,t){if(sa){var n=ru.formState;if(null!==n){e:{var r=vs;if(sa){if(aa){t:{for(var a=aa,s=ia;8!==a.nodeType;){if(!s){a=null;break t}if(null===(a=yd(a.nextSibling))){a=null;break t}}a="F!"===(s=a.data)||"F"===s?a:null}if(a){aa=yd(a.nextSibling),r="F!"===a.data;break e}}ua(r)}r=!1}r&&(t=n[0])}}return(n=Ls()).memoizedState=n.baseState=t,r={pending:null,lanes:0,dispatch:null,lastRenderedReducer:io,lastRenderedState:t},n.queue=r,n=zo.bind(null,vs,r),r.dispatch=n,r=Js(!1),s=Vo.bind(null,vs,!1,r.queue),a={state:t,dispatch:null,action:e,pending:null},(r=Ls()).queue=a,n=to.bind(null,vs,a,s,n),a.dispatch=n,r.memoizedState=e,[t,n,!1]}function uo(e){return co(zs(),xs,e)}function co(e,t,n){if(t=js(e,t,io)[0],e=Gs(Us)[0],"object"===typeof t&&null!==t&&"function"===typeof t.then)try{var r=Bs(t)}catch(o){if(o===ja)throw Ya;throw o}else r=t;var a=(t=zs()).queue,s=a.dispatch;return n!==t.memoizedState&&(vs.flags|=2048,fo(9,{destroy:void 0,resource:void 0},po.bind(null,a,n),null)),[r,s,e]}function po(e,t){e.action=t}function ho(e){var t=zs(),n=xs;if(null!==n)return co(t,n,e);zs(),t=t.memoizedState;var r=(n=zs()).queue.dispatch;return n.memoizedState=e,[t,r,!1]}function fo(e,t,n,r){return e={tag:e,create:n,deps:r,inst:t,next:null},null===(t=vs.updateQueue)&&(t={lastEffect:null,events:null,stores:null,memoCache:null},vs.updateQueue=t),null===(n=t.lastEffect)?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e),e}function mo(){return zs().memoizedState}function go(e,t,n,r){var a=Ls();r=void 0===r?null:r,vs.flags|=e,a.memoizedState=fo(1|t,{destroy:void 0,resource:void 0},n,r)}function yo(e,t,n,r){var a=zs();r=void 0===r?null:r;var s=a.memoizedState.inst;null!==xs&&null!==r&&As(r,xs.memoizedState.deps)?a.memoizedState=fo(t,s,n,r):(vs.flags|=e,a.memoizedState=fo(1|t,s,n,r))}function bo(e,t){go(8390656,8,e,t)}function vo(e,t){yo(2048,8,e,t)}function xo(e,t){return yo(4,2,e,t)}function ko(e,t){return yo(4,4,e,t)}function wo(e,t){if("function"===typeof t){e=e();var n=t(e);return function(){"function"===typeof n?n():t(null)}}if(null!==t&&void 0!==t)return e=e(),t.current=e,function(){t.current=null}}function So(e,t,n){n=null!==n&&void 0!==n?n.concat([e]):null,yo(4,4,wo.bind(null,t,e),n)}function To(){}function No(e,t){var n=zs();t=void 0===t?null:t;var r=n.memoizedState;return null!==t&&As(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function Io(e,t){var n=zs();t=void 0===t?null:t;var r=n.memoizedState;if(null!==t&&As(t,r[1]))return r[0];if(r=e(),Ts){pe(!0);try{e()}finally{pe(!1)}}return n.memoizedState=[r,t],r}function Co(e,t,n){return void 0===n||0!==(1073741824&bs)?e.memoizedState=t:(e.memoizedState=n,e=Du(),vs.lanes|=e,hu|=e,n)}function Eo(e,t,n,r){return Kn(n,t)?n:null!==hs.current?(e=Co(e,n,r),Kn(e,t)||(Ci=!0),e):0===(42&bs)?(Ci=!0,e.memoizedState=n):(e=Du(),vs.lanes|=e,hu|=e,t)}function $o(e,t,n,r,a){var s=D.p;D.p=0!==s&&8>s?s:8;var o=O.T,i={};O.T=i,Vo(e,!1,t,n);try{var l=a(),u=O.S;if(null!==u&&u(i,l),null!==l&&"object"===typeof l&&"function"===typeof l.then)Bo(e,t,function(e,t){var n=[],r={status:"pending",value:null,reason:null,then:function(e){n.push(e)}};return e.then((function(){r.status="fulfilled",r.value=t;for(var e=0;e<n.length;e++)(0,n[e])(t)}),(function(e){for(r.status="rejected",r.reason=e,e=0;e<n.length;e++)(0,n[e])(void 0)})),r}(l,r),Ou());else Bo(e,t,r,Ou())}catch(c){Bo(e,t,{then:function(){},status:"rejected",reason:c},Ou())}finally{D.p=s,O.T=o}}function Ao(){}function _o(e,t,n,r){if(5!==e.tag)throw Error(o(476));var a=Ro(e).queue;$o(e,a,t,M,null===n?Ao:function(){return Fo(e),n(r)})}function Ro(e){var t=e.memoizedState;if(null!==t)return t;var n={};return(t={memoizedState:M,baseState:M,baseQueue:null,queue:{pending:null,lanes:0,dispatch:null,lastRenderedReducer:Us,lastRenderedState:M},next:null}).next={memoizedState:n,baseState:n,baseQueue:null,queue:{pending:null,lanes:0,dispatch:null,lastRenderedReducer:Us,lastRenderedState:n},next:null},e.memoizedState=t,null!==(e=e.alternate)&&(e.memoizedState=t),t}function Fo(e){Bo(e,Ro(e).next.queue,{},Ou())}function Oo(){return Ia(qd)}function Do(){return zs().memoizedState}function Mo(){return zs().memoizedState}function Po(e){for(var t=e.return;null!==t;){switch(t.tag){case 24:case 3:var n=Ou(),r=ss(t,e=as(n),n);return null!==r&&(Mu(r,t,n),os(r,t,n)),t={cache:Fa()},void(e.payload=t)}t=t.return}}function Lo(e,t,n){var r=Ou();n={lane:r,revertLane:0,action:n,hasEagerState:!1,eagerState:null,next:null},Wo(e)?Uo(t,n):null!==(n=Ar(e,t,n,r))&&(Mu(n,e,r),Go(n,t,r))}function zo(e,t,n){Bo(e,t,n,Ou())}function Bo(e,t,n,r){var a={lane:r,revertLane:0,action:n,hasEagerState:!1,eagerState:null,next:null};if(Wo(e))Uo(t,a);else{var s=e.alternate;if(0===e.lanes&&(null===s||0===s.lanes)&&null!==(s=t.lastRenderedReducer))try{var o=t.lastRenderedState,i=s(o,n);if(a.hasEagerState=!0,a.eagerState=i,Kn(i,o))return $r(e,t,a,0),null===ru&&Er(),!1}catch(l){}if(null!==(n=Ar(e,t,a,r)))return Mu(n,e,r),Go(n,t,r),!0}return!1}function Vo(e,t,n,r){if(r={lane:2,revertLane:$c(),action:r,hasEagerState:!1,eagerState:null,next:null},Wo(e)){if(t)throw Error(o(479))}else null!==(t=Ar(e,n,r,2))&&Mu(t,e,2)}function Wo(e){var t=e.alternate;return e===vs||null!==t&&t===vs}function Uo(e,t){Ss=ws=!0;var n=e.pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}function Go(e,t,n){if(0!==(4194048&n)){var r=t.lanes;n|=r&=e.pendingLanes,t.lanes=n,Ce(e,n)}}var jo={readContext:Ia,use:Vs,useCallback:$s,useContext:$s,useEffect:$s,useImperativeHandle:$s,useLayoutEffect:$s,useInsertionEffect:$s,useMemo:$s,useReducer:$s,useRef:$s,useState:$s,useDebugValue:$s,useDeferredValue:$s,useTransition:$s,useSyncExternalStore:$s,useId:$s,useHostTransitionStatus:$s,useFormState:$s,useActionState:$s,useOptimistic:$s,useMemoCache:$s,useCacheRefresh:$s},Ho={readContext:Ia,use:Vs,useCallback:function(e,t){return Ls().memoizedState=[e,void 0===t?null:t],e},useContext:Ia,useEffect:bo,useImperativeHandle:function(e,t,n){n=null!==n&&void 0!==n?n.concat([e]):null,go(4194308,4,wo.bind(null,t,e),n)},useLayoutEffect:function(e,t){return go(4194308,4,e,t)},useInsertionEffect:function(e,t){go(4,2,e,t)},useMemo:function(e,t){var n=Ls();t=void 0===t?null:t;var r=e();if(Ts){pe(!0);try{e()}finally{pe(!1)}}return n.memoizedState=[r,t],r},useReducer:function(e,t,n){var r=Ls();if(void 0!==n){var a=n(t);if(Ts){pe(!0);try{n(t)}finally{pe(!1)}}}else a=t;return r.memoizedState=r.baseState=a,e={pending:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:a},r.queue=e,e=e.dispatch=Lo.bind(null,vs,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},Ls().memoizedState=e},useState:function(e){var t=(e=Js(e)).queue,n=zo.bind(null,vs,t);return t.dispatch=n,[e.memoizedState,n]},useDebugValue:To,useDeferredValue:function(e,t){return Co(Ls(),e,t)},useTransition:function(){var e=Js(!1);return e=$o.bind(null,vs,e.queue,!0,!1),Ls().memoizedState=e,[!1,e]},useSyncExternalStore:function(e,t,n){var r=vs,a=Ls();if(sa){if(void 0===n)throw Error(o(407));n=n()}else{if(n=t(),null===ru)throw Error(o(349));0!==(124&su)||qs(r,t,n)}a.memoizedState=n;var s={value:n,getSnapshot:t};return a.queue=s,bo(Xs.bind(null,r,s,e),[e]),r.flags|=2048,fo(9,{destroy:void 0,resource:void 0},Ks.bind(null,r,s,n,t),null),n},useId:function(){var e=Ls(),t=ru.identifierPrefix;if(sa){var n=Qr;t="\xab"+t+"R"+(n=(Zr&~(1<<32-he(Zr)-1)).toString(32)+n),0<(n=Ns++)&&(t+="H"+n.toString(32)),t+="\xbb"}else t="\xab"+t+"r"+(n=Es++).toString(32)+"\xbb";return e.memoizedState=t},useHostTransitionStatus:Oo,useFormState:lo,useActionState:lo,useOptimistic:function(e){var t=Ls();t.memoizedState=t.baseState=e;var n={pending:null,lanes:0,dispatch:null,lastRenderedReducer:null,lastRenderedState:null};return t.queue=n,t=Vo.bind(null,vs,!0,n),n.dispatch=t,[e,t]},useMemoCache:Ws,useCacheRefresh:function(){return Ls().memoizedState=Po.bind(null,vs)}},Yo={readContext:Ia,use:Vs,useCallback:No,useContext:Ia,useEffect:vo,useImperativeHandle:So,useInsertionEffect:xo,useLayoutEffect:ko,useMemo:Io,useReducer:Gs,useRef:mo,useState:function(){return Gs(Us)},useDebugValue:To,useDeferredValue:function(e,t){return Eo(zs(),xs.memoizedState,e,t)},useTransition:function(){var e=Gs(Us)[0],t=zs().memoizedState;return["boolean"===typeof e?e:Bs(e),t]},useSyncExternalStore:Ys,useId:Do,useHostTransitionStatus:Oo,useFormState:uo,useActionState:uo,useOptimistic:function(e,t){return eo(zs(),0,e,t)},useMemoCache:Ws,useCacheRefresh:Mo},qo={readContext:Ia,use:Vs,useCallback:No,useContext:Ia,useEffect:vo,useImperativeHandle:So,useInsertionEffect:xo,useLayoutEffect:ko,useMemo:Io,useReducer:Hs,useRef:mo,useState:function(){return Hs(Us)},useDebugValue:To,useDeferredValue:function(e,t){var n=zs();return null===xs?Co(n,e,t):Eo(n,xs.memoizedState,e,t)},useTransition:function(){var e=Hs(Us)[0],t=zs().memoizedState;return["boolean"===typeof e?e:Bs(e),t]},useSyncExternalStore:Ys,useId:Do,useHostTransitionStatus:Oo,useFormState:ho,useActionState:ho,useOptimistic:function(e,t){var n=zs();return null!==xs?eo(n,0,e,t):(n.baseState=e,[e,n.queue.dispatch])},useMemoCache:Ws,useCacheRefresh:Mo},Ko=null,Xo=0;function Zo(e){var t=Xo;return Xo+=1,null===Ko&&(Ko=[]),Za(Ko,e,t)}function Qo(e,t){t=t.props.ref,e.ref=void 0!==t?t:null}function Jo(e,t){if(t.$$typeof===h)throw Error(o(525));throw e=Object.prototype.toString.call(t),Error(o(31,"[object Object]"===e?"object with keys {"+Object.keys(t).join(", ")+"}":e))}function ei(e){return(0,e._init)(e._payload)}function ti(e){function t(t,n){if(e){var r=t.deletions;null===r?(t.deletions=[n],t.flags|=16):r.push(n)}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e){for(var t=new Map;null!==e;)null!==e.key?t.set(e.key,e):t.set(e.index,e),e=e.sibling;return t}function a(e,t){return(e=Lr(e,t)).index=0,e.sibling=null,e}function s(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.flags|=67108866,n):r:(t.flags|=67108866,n):(t.flags|=1048576,n)}function i(t){return e&&null===t.alternate&&(t.flags|=67108866),t}function l(e,t,n,r){return null===t||6!==t.tag?((t=Wr(n,e.mode,r)).return=e,t):((t=a(t,n)).return=e,t)}function u(e,t,n,r){var s=n.type;return s===g?d(e,t,n.props.children,r,n.key):null!==t&&(t.elementType===s||"object"===typeof s&&null!==s&&s.$$typeof===I&&ei(s)===t.type)?(Qo(t=a(t,n.props),n),t.return=e,t):(Qo(t=Br(n.type,n.key,n.props,null,e.mode,r),n),t.return=e,t)}function c(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Ur(n,e.mode,r)).return=e,t):((t=a(t,n.children||[])).return=e,t)}function d(e,t,n,r,s){return null===t||7!==t.tag?((t=Vr(n,e.mode,r,s)).return=e,t):((t=a(t,n)).return=e,t)}function p(e,t,n){if("string"===typeof t&&""!==t||"number"===typeof t||"bigint"===typeof t)return(t=Wr(""+t,e.mode,n)).return=e,t;if("object"===typeof t&&null!==t){switch(t.$$typeof){case f:return Qo(n=Br(t.type,t.key,t.props,null,e.mode,n),t),n.return=e,n;case m:return(t=Ur(t,e.mode,n)).return=e,t;case I:return p(e,t=(0,t._init)(t._payload),n)}if(F(t)||A(t))return(t=Vr(t,e.mode,n,null)).return=e,t;if("function"===typeof t.then)return p(e,Zo(t),n);if(t.$$typeof===k)return p(e,Ca(e,t),n);Jo(e,t)}return null}function h(e,t,n,r){var a=null!==t?t.key:null;if("string"===typeof n&&""!==n||"number"===typeof n||"bigint"===typeof n)return null!==a?null:l(e,t,""+n,r);if("object"===typeof n&&null!==n){switch(n.$$typeof){case f:return n.key===a?u(e,t,n,r):null;case m:return n.key===a?c(e,t,n,r):null;case I:return h(e,t,n=(a=n._init)(n._payload),r)}if(F(n)||A(n))return null!==a?null:d(e,t,n,r,null);if("function"===typeof n.then)return h(e,t,Zo(n),r);if(n.$$typeof===k)return h(e,t,Ca(e,n),r);Jo(e,n)}return null}function y(e,t,n,r,a){if("string"===typeof r&&""!==r||"number"===typeof r||"bigint"===typeof r)return l(t,e=e.get(n)||null,""+r,a);if("object"===typeof r&&null!==r){switch(r.$$typeof){case f:return u(t,e=e.get(null===r.key?n:r.key)||null,r,a);case m:return c(t,e=e.get(null===r.key?n:r.key)||null,r,a);case I:return y(e,t,n,r=(0,r._init)(r._payload),a)}if(F(r)||A(r))return d(t,e=e.get(n)||null,r,a,null);if("function"===typeof r.then)return y(e,t,n,Zo(r),a);if(r.$$typeof===k)return y(e,t,n,Ca(t,r),a);Jo(t,r)}return null}function b(l,u,c,d){if("object"===typeof c&&null!==c&&c.type===g&&null===c.key&&(c=c.props.children),"object"===typeof c&&null!==c){switch(c.$$typeof){case f:e:{for(var v=c.key;null!==u;){if(u.key===v){if((v=c.type)===g){if(7===u.tag){n(l,u.sibling),(d=a(u,c.props.children)).return=l,l=d;break e}}else if(u.elementType===v||"object"===typeof v&&null!==v&&v.$$typeof===I&&ei(v)===u.type){n(l,u.sibling),Qo(d=a(u,c.props),c),d.return=l,l=d;break e}n(l,u);break}t(l,u),u=u.sibling}c.type===g?((d=Vr(c.props.children,l.mode,d,c.key)).return=l,l=d):(Qo(d=Br(c.type,c.key,c.props,null,l.mode,d),c),d.return=l,l=d)}return i(l);case m:e:{for(v=c.key;null!==u;){if(u.key===v){if(4===u.tag&&u.stateNode.containerInfo===c.containerInfo&&u.stateNode.implementation===c.implementation){n(l,u.sibling),(d=a(u,c.children||[])).return=l,l=d;break e}n(l,u);break}t(l,u),u=u.sibling}(d=Ur(c,l.mode,d)).return=l,l=d}return i(l);case I:return b(l,u,c=(v=c._init)(c._payload),d)}if(F(c))return function(a,o,i,l){for(var u=null,c=null,d=o,f=o=0,m=null;null!==d&&f<i.length;f++){d.index>f?(m=d,d=null):m=d.sibling;var g=h(a,d,i[f],l);if(null===g){null===d&&(d=m);break}e&&d&&null===g.alternate&&t(a,d),o=s(g,o,f),null===c?u=g:c.sibling=g,c=g,d=m}if(f===i.length)return n(a,d),sa&&Jr(a,f),u;if(null===d){for(;f<i.length;f++)null!==(d=p(a,i[f],l))&&(o=s(d,o,f),null===c?u=d:c.sibling=d,c=d);return sa&&Jr(a,f),u}for(d=r(d);f<i.length;f++)null!==(m=y(d,a,f,i[f],l))&&(e&&null!==m.alternate&&d.delete(null===m.key?f:m.key),o=s(m,o,f),null===c?u=m:c.sibling=m,c=m);return e&&d.forEach((function(e){return t(a,e)})),sa&&Jr(a,f),u}(l,u,c,d);if(A(c)){if("function"!==typeof(v=A(c)))throw Error(o(150));return function(a,i,l,u){if(null==l)throw Error(o(151));for(var c=null,d=null,f=i,m=i=0,g=null,b=l.next();null!==f&&!b.done;m++,b=l.next()){f.index>m?(g=f,f=null):g=f.sibling;var v=h(a,f,b.value,u);if(null===v){null===f&&(f=g);break}e&&f&&null===v.alternate&&t(a,f),i=s(v,i,m),null===d?c=v:d.sibling=v,d=v,f=g}if(b.done)return n(a,f),sa&&Jr(a,m),c;if(null===f){for(;!b.done;m++,b=l.next())null!==(b=p(a,b.value,u))&&(i=s(b,i,m),null===d?c=b:d.sibling=b,d=b);return sa&&Jr(a,m),c}for(f=r(f);!b.done;m++,b=l.next())null!==(b=y(f,a,m,b.value,u))&&(e&&null!==b.alternate&&f.delete(null===b.key?m:b.key),i=s(b,i,m),null===d?c=b:d.sibling=b,d=b);return e&&f.forEach((function(e){return t(a,e)})),sa&&Jr(a,m),c}(l,u,c=v.call(c),d)}if("function"===typeof c.then)return b(l,u,Zo(c),d);if(c.$$typeof===k)return b(l,u,Ca(l,c),d);Jo(l,c)}return"string"===typeof c&&""!==c||"number"===typeof c||"bigint"===typeof c?(c=""+c,null!==u&&6===u.tag?(n(l,u.sibling),(d=a(u,c)).return=l,l=d):(n(l,u),(d=Wr(c,l.mode,d)).return=l,l=d),i(l)):n(l,u)}return function(e,t,n,r){try{Xo=0;var a=b(e,t,n,r);return Ko=null,a}catch(o){if(o===ja||o===Ya)throw o;var s=Mr(29,o,null,e.mode);return s.lanes=r,s.return=e,s}}}var ni=ti(!0),ri=ti(!1),ai=z(null),si=null;function oi(e){var t=e.alternate;V(ci,1&ci.current),V(ai,e),null===si&&(null===t||null!==hs.current||null!==t.memoizedState)&&(si=e)}function ii(e){if(22===e.tag){if(V(ci,ci.current),V(ai,e),null===si){var t=e.alternate;null!==t&&null!==t.memoizedState&&(si=e)}}else li()}function li(){V(ci,ci.current),V(ai,ai.current)}function ui(e){B(ai),si===e&&(si=null),B(ci)}var ci=z(0);function di(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||gd(n)))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!==(128&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}function pi(e,t,n,r){n=null===(n=n(r,t=e.memoizedState))||void 0===n?t:p({},t,n),e.memoizedState=n,0===e.lanes&&(e.updateQueue.baseState=n)}var hi={enqueueSetState:function(e,t,n){e=e._reactInternals;var r=Ou(),a=as(r);a.payload=t,void 0!==n&&null!==n&&(a.callback=n),null!==(t=ss(e,a,r))&&(Mu(t,e,r),os(t,e,r))},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var r=Ou(),a=as(r);a.tag=1,a.payload=t,void 0!==n&&null!==n&&(a.callback=n),null!==(t=ss(e,a,r))&&(Mu(t,e,r),os(t,e,r))},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=Ou(),r=as(n);r.tag=2,void 0!==t&&null!==t&&(r.callback=t),null!==(t=ss(e,r,n))&&(Mu(t,e,n),os(t,e,n))}};function fi(e,t,n,r,a,s,o){return"function"===typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,s,o):!t.prototype||!t.prototype.isPureReactComponent||(!Xn(n,r)||!Xn(a,s))}function mi(e,t,n,r){e=t.state,"function"===typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"===typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&hi.enqueueReplaceState(t,t.state,null)}function gi(e,t){var n=t;if("ref"in t)for(var r in n={},t)"ref"!==r&&(n[r]=t[r]);if(e=e.defaultProps)for(var a in n===t&&(n=p({},n)),e)void 0===n[a]&&(n[a]=e[a]);return n}var yi="function"===typeof reportError?reportError:function(e){if("object"===typeof window&&"function"===typeof window.ErrorEvent){var t=new window.ErrorEvent("error",{bubbles:!0,cancelable:!0,message:"object"===typeof e&&null!==e&&"string"===typeof e.message?String(e.message):String(e),error:e});if(!window.dispatchEvent(t))return}else if("object"===typeof process&&"function"===typeof process.emit)return void process.emit("uncaughtException",e);console.error(e)};function bi(e){yi(e)}function vi(e){console.error(e)}function xi(e){yi(e)}function ki(e,t){try{(0,e.onUncaughtError)(t.value,{componentStack:t.stack})}catch(n){setTimeout((function(){throw n}))}}function wi(e,t,n){try{(0,e.onCaughtError)(n.value,{componentStack:n.stack,errorBoundary:1===t.tag?t.stateNode:null})}catch(r){setTimeout((function(){throw r}))}}function Si(e,t,n){return(n=as(n)).tag=3,n.payload={element:null},n.callback=function(){ki(e,t)},n}function Ti(e){return(e=as(e)).tag=3,e}function Ni(e,t,n,r){var a=n.type.getDerivedStateFromError;if("function"===typeof a){var s=r.value;e.payload=function(){return a(s)},e.callback=function(){wi(t,n,r)}}var o=n.stateNode;null!==o&&"function"===typeof o.componentDidCatch&&(e.callback=function(){wi(t,n,r),"function"!==typeof a&&(null===Tu?Tu=new Set([this]):Tu.add(this));var e=r.stack;this.componentDidCatch(r.value,{componentStack:null!==e?e:""})})}var Ii=Error(o(461)),Ci=!1;function Ei(e,t,n,r){t.child=null===e?ri(t,null,n,r):ni(t,e.child,n,r)}function $i(e,t,n,r,a){n=n.render;var s=t.ref;if("ref"in r){var o={};for(var i in r)"ref"!==i&&(o[i]=r[i])}else o=r;return Na(t),r=_s(e,t,n,o,s,a),i=Ds(),null===e||Ci?(sa&&i&&ta(t),t.flags|=1,Ei(e,t,r,a),t.child):(Ms(e,t,a),Ki(e,t,a))}function Ai(e,t,n,r,a){if(null===e){var s=n.type;return"function"!==typeof s||Pr(s)||void 0!==s.defaultProps||null!==n.compare?((e=Br(n.type,null,r,t,t.mode,a)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=s,_i(e,t,s,r,a))}if(s=e.child,!Xi(e,a)){var o=s.memoizedProps;if((n=null!==(n=n.compare)?n:Xn)(o,r)&&e.ref===t.ref)return Ki(e,t,a)}return t.flags|=1,(e=Lr(s,r)).ref=t.ref,e.return=t,t.child=e}function _i(e,t,n,r,a){if(null!==e){var s=e.memoizedProps;if(Xn(s,r)&&e.ref===t.ref){if(Ci=!1,t.pendingProps=r=s,!Xi(e,a))return t.lanes=e.lanes,Ki(e,t,a);0!==(131072&e.flags)&&(Ci=!0)}}return Di(e,t,n,r,a)}function Ri(e,t,n){var r=t.pendingProps,a=r.children,s=null!==e?e.memoizedState:null;if("hidden"===r.mode){if(0!==(128&t.flags)){if(r=null!==s?s.baseLanes|n:n,null!==e){for(a=t.child=e.child,s=0;null!==a;)s=s|a.lanes|a.childLanes,a=a.sibling;t.childLanes=s&~r}else t.childLanes=0,t.child=null;return Fi(e,t,r,n)}if(0===(536870912&n))return t.lanes=t.childLanes=536870912,Fi(e,t,null!==s?s.baseLanes|n:n,n);t.memoizedState={baseLanes:0,cachePool:null},null!==e&&Ua(0,null!==s?s.cachePool:null),null!==s?ms(t,s):gs(),ii(t)}else null!==s?(Ua(0,s.cachePool),ms(t,s),li(),t.memoizedState=null):(null!==e&&Ua(0,null),gs(),li());return Ei(e,t,a,n),t.child}function Fi(e,t,n,r){var a=Wa();return a=null===a?null:{parent:Ra._currentValue,pool:a},t.memoizedState={baseLanes:n,cachePool:a},null!==e&&Ua(0,null),gs(),ii(t),null!==e&&Sa(e,t,r,!0),null}function Oi(e,t){var n=t.ref;if(null===n)null!==e&&null!==e.ref&&(t.flags|=4194816);else{if("function"!==typeof n&&"object"!==typeof n)throw Error(o(284));null!==e&&e.ref===n||(t.flags|=4194816)}}function Di(e,t,n,r,a){return Na(t),n=_s(e,t,n,r,void 0,a),r=Ds(),null===e||Ci?(sa&&r&&ta(t),t.flags|=1,Ei(e,t,n,a),t.child):(Ms(e,t,a),Ki(e,t,a))}function Mi(e,t,n,r,a,s){return Na(t),t.updateQueue=null,n=Fs(t,r,n,a),Rs(e),r=Ds(),null===e||Ci?(sa&&r&&ta(t),t.flags|=1,Ei(e,t,n,s),t.child):(Ms(e,t,s),Ki(e,t,s))}function Pi(e,t,n,r,a){if(Na(t),null===t.stateNode){var s=Or,o=n.contextType;"object"===typeof o&&null!==o&&(s=Ia(o)),s=new n(r,s),t.memoizedState=null!==s.state&&void 0!==s.state?s.state:null,s.updater=hi,t.stateNode=s,s._reactInternals=t,(s=t.stateNode).props=r,s.state=t.memoizedState,s.refs={},ns(t),o=n.contextType,s.context="object"===typeof o&&null!==o?Ia(o):Or,s.state=t.memoizedState,"function"===typeof(o=n.getDerivedStateFromProps)&&(pi(t,n,o,r),s.state=t.memoizedState),"function"===typeof n.getDerivedStateFromProps||"function"===typeof s.getSnapshotBeforeUpdate||"function"!==typeof s.UNSAFE_componentWillMount&&"function"!==typeof s.componentWillMount||(o=s.state,"function"===typeof s.componentWillMount&&s.componentWillMount(),"function"===typeof s.UNSAFE_componentWillMount&&s.UNSAFE_componentWillMount(),o!==s.state&&hi.enqueueReplaceState(s,s.state,null),cs(t,r,s,a),us(),s.state=t.memoizedState),"function"===typeof s.componentDidMount&&(t.flags|=4194308),r=!0}else if(null===e){s=t.stateNode;var i=t.memoizedProps,l=gi(n,i);s.props=l;var u=s.context,c=n.contextType;o=Or,"object"===typeof c&&null!==c&&(o=Ia(c));var d=n.getDerivedStateFromProps;c="function"===typeof d||"function"===typeof s.getSnapshotBeforeUpdate,i=t.pendingProps!==i,c||"function"!==typeof s.UNSAFE_componentWillReceiveProps&&"function"!==typeof s.componentWillReceiveProps||(i||u!==o)&&mi(t,s,r,o),ts=!1;var p=t.memoizedState;s.state=p,cs(t,r,s,a),us(),u=t.memoizedState,i||p!==u||ts?("function"===typeof d&&(pi(t,n,d,r),u=t.memoizedState),(l=ts||fi(t,n,l,r,p,u,o))?(c||"function"!==typeof s.UNSAFE_componentWillMount&&"function"!==typeof s.componentWillMount||("function"===typeof s.componentWillMount&&s.componentWillMount(),"function"===typeof s.UNSAFE_componentWillMount&&s.UNSAFE_componentWillMount()),"function"===typeof s.componentDidMount&&(t.flags|=4194308)):("function"===typeof s.componentDidMount&&(t.flags|=4194308),t.memoizedProps=r,t.memoizedState=u),s.props=r,s.state=u,s.context=o,r=l):("function"===typeof s.componentDidMount&&(t.flags|=4194308),r=!1)}else{s=t.stateNode,rs(e,t),c=gi(n,o=t.memoizedProps),s.props=c,d=t.pendingProps,p=s.context,u=n.contextType,l=Or,"object"===typeof u&&null!==u&&(l=Ia(u)),(u="function"===typeof(i=n.getDerivedStateFromProps)||"function"===typeof s.getSnapshotBeforeUpdate)||"function"!==typeof s.UNSAFE_componentWillReceiveProps&&"function"!==typeof s.componentWillReceiveProps||(o!==d||p!==l)&&mi(t,s,r,l),ts=!1,p=t.memoizedState,s.state=p,cs(t,r,s,a),us();var h=t.memoizedState;o!==d||p!==h||ts||null!==e&&null!==e.dependencies&&Ta(e.dependencies)?("function"===typeof i&&(pi(t,n,i,r),h=t.memoizedState),(c=ts||fi(t,n,c,r,p,h,l)||null!==e&&null!==e.dependencies&&Ta(e.dependencies))?(u||"function"!==typeof s.UNSAFE_componentWillUpdate&&"function"!==typeof s.componentWillUpdate||("function"===typeof s.componentWillUpdate&&s.componentWillUpdate(r,h,l),"function"===typeof s.UNSAFE_componentWillUpdate&&s.UNSAFE_componentWillUpdate(r,h,l)),"function"===typeof s.componentDidUpdate&&(t.flags|=4),"function"===typeof s.getSnapshotBeforeUpdate&&(t.flags|=1024)):("function"!==typeof s.componentDidUpdate||o===e.memoizedProps&&p===e.memoizedState||(t.flags|=4),"function"!==typeof s.getSnapshotBeforeUpdate||o===e.memoizedProps&&p===e.memoizedState||(t.flags|=1024),t.memoizedProps=r,t.memoizedState=h),s.props=r,s.state=h,s.context=l,r=c):("function"!==typeof s.componentDidUpdate||o===e.memoizedProps&&p===e.memoizedState||(t.flags|=4),"function"!==typeof s.getSnapshotBeforeUpdate||o===e.memoizedProps&&p===e.memoizedState||(t.flags|=1024),r=!1)}return s=r,Oi(e,t),r=0!==(128&t.flags),s||r?(s=t.stateNode,n=r&&"function"!==typeof n.getDerivedStateFromError?null:s.render(),t.flags|=1,null!==e&&r?(t.child=ni(t,e.child,null,a),t.child=ni(t,null,n,a)):Ei(e,t,n,a),t.memoizedState=s.state,e=t.child):e=Ki(e,t,a),e}function Li(e,t,n,r){return ha(),t.flags|=256,Ei(e,t,n,r),t.child}var zi={dehydrated:null,treeContext:null,retryLane:0,hydrationErrors:null};function Bi(e){return{baseLanes:e,cachePool:Ga()}}function Vi(e,t,n){return e=null!==e?e.childLanes&~n:0,t&&(e|=gu),e}function Wi(e,t,n){var r,a=t.pendingProps,s=!1,i=0!==(128&t.flags);if((r=i)||(r=(null===e||null!==e.memoizedState)&&0!==(2&ci.current)),r&&(s=!0,t.flags&=-129),r=0!==(32&t.flags),t.flags&=-33,null===e){if(sa){if(s?oi(t):li(),sa){var l,u=aa;if(l=u){e:{for(l=u,u=ia;8!==l.nodeType;){if(!u){u=null;break e}if(null===(l=yd(l.nextSibling))){u=null;break e}}u=l}null!==u?(t.memoizedState={dehydrated:u,treeContext:null!==Xr?{id:Zr,overflow:Qr}:null,retryLane:536870912,hydrationErrors:null},(l=Mr(18,null,null,0)).stateNode=u,l.return=t,t.child=l,ra=t,aa=null,l=!0):l=!1}l||ua(t)}if(null!==(u=t.memoizedState)&&null!==(u=u.dehydrated))return gd(u)?t.lanes=32:t.lanes=536870912,null;ui(t)}return u=a.children,a=a.fallback,s?(li(),u=Gi({mode:"hidden",children:u},s=t.mode),a=Vr(a,s,n,null),u.return=t,a.return=t,u.sibling=a,t.child=u,(s=t.child).memoizedState=Bi(n),s.childLanes=Vi(e,r,n),t.memoizedState=zi,a):(oi(t),Ui(t,u))}if(null!==(l=e.memoizedState)&&null!==(u=l.dehydrated)){if(i)256&t.flags?(oi(t),t.flags&=-257,t=ji(e,t,n)):null!==t.memoizedState?(li(),t.child=e.child,t.flags|=128,t=null):(li(),s=a.fallback,u=t.mode,a=Gi({mode:"visible",children:a.children},u),(s=Vr(s,u,n,null)).flags|=2,a.return=t,s.return=t,a.sibling=s,t.child=a,ni(t,e.child,null,n),(a=t.child).memoizedState=Bi(n),a.childLanes=Vi(e,r,n),t.memoizedState=zi,t=s);else if(oi(t),gd(u)){if(r=u.nextSibling&&u.nextSibling.dataset)var c=r.dgst;r=c,(a=Error(o(419))).stack="",a.digest=r,ma({value:a,source:null,stack:null}),t=ji(e,t,n)}else if(Ci||Sa(e,t,n,!1),r=0!==(n&e.childLanes),Ci||r){if(null!==(r=ru)&&(0!==(a=0!==((a=0!==(42&(a=n&-n))?1:Ee(a))&(r.suspendedLanes|n))?0:a)&&a!==l.retryLane))throw l.retryLane=a,_r(e,a),Mu(r,e,a),Ii;"$?"===u.data||Yu(),t=ji(e,t,n)}else"$?"===u.data?(t.flags|=192,t.child=e.child,t=null):(e=l.treeContext,aa=yd(u.nextSibling),ra=t,sa=!0,oa=null,ia=!1,null!==e&&(qr[Kr++]=Zr,qr[Kr++]=Qr,qr[Kr++]=Xr,Zr=e.id,Qr=e.overflow,Xr=t),(t=Ui(t,a.children)).flags|=4096);return t}return s?(li(),s=a.fallback,u=t.mode,c=(l=e.child).sibling,(a=Lr(l,{mode:"hidden",children:a.children})).subtreeFlags=65011712&l.subtreeFlags,null!==c?s=Lr(c,s):(s=Vr(s,u,n,null)).flags|=2,s.return=t,a.return=t,a.sibling=s,t.child=a,a=s,s=t.child,null===(u=e.child.memoizedState)?u=Bi(n):(null!==(l=u.cachePool)?(c=Ra._currentValue,l=l.parent!==c?{parent:c,pool:c}:l):l=Ga(),u={baseLanes:u.baseLanes|n,cachePool:l}),s.memoizedState=u,s.childLanes=Vi(e,r,n),t.memoizedState=zi,a):(oi(t),e=(n=e.child).sibling,(n=Lr(n,{mode:"visible",children:a.children})).return=t,n.sibling=null,null!==e&&(null===(r=t.deletions)?(t.deletions=[e],t.flags|=16):r.push(e)),t.child=n,t.memoizedState=null,n)}function Ui(e,t){return(t=Gi({mode:"visible",children:t},e.mode)).return=e,e.child=t}function Gi(e,t){return(e=Mr(22,e,null,t)).lanes=0,e.stateNode={_visibility:1,_pendingMarkers:null,_retryCache:null,_transitions:null},e}function ji(e,t,n){return ni(t,e.child,null,n),(e=Ui(t,t.pendingProps.children)).flags|=2,t.memoizedState=null,e}function Hi(e,t,n){e.lanes|=t;var r=e.alternate;null!==r&&(r.lanes|=t),ka(e.return,t,n)}function Yi(e,t,n,r,a){var s=e.memoizedState;null===s?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailMode:a}:(s.isBackwards=t,s.rendering=null,s.renderingStartTime=0,s.last=r,s.tail=n,s.tailMode=a)}function qi(e,t,n){var r=t.pendingProps,a=r.revealOrder,s=r.tail;if(Ei(e,t,r.children,n),0!==(2&(r=ci.current)))r=1&r|2,t.flags|=128;else{if(null!==e&&0!==(128&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Hi(e,n,t);else if(19===e.tag)Hi(e,n,t);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}switch(V(ci,r),a){case"forwards":for(n=t.child,a=null;null!==n;)null!==(e=n.alternate)&&null===di(e)&&(a=n),n=n.sibling;null===(n=a)?(a=t.child,t.child=null):(a=n.sibling,n.sibling=null),Yi(t,!1,a,n,s);break;case"backwards":for(n=null,a=t.child,t.child=null;null!==a;){if(null!==(e=a.alternate)&&null===di(e)){t.child=a;break}e=a.sibling,a.sibling=n,n=a,a=e}Yi(t,!0,n,null,s);break;case"together":Yi(t,!1,null,null,void 0);break;default:t.memoizedState=null}return t.child}function Ki(e,t,n){if(null!==e&&(t.dependencies=e.dependencies),hu|=t.lanes,0===(n&t.childLanes)){if(null===e)return null;if(Sa(e,t,n,!1),0===(n&t.childLanes))return null}if(null!==e&&t.child!==e.child)throw Error(o(153));if(null!==t.child){for(n=Lr(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Lr(e,e.pendingProps)).return=t;n.sibling=null}return t.child}function Xi(e,t){return 0!==(e.lanes&t)||!(null===(e=e.dependencies)||!Ta(e))}function Zi(e,t,n){if(null!==e)if(e.memoizedProps!==t.pendingProps)Ci=!0;else{if(!Xi(e,n)&&0===(128&t.flags))return Ci=!1,function(e,t,n){switch(t.tag){case 3:H(t,t.stateNode.containerInfo),va(0,Ra,e.memoizedState.cache),ha();break;case 27:case 5:q(t);break;case 4:H(t,t.stateNode.containerInfo);break;case 10:va(0,t.type,t.memoizedProps.value);break;case 13:var r=t.memoizedState;if(null!==r)return null!==r.dehydrated?(oi(t),t.flags|=128,null):0!==(n&t.child.childLanes)?Wi(e,t,n):(oi(t),null!==(e=Ki(e,t,n))?e.sibling:null);oi(t);break;case 19:var a=0!==(128&e.flags);if((r=0!==(n&t.childLanes))||(Sa(e,t,n,!1),r=0!==(n&t.childLanes)),a){if(r)return qi(e,t,n);t.flags|=128}if(null!==(a=t.memoizedState)&&(a.rendering=null,a.tail=null,a.lastEffect=null),V(ci,ci.current),r)break;return null;case 22:case 23:return t.lanes=0,Ri(e,t,n);case 24:va(0,Ra,e.memoizedState.cache)}return Ki(e,t,n)}(e,t,n);Ci=0!==(131072&e.flags)}else Ci=!1,sa&&0!==(1048576&t.flags)&&ea(t,Yr,t.index);switch(t.lanes=0,t.tag){case 16:e:{e=t.pendingProps;var r=t.elementType,a=r._init;if(r=a(r._payload),t.type=r,"function"!==typeof r){if(void 0!==r&&null!==r){if((a=r.$$typeof)===w){t.tag=11,t=$i(null,t,r,e,n);break e}if(a===N){t.tag=14,t=Ai(null,t,r,e,n);break e}}throw t=R(r)||r,Error(o(306,t,""))}Pr(r)?(e=gi(r,e),t.tag=1,t=Pi(null,t,r,e,n)):(t.tag=0,t=Di(null,t,r,e,n))}return t;case 0:return Di(e,t,t.type,t.pendingProps,n);case 1:return Pi(e,t,r=t.type,a=gi(r,t.pendingProps),n);case 3:e:{if(H(t,t.stateNode.containerInfo),null===e)throw Error(o(387));r=t.pendingProps;var s=t.memoizedState;a=s.element,rs(e,t),cs(t,r,null,n);var i=t.memoizedState;if(r=i.cache,va(0,Ra,r),r!==s.cache&&wa(t,[Ra],n,!0),us(),r=i.element,s.isDehydrated){if(s={element:r,isDehydrated:!1,cache:i.cache},t.updateQueue.baseState=s,t.memoizedState=s,256&t.flags){t=Li(e,t,r,n);break e}if(r!==a){ma(a=Tr(Error(o(424)),t)),t=Li(e,t,r,n);break e}if(9===(e=t.stateNode.containerInfo).nodeType)e=e.body;else e="HTML"===e.nodeName?e.ownerDocument.body:e;for(aa=yd(e.firstChild),ra=t,sa=!0,oa=null,ia=!0,n=ri(t,null,r,n),t.child=n;n;)n.flags=-3&n.flags|4096,n=n.sibling}else{if(ha(),r===a){t=Ki(e,t,n);break e}Ei(e,t,r,n)}t=t.child}return t;case 26:return Oi(e,t),null===e?(n=Ed(t.type,null,t.pendingProps,null))?t.memoizedState=n:sa||(n=t.type,e=t.pendingProps,(r=rd(G.current).createElement(n))[Re]=t,r[Fe]=e,ed(r,n,e),je(r),t.stateNode=r):t.memoizedState=Ed(t.type,e.memoizedProps,t.pendingProps,e.memoizedState),null;case 27:return q(t),null===e&&sa&&(r=t.stateNode=xd(t.type,t.pendingProps,G.current),ra=t,ia=!0,a=aa,hd(t.type)?(bd=a,aa=yd(r.firstChild)):aa=a),Ei(e,t,t.pendingProps.children,n),Oi(e,t),null===e&&(t.flags|=4194304),t.child;case 5:return null===e&&sa&&((a=r=aa)&&(null!==(r=function(e,t,n,r){for(;1===e.nodeType;){var a=n;if(e.nodeName.toLowerCase()!==t.toLowerCase()){if(!r&&("INPUT"!==e.nodeName||"hidden"!==e.type))break}else if(r){if(!e[ze])switch(t){case"meta":if(!e.hasAttribute("itemprop"))break;return e;case"link":if("stylesheet"===(s=e.getAttribute("rel"))&&e.hasAttribute("data-precedence"))break;if(s!==a.rel||e.getAttribute("href")!==(null==a.href||""===a.href?null:a.href)||e.getAttribute("crossorigin")!==(null==a.crossOrigin?null:a.crossOrigin)||e.getAttribute("title")!==(null==a.title?null:a.title))break;return e;case"style":if(e.hasAttribute("data-precedence"))break;return e;case"script":if(((s=e.getAttribute("src"))!==(null==a.src?null:a.src)||e.getAttribute("type")!==(null==a.type?null:a.type)||e.getAttribute("crossorigin")!==(null==a.crossOrigin?null:a.crossOrigin))&&s&&e.hasAttribute("async")&&!e.hasAttribute("itemprop"))break;return e;default:return e}}else{if("input"!==t||"hidden"!==e.type)return e;var s=null==a.name?null:""+a.name;if("hidden"===a.type&&e.getAttribute("name")===s)return e}if(null===(e=yd(e.nextSibling)))break}return null}(r,t.type,t.pendingProps,ia))?(t.stateNode=r,ra=t,aa=yd(r.firstChild),ia=!1,a=!0):a=!1),a||ua(t)),q(t),a=t.type,s=t.pendingProps,i=null!==e?e.memoizedProps:null,r=s.children,od(a,s)?r=null:null!==i&&od(a,i)&&(t.flags|=32),null!==t.memoizedState&&(a=_s(e,t,Os,null,null,n),qd._currentValue=a),Oi(e,t),Ei(e,t,r,n),t.child;case 6:return null===e&&sa&&((e=n=aa)&&(null!==(n=function(e,t,n){if(""===t)return null;for(;3!==e.nodeType;){if((1!==e.nodeType||"INPUT"!==e.nodeName||"hidden"!==e.type)&&!n)return null;if(null===(e=yd(e.nextSibling)))return null}return e}(n,t.pendingProps,ia))?(t.stateNode=n,ra=t,aa=null,e=!0):e=!1),e||ua(t)),null;case 13:return Wi(e,t,n);case 4:return H(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=ni(t,null,r,n):Ei(e,t,r,n),t.child;case 11:return $i(e,t,t.type,t.pendingProps,n);case 7:return Ei(e,t,t.pendingProps,n),t.child;case 8:case 12:return Ei(e,t,t.pendingProps.children,n),t.child;case 10:return r=t.pendingProps,va(0,t.type,r.value),Ei(e,t,r.children,n),t.child;case 9:return a=t.type._context,r=t.pendingProps.children,Na(t),r=r(a=Ia(a)),t.flags|=1,Ei(e,t,r,n),t.child;case 14:return Ai(e,t,t.type,t.pendingProps,n);case 15:return _i(e,t,t.type,t.pendingProps,n);case 19:return qi(e,t,n);case 31:return r=t.pendingProps,n=t.mode,r={mode:r.mode,children:r.children},null===e?((n=Gi(r,n)).ref=t.ref,t.child=n,n.return=t,t=n):((n=Lr(e.child,r)).ref=t.ref,t.child=n,n.return=t,t=n),t;case 22:return Ri(e,t,n);case 24:return Na(t),r=Ia(Ra),null===e?(null===(a=Wa())&&(a=ru,s=Fa(),a.pooledCache=s,s.refCount++,null!==s&&(a.pooledCacheLanes|=n),a=s),t.memoizedState={parent:r,cache:a},ns(t),va(0,Ra,a)):(0!==(e.lanes&n)&&(rs(e,t),cs(t,null,null,n),us()),a=e.memoizedState,s=t.memoizedState,a.parent!==r?(a={parent:r,cache:r},t.memoizedState=a,0===t.lanes&&(t.memoizedState=t.updateQueue.baseState=a),va(0,Ra,r)):(r=s.cache,va(0,Ra,r),r!==a.cache&&wa(t,[Ra],n,!0))),Ei(e,t,t.pendingProps.children,n),t.child;case 29:throw t.pendingProps}throw Error(o(156,t.tag))}function Qi(e){e.flags|=4}function Ji(e,t){if("stylesheet"!==t.type||0!==(4&t.state.loading))e.flags&=-16777217;else if(e.flags|=16777216,!Vd(t)){if(null!==(t=ai.current)&&((4194048&su)===su?null!==si:(62914560&su)!==su&&0===(536870912&su)||t!==si))throw Qa=qa,Ha;e.flags|=8192}}function el(e,t){null!==t&&(e.flags|=4),16384&e.flags&&(t=22!==e.tag?Se():536870912,e.lanes|=t,yu|=t)}function tl(e,t){if(!sa)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function nl(e){var t=null!==e.alternate&&e.alternate.child===e.child,n=0,r=0;if(t)for(var a=e.child;null!==a;)n|=a.lanes|a.childLanes,r|=65011712&a.subtreeFlags,r|=65011712&a.flags,a.return=e,a=a.sibling;else for(a=e.child;null!==a;)n|=a.lanes|a.childLanes,r|=a.subtreeFlags,r|=a.flags,a.return=e,a=a.sibling;return e.subtreeFlags|=r,e.childLanes=n,t}function rl(e,t,n){var r=t.pendingProps;switch(na(t),t.tag){case 31:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:case 1:return nl(t),null;case 3:return n=t.stateNode,r=null,null!==e&&(r=e.memoizedState.cache),t.memoizedState.cache!==r&&(t.flags|=2048),xa(Ra),Y(),n.pendingContext&&(n.context=n.pendingContext,n.pendingContext=null),null!==e&&null!==e.child||(pa(t)?Qi(t):null===e||e.memoizedState.isDehydrated&&0===(256&t.flags)||(t.flags|=1024,fa())),nl(t),null;case 26:return n=t.memoizedState,null===e?(Qi(t),null!==n?(nl(t),Ji(t,n)):(nl(t),t.flags&=-16777217)):n?n!==e.memoizedState?(Qi(t),nl(t),Ji(t,n)):(nl(t),t.flags&=-16777217):(e.memoizedProps!==r&&Qi(t),nl(t),t.flags&=-16777217),null;case 27:K(t),n=G.current;var a=t.type;if(null!==e&&null!=t.stateNode)e.memoizedProps!==r&&Qi(t);else{if(!r){if(null===t.stateNode)throw Error(o(166));return nl(t),null}e=W.current,pa(t)?ca(t):(e=xd(a,r,n),t.stateNode=e,Qi(t))}return nl(t),null;case 5:if(K(t),n=t.type,null!==e&&null!=t.stateNode)e.memoizedProps!==r&&Qi(t);else{if(!r){if(null===t.stateNode)throw Error(o(166));return nl(t),null}if(e=W.current,pa(t))ca(t);else{switch(a=rd(G.current),e){case 1:e=a.createElementNS("http://www.w3.org/2000/svg",n);break;case 2:e=a.createElementNS("http://www.w3.org/1998/Math/MathML",n);break;default:switch(n){case"svg":e=a.createElementNS("http://www.w3.org/2000/svg",n);break;case"math":e=a.createElementNS("http://www.w3.org/1998/Math/MathML",n);break;case"script":(e=a.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild);break;case"select":e="string"===typeof r.is?a.createElement("select",{is:r.is}):a.createElement("select"),r.multiple?e.multiple=!0:r.size&&(e.size=r.size);break;default:e="string"===typeof r.is?a.createElement(n,{is:r.is}):a.createElement(n)}}e[Re]=t,e[Fe]=r;e:for(a=t.child;null!==a;){if(5===a.tag||6===a.tag)e.appendChild(a.stateNode);else if(4!==a.tag&&27!==a.tag&&null!==a.child){a.child.return=a,a=a.child;continue}if(a===t)break e;for(;null===a.sibling;){if(null===a.return||a.return===t)break e;a=a.return}a.sibling.return=a.return,a=a.sibling}t.stateNode=e;e:switch(ed(e,n,r),n){case"button":case"input":case"select":case"textarea":e=!!r.autoFocus;break e;case"img":e=!0;break e;default:e=!1}e&&Qi(t)}}return nl(t),t.flags&=-16777217,null;case 6:if(e&&null!=t.stateNode)e.memoizedProps!==r&&Qi(t);else{if("string"!==typeof r&&null===t.stateNode)throw Error(o(166));if(e=G.current,pa(t)){if(e=t.stateNode,n=t.memoizedProps,r=null,null!==(a=ra))switch(a.tag){case 27:case 5:r=a.memoizedProps}e[Re]=t,(e=!!(e.nodeValue===n||null!==r&&!0===r.suppressHydrationWarning||Xc(e.nodeValue,n)))||ua(t)}else(e=rd(e).createTextNode(r))[Re]=t,t.stateNode=e}return nl(t),null;case 13:if(r=t.memoizedState,null===e||null!==e.memoizedState&&null!==e.memoizedState.dehydrated){if(a=pa(t),null!==r&&null!==r.dehydrated){if(null===e){if(!a)throw Error(o(318));if(!(a=null!==(a=t.memoizedState)?a.dehydrated:null))throw Error(o(317));a[Re]=t}else ha(),0===(128&t.flags)&&(t.memoizedState=null),t.flags|=4;nl(t),a=!1}else a=fa(),null!==e&&null!==e.memoizedState&&(e.memoizedState.hydrationErrors=a),a=!0;if(!a)return 256&t.flags?(ui(t),t):(ui(t),null)}if(ui(t),0!==(128&t.flags))return t.lanes=n,t;if(n=null!==r,e=null!==e&&null!==e.memoizedState,n){a=null,null!==(r=t.child).alternate&&null!==r.alternate.memoizedState&&null!==r.alternate.memoizedState.cachePool&&(a=r.alternate.memoizedState.cachePool.pool);var s=null;null!==r.memoizedState&&null!==r.memoizedState.cachePool&&(s=r.memoizedState.cachePool.pool),s!==a&&(r.flags|=2048)}return n!==e&&n&&(t.child.flags|=8192),el(t,t.updateQueue),nl(t),null;case 4:return Y(),null===e&&Bc(t.stateNode.containerInfo),nl(t),null;case 10:return xa(t.type),nl(t),null;case 19:if(B(ci),null===(a=t.memoizedState))return nl(t),null;if(r=0!==(128&t.flags),null===(s=a.rendering))if(r)tl(a,!1);else{if(0!==pu||null!==e&&0!==(128&e.flags))for(e=t.child;null!==e;){if(null!==(s=di(e))){for(t.flags|=128,tl(a,!1),e=s.updateQueue,t.updateQueue=e,el(t,e),t.subtreeFlags=0,e=n,n=t.child;null!==n;)zr(n,e),n=n.sibling;return V(ci,1&ci.current|2),t.child}e=e.sibling}null!==a.tail&&te()>wu&&(t.flags|=128,r=!0,tl(a,!1),t.lanes=4194304)}else{if(!r)if(null!==(e=di(s))){if(t.flags|=128,r=!0,e=e.updateQueue,t.updateQueue=e,el(t,e),tl(a,!0),null===a.tail&&"hidden"===a.tailMode&&!s.alternate&&!sa)return nl(t),null}else 2*te()-a.renderingStartTime>wu&&536870912!==n&&(t.flags|=128,r=!0,tl(a,!1),t.lanes=4194304);a.isBackwards?(s.sibling=t.child,t.child=s):(null!==(e=a.last)?e.sibling=s:t.child=s,a.last=s)}return null!==a.tail?(t=a.tail,a.rendering=t,a.tail=t.sibling,a.renderingStartTime=te(),t.sibling=null,e=ci.current,V(ci,r?1&e|2:1&e),t):(nl(t),null);case 22:case 23:return ui(t),ys(),r=null!==t.memoizedState,null!==e?null!==e.memoizedState!==r&&(t.flags|=8192):r&&(t.flags|=8192),r?0!==(536870912&n)&&0===(128&t.flags)&&(nl(t),6&t.subtreeFlags&&(t.flags|=8192)):nl(t),null!==(n=t.updateQueue)&&el(t,n.retryQueue),n=null,null!==e&&null!==e.memoizedState&&null!==e.memoizedState.cachePool&&(n=e.memoizedState.cachePool.pool),r=null,null!==t.memoizedState&&null!==t.memoizedState.cachePool&&(r=t.memoizedState.cachePool.pool),r!==n&&(t.flags|=2048),null!==e&&B(Va),null;case 24:return n=null,null!==e&&(n=e.memoizedState.cache),t.memoizedState.cache!==n&&(t.flags|=2048),xa(Ra),nl(t),null;case 25:case 30:return null}throw Error(o(156,t.tag))}function al(e,t){switch(na(t),t.tag){case 1:return 65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 3:return xa(Ra),Y(),0!==(65536&(e=t.flags))&&0===(128&e)?(t.flags=-65537&e|128,t):null;case 26:case 27:case 5:return K(t),null;case 13:if(ui(t),null!==(e=t.memoizedState)&&null!==e.dehydrated){if(null===t.alternate)throw Error(o(340));ha()}return 65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 19:return B(ci),null;case 4:return Y(),null;case 10:return xa(t.type),null;case 22:case 23:return ui(t),ys(),null!==e&&B(Va),65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 24:return xa(Ra),null;default:return null}}function sl(e,t){switch(na(t),t.tag){case 3:xa(Ra),Y();break;case 26:case 27:case 5:K(t);break;case 4:Y();break;case 13:ui(t);break;case 19:B(ci);break;case 10:xa(t.type);break;case 22:case 23:ui(t),ys(),null!==e&&B(Va);break;case 24:xa(Ra)}}function ol(e,t){try{var n=t.updateQueue,r=null!==n?n.lastEffect:null;if(null!==r){var a=r.next;n=a;do{if((n.tag&e)===e){r=void 0;var s=n.create,o=n.inst;r=s(),o.destroy=r}n=n.next}while(n!==a)}}catch(i){cc(t,t.return,i)}}function il(e,t,n){try{var r=t.updateQueue,a=null!==r?r.lastEffect:null;if(null!==a){var s=a.next;r=s;do{if((r.tag&e)===e){var o=r.inst,i=o.destroy;if(void 0!==i){o.destroy=void 0,a=t;var l=n,u=i;try{u()}catch(c){cc(a,l,c)}}}r=r.next}while(r!==s)}}catch(c){cc(t,t.return,c)}}function ll(e){var t=e.updateQueue;if(null!==t){var n=e.stateNode;try{ps(t,n)}catch(r){cc(e,e.return,r)}}}function ul(e,t,n){n.props=gi(e.type,e.memoizedProps),n.state=e.memoizedState;try{n.componentWillUnmount()}catch(r){cc(e,t,r)}}function cl(e,t){try{var n=e.ref;if(null!==n){switch(e.tag){case 26:case 27:case 5:var r=e.stateNode;break;default:r=e.stateNode}"function"===typeof n?e.refCleanup=n(r):n.current=r}}catch(a){cc(e,t,a)}}function dl(e,t){var n=e.ref,r=e.refCleanup;if(null!==n)if("function"===typeof r)try{r()}catch(a){cc(e,t,a)}finally{e.refCleanup=null,null!=(e=e.alternate)&&(e.refCleanup=null)}else if("function"===typeof n)try{n(null)}catch(s){cc(e,t,s)}else n.current=null}function pl(e){var t=e.type,n=e.memoizedProps,r=e.stateNode;try{e:switch(t){case"button":case"input":case"select":case"textarea":n.autoFocus&&r.focus();break e;case"img":n.src?r.src=n.src:n.srcSet&&(r.srcset=n.srcSet)}}catch(a){cc(e,e.return,a)}}function hl(e,t,n){try{var r=e.stateNode;!function(e,t,n,r){switch(t){case"div":case"span":case"svg":case"path":case"a":case"g":case"p":case"li":break;case"input":var a=null,s=null,i=null,l=null,u=null,c=null,d=null;for(f in n){var p=n[f];if(n.hasOwnProperty(f)&&null!=p)switch(f){case"checked":case"value":break;case"defaultValue":u=p;default:r.hasOwnProperty(f)||Qc(e,t,f,null,r,p)}}for(var h in r){var f=r[h];if(p=n[h],r.hasOwnProperty(h)&&(null!=f||null!=p))switch(h){case"type":s=f;break;case"name":a=f;break;case"checked":c=f;break;case"defaultChecked":d=f;break;case"value":i=f;break;case"defaultValue":l=f;break;case"children":case"dangerouslySetInnerHTML":if(null!=f)throw Error(o(137,t));break;default:f!==p&&Qc(e,t,h,f,r,p)}}return void gt(e,i,l,u,c,d,s,a);case"select":for(s in f=i=l=h=null,n)if(u=n[s],n.hasOwnProperty(s)&&null!=u)switch(s){case"value":break;case"multiple":f=u;default:r.hasOwnProperty(s)||Qc(e,t,s,null,r,u)}for(a in r)if(s=r[a],u=n[a],r.hasOwnProperty(a)&&(null!=s||null!=u))switch(a){case"value":h=s;break;case"defaultValue":l=s;break;case"multiple":i=s;default:s!==u&&Qc(e,t,a,s,r,u)}return t=l,n=i,r=f,void(null!=h?vt(e,!!n,h,!1):!!r!==!!n&&(null!=t?vt(e,!!n,t,!0):vt(e,!!n,n?[]:"",!1)));case"textarea":for(l in f=h=null,n)if(a=n[l],n.hasOwnProperty(l)&&null!=a&&!r.hasOwnProperty(l))switch(l){case"value":case"children":break;default:Qc(e,t,l,null,r,a)}for(i in r)if(a=r[i],s=n[i],r.hasOwnProperty(i)&&(null!=a||null!=s))switch(i){case"value":h=a;break;case"defaultValue":f=a;break;case"children":break;case"dangerouslySetInnerHTML":if(null!=a)throw Error(o(91));break;default:a!==s&&Qc(e,t,i,a,r,s)}return void xt(e,h,f);case"option":for(var m in n)if(h=n[m],n.hasOwnProperty(m)&&null!=h&&!r.hasOwnProperty(m))if("selected"===m)e.selected=!1;else Qc(e,t,m,null,r,h);for(u in r)if(h=r[u],f=n[u],r.hasOwnProperty(u)&&h!==f&&(null!=h||null!=f))if("selected"===u)e.selected=h&&"function"!==typeof h&&"symbol"!==typeof h;else Qc(e,t,u,h,r,f);return;case"img":case"link":case"area":case"base":case"br":case"col":case"embed":case"hr":case"keygen":case"meta":case"param":case"source":case"track":case"wbr":case"menuitem":for(var g in n)h=n[g],n.hasOwnProperty(g)&&null!=h&&!r.hasOwnProperty(g)&&Qc(e,t,g,null,r,h);for(c in r)if(h=r[c],f=n[c],r.hasOwnProperty(c)&&h!==f&&(null!=h||null!=f))switch(c){case"children":case"dangerouslySetInnerHTML":if(null!=h)throw Error(o(137,t));break;default:Qc(e,t,c,h,r,f)}return;default:if(It(t)){for(var y in n)h=n[y],n.hasOwnProperty(y)&&void 0!==h&&!r.hasOwnProperty(y)&&Jc(e,t,y,void 0,r,h);for(d in r)h=r[d],f=n[d],!r.hasOwnProperty(d)||h===f||void 0===h&&void 0===f||Jc(e,t,d,h,r,f);return}}for(var b in n)h=n[b],n.hasOwnProperty(b)&&null!=h&&!r.hasOwnProperty(b)&&Qc(e,t,b,null,r,h);for(p in r)h=r[p],f=n[p],!r.hasOwnProperty(p)||h===f||null==h&&null==f||Qc(e,t,p,h,r,f)}(r,e.type,n,t),r[Fe]=t}catch(a){cc(e,e.return,a)}}function fl(e){return 5===e.tag||3===e.tag||26===e.tag||27===e.tag&&hd(e.type)||4===e.tag}function ml(e){e:for(;;){for(;null===e.sibling;){if(null===e.return||fl(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;5!==e.tag&&6!==e.tag&&18!==e.tag;){if(27===e.tag&&hd(e.type))continue e;if(2&e.flags)continue e;if(null===e.child||4===e.tag)continue e;e.child.return=e,e=e.child}if(!(2&e.flags))return e.stateNode}}function gl(e,t,n){var r=e.tag;if(5===r||6===r)e=e.stateNode,t?(9===n.nodeType?n.body:"HTML"===n.nodeName?n.ownerDocument.body:n).insertBefore(e,t):((t=9===n.nodeType?n.body:"HTML"===n.nodeName?n.ownerDocument.body:n).appendChild(e),null!==(n=n._reactRootContainer)&&void 0!==n||null!==t.onclick||(t.onclick=Zc));else if(4!==r&&(27===r&&hd(e.type)&&(n=e.stateNode,t=null),null!==(e=e.child)))for(gl(e,t,n),e=e.sibling;null!==e;)gl(e,t,n),e=e.sibling}function yl(e,t,n){var r=e.tag;if(5===r||6===r)e=e.stateNode,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==r&&(27===r&&hd(e.type)&&(n=e.stateNode),null!==(e=e.child)))for(yl(e,t,n),e=e.sibling;null!==e;)yl(e,t,n),e=e.sibling}function bl(e){var t=e.stateNode,n=e.memoizedProps;try{for(var r=e.type,a=t.attributes;a.length;)t.removeAttributeNode(a[0]);ed(t,r,n),t[Re]=e,t[Fe]=n}catch(s){cc(e,e.return,s)}}var vl=!1,xl=!1,kl=!1,wl="function"===typeof WeakSet?WeakSet:Set,Sl=null;function Tl(e,t,n){var r=n.flags;switch(n.tag){case 0:case 11:case 15:Pl(e,n),4&r&&ol(5,n);break;case 1:if(Pl(e,n),4&r)if(e=n.stateNode,null===t)try{e.componentDidMount()}catch(o){cc(n,n.return,o)}else{var a=gi(n.type,t.memoizedProps);t=t.memoizedState;try{e.componentDidUpdate(a,t,e.__reactInternalSnapshotBeforeUpdate)}catch(i){cc(n,n.return,i)}}64&r&&ll(n),512&r&&cl(n,n.return);break;case 3:if(Pl(e,n),64&r&&null!==(e=n.updateQueue)){if(t=null,null!==n.child)switch(n.child.tag){case 27:case 5:case 1:t=n.child.stateNode}try{ps(e,t)}catch(o){cc(n,n.return,o)}}break;case 27:null===t&&4&r&&bl(n);case 26:case 5:Pl(e,n),null===t&&4&r&&pl(n),512&r&&cl(n,n.return);break;case 12:Pl(e,n);break;case 13:Pl(e,n),4&r&&Al(e,n),64&r&&(null!==(e=n.memoizedState)&&(null!==(e=e.dehydrated)&&function(e,t){var n=e.ownerDocument;if("$?"!==e.data||"complete"===n.readyState)t();else{var r=function(){t(),n.removeEventListener("DOMContentLoaded",r)};n.addEventListener("DOMContentLoaded",r),e._reactRetry=r}}(e,n=fc.bind(null,n))));break;case 22:if(!(r=null!==n.memoizedState||vl)){t=null!==t&&null!==t.memoizedState||xl,a=vl;var s=xl;vl=r,(xl=t)&&!s?zl(e,n,0!==(8772&n.subtreeFlags)):Pl(e,n),vl=a,xl=s}break;case 30:break;default:Pl(e,n)}}function Nl(e){var t=e.alternate;null!==t&&(e.alternate=null,Nl(t)),e.child=null,e.deletions=null,e.sibling=null,5===e.tag&&(null!==(t=e.stateNode)&&Be(t)),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}var Il=null,Cl=!1;function El(e,t,n){for(n=n.child;null!==n;)$l(e,t,n),n=n.sibling}function $l(e,t,n){if(de&&"function"===typeof de.onCommitFiberUnmount)try{de.onCommitFiberUnmount(ce,n)}catch(s){}switch(n.tag){case 26:xl||dl(n,t),El(e,t,n),n.memoizedState?n.memoizedState.count--:n.stateNode&&(n=n.stateNode).parentNode.removeChild(n);break;case 27:xl||dl(n,t);var r=Il,a=Cl;hd(n.type)&&(Il=n.stateNode,Cl=!1),El(e,t,n),kd(n.stateNode),Il=r,Cl=a;break;case 5:xl||dl(n,t);case 6:if(r=Il,a=Cl,Il=null,El(e,t,n),Cl=a,null!==(Il=r))if(Cl)try{(9===Il.nodeType?Il.body:"HTML"===Il.nodeName?Il.ownerDocument.body:Il).removeChild(n.stateNode)}catch(o){cc(n,t,o)}else try{Il.removeChild(n.stateNode)}catch(o){cc(n,t,o)}break;case 18:null!==Il&&(Cl?(fd(9===(e=Il).nodeType?e.body:"HTML"===e.nodeName?e.ownerDocument.body:e,n.stateNode),Cp(e)):fd(Il,n.stateNode));break;case 4:r=Il,a=Cl,Il=n.stateNode.containerInfo,Cl=!0,El(e,t,n),Il=r,Cl=a;break;case 0:case 11:case 14:case 15:xl||il(2,n,t),xl||il(4,n,t),El(e,t,n);break;case 1:xl||(dl(n,t),"function"===typeof(r=n.stateNode).componentWillUnmount&&ul(n,t,r)),El(e,t,n);break;case 21:El(e,t,n);break;case 22:xl=(r=xl)||null!==n.memoizedState,El(e,t,n),xl=r;break;default:El(e,t,n)}}function Al(e,t){if(null===t.memoizedState&&(null!==(e=t.alternate)&&(null!==(e=e.memoizedState)&&null!==(e=e.dehydrated))))try{Cp(e)}catch(n){cc(t,t.return,n)}}function _l(e,t){var n=function(e){switch(e.tag){case 13:case 19:var t=e.stateNode;return null===t&&(t=e.stateNode=new wl),t;case 22:return null===(t=(e=e.stateNode)._retryCache)&&(t=e._retryCache=new wl),t;default:throw Error(o(435,e.tag))}}(e);t.forEach((function(t){var r=mc.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}function Rl(e,t){var n=t.deletions;if(null!==n)for(var r=0;r<n.length;r++){var a=n[r],s=e,i=t,l=i;e:for(;null!==l;){switch(l.tag){case 27:if(hd(l.type)){Il=l.stateNode,Cl=!1;break e}break;case 5:Il=l.stateNode,Cl=!1;break e;case 3:case 4:Il=l.stateNode.containerInfo,Cl=!0;break e}l=l.return}if(null===Il)throw Error(o(160));$l(s,i,a),Il=null,Cl=!1,null!==(s=a.alternate)&&(s.return=null),a.return=null}if(13878&t.subtreeFlags)for(t=t.child;null!==t;)Ol(t,e),t=t.sibling}var Fl=null;function Ol(e,t){var n=e.alternate,r=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:Rl(t,e),Dl(e),4&r&&(il(3,e,e.return),ol(3,e),il(5,e,e.return));break;case 1:Rl(t,e),Dl(e),512&r&&(xl||null===n||dl(n,n.return)),64&r&&vl&&(null!==(e=e.updateQueue)&&(null!==(r=e.callbacks)&&(n=e.shared.hiddenCallbacks,e.shared.hiddenCallbacks=null===n?r:n.concat(r))));break;case 26:var a=Fl;if(Rl(t,e),Dl(e),512&r&&(xl||null===n||dl(n,n.return)),4&r){var s=null!==n?n.memoizedState:null;if(r=e.memoizedState,null===n)if(null===r)if(null===e.stateNode){e:{r=e.type,n=e.memoizedProps,a=a.ownerDocument||a;t:switch(r){case"title":(!(s=a.getElementsByTagName("title")[0])||s[ze]||s[Re]||"http://www.w3.org/2000/svg"===s.namespaceURI||s.hasAttribute("itemprop"))&&(s=a.createElement(r),a.head.insertBefore(s,a.querySelector("head > title"))),ed(s,r,n),s[Re]=e,je(s),r=s;break e;case"link":var i=zd("link","href",a).get(r+(n.href||""));if(i)for(var l=0;l<i.length;l++)if((s=i[l]).getAttribute("href")===(null==n.href||""===n.href?null:n.href)&&s.getAttribute("rel")===(null==n.rel?null:n.rel)&&s.getAttribute("title")===(null==n.title?null:n.title)&&s.getAttribute("crossorigin")===(null==n.crossOrigin?null:n.crossOrigin)){i.splice(l,1);break t}ed(s=a.createElement(r),r,n),a.head.appendChild(s);break;case"meta":if(i=zd("meta","content",a).get(r+(n.content||"")))for(l=0;l<i.length;l++)if((s=i[l]).getAttribute("content")===(null==n.content?null:""+n.content)&&s.getAttribute("name")===(null==n.name?null:n.name)&&s.getAttribute("property")===(null==n.property?null:n.property)&&s.getAttribute("http-equiv")===(null==n.httpEquiv?null:n.httpEquiv)&&s.getAttribute("charset")===(null==n.charSet?null:n.charSet)){i.splice(l,1);break t}ed(s=a.createElement(r),r,n),a.head.appendChild(s);break;default:throw Error(o(468,r))}s[Re]=e,je(s),r=s}e.stateNode=r}else Bd(a,e.type,e.stateNode);else e.stateNode=Od(a,r,e.memoizedProps);else s!==r?(null===s?null!==n.stateNode&&(n=n.stateNode).parentNode.removeChild(n):s.count--,null===r?Bd(a,e.type,e.stateNode):Od(a,r,e.memoizedProps)):null===r&&null!==e.stateNode&&hl(e,e.memoizedProps,n.memoizedProps)}break;case 27:Rl(t,e),Dl(e),512&r&&(xl||null===n||dl(n,n.return)),null!==n&&4&r&&hl(e,e.memoizedProps,n.memoizedProps);break;case 5:if(Rl(t,e),Dl(e),512&r&&(xl||null===n||dl(n,n.return)),32&e.flags){a=e.stateNode;try{wt(a,"")}catch(f){cc(e,e.return,f)}}4&r&&null!=e.stateNode&&hl(e,a=e.memoizedProps,null!==n?n.memoizedProps:a),1024&r&&(kl=!0);break;case 6:if(Rl(t,e),Dl(e),4&r){if(null===e.stateNode)throw Error(o(162));r=e.memoizedProps,n=e.stateNode;try{n.nodeValue=r}catch(f){cc(e,e.return,f)}}break;case 3:if(Ld=null,a=Fl,Fl=Td(t.containerInfo),Rl(t,e),Fl=a,Dl(e),4&r&&null!==n&&n.memoizedState.isDehydrated)try{Cp(t.containerInfo)}catch(f){cc(e,e.return,f)}kl&&(kl=!1,Ml(e));break;case 4:r=Fl,Fl=Td(e.stateNode.containerInfo),Rl(t,e),Dl(e),Fl=r;break;case 12:default:Rl(t,e),Dl(e);break;case 13:Rl(t,e),Dl(e),8192&e.child.flags&&null!==e.memoizedState!==(null!==n&&null!==n.memoizedState)&&(ku=te()),4&r&&(null!==(r=e.updateQueue)&&(e.updateQueue=null,_l(e,r)));break;case 22:a=null!==e.memoizedState;var u=null!==n&&null!==n.memoizedState,c=vl,d=xl;if(vl=c||a,xl=d||u,Rl(t,e),xl=d,vl=c,Dl(e),8192&r)e:for(t=e.stateNode,t._visibility=a?-2&t._visibility:1|t._visibility,a&&(null===n||u||vl||xl||Ll(e)),n=null,t=e;;){if(5===t.tag||26===t.tag){if(null===n){u=n=t;try{if(s=u.stateNode,a)"function"===typeof(i=s.style).setProperty?i.setProperty("display","none","important"):i.display="none";else{l=u.stateNode;var p=u.memoizedProps.style,h=void 0!==p&&null!==p&&p.hasOwnProperty("display")?p.display:null;l.style.display=null==h||"boolean"===typeof h?"":(""+h).trim()}}catch(f){cc(u,u.return,f)}}}else if(6===t.tag){if(null===n){u=t;try{u.stateNode.nodeValue=a?"":u.memoizedProps}catch(f){cc(u,u.return,f)}}}else if((22!==t.tag&&23!==t.tag||null===t.memoizedState||t===e)&&null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break e;for(;null===t.sibling;){if(null===t.return||t.return===e)break e;n===t&&(n=null),t=t.return}n===t&&(n=null),t.sibling.return=t.return,t=t.sibling}4&r&&(null!==(r=e.updateQueue)&&(null!==(n=r.retryQueue)&&(r.retryQueue=null,_l(e,n))));break;case 19:Rl(t,e),Dl(e),4&r&&(null!==(r=e.updateQueue)&&(e.updateQueue=null,_l(e,r)));case 30:case 21:}}function Dl(e){var t=e.flags;if(2&t){try{for(var n,r=e.return;null!==r;){if(fl(r)){n=r;break}r=r.return}if(null==n)throw Error(o(160));switch(n.tag){case 27:var a=n.stateNode;yl(e,ml(e),a);break;case 5:var s=n.stateNode;32&n.flags&&(wt(s,""),n.flags&=-33),yl(e,ml(e),s);break;case 3:case 4:var i=n.stateNode.containerInfo;gl(e,ml(e),i);break;default:throw Error(o(161))}}catch(l){cc(e,e.return,l)}e.flags&=-3}4096&t&&(e.flags&=-4097)}function Ml(e){if(1024&e.subtreeFlags)for(e=e.child;null!==e;){var t=e;Ml(t),5===t.tag&&1024&t.flags&&t.stateNode.reset(),e=e.sibling}}function Pl(e,t){if(8772&t.subtreeFlags)for(t=t.child;null!==t;)Tl(e,t.alternate,t),t=t.sibling}function Ll(e){for(e=e.child;null!==e;){var t=e;switch(t.tag){case 0:case 11:case 14:case 15:il(4,t,t.return),Ll(t);break;case 1:dl(t,t.return);var n=t.stateNode;"function"===typeof n.componentWillUnmount&&ul(t,t.return,n),Ll(t);break;case 27:kd(t.stateNode);case 26:case 5:dl(t,t.return),Ll(t);break;case 22:null===t.memoizedState&&Ll(t);break;default:Ll(t)}e=e.sibling}}function zl(e,t,n){for(n=n&&0!==(8772&t.subtreeFlags),t=t.child;null!==t;){var r=t.alternate,a=e,s=t,o=s.flags;switch(s.tag){case 0:case 11:case 15:zl(a,s,n),ol(4,s);break;case 1:if(zl(a,s,n),"function"===typeof(a=(r=s).stateNode).componentDidMount)try{a.componentDidMount()}catch(u){cc(r,r.return,u)}if(null!==(a=(r=s).updateQueue)){var i=r.stateNode;try{var l=a.shared.hiddenCallbacks;if(null!==l)for(a.shared.hiddenCallbacks=null,a=0;a<l.length;a++)ds(l[a],i)}catch(u){cc(r,r.return,u)}}n&&64&o&&ll(s),cl(s,s.return);break;case 27:bl(s);case 26:case 5:zl(a,s,n),n&&null===r&&4&o&&pl(s),cl(s,s.return);break;case 12:zl(a,s,n);break;case 13:zl(a,s,n),n&&4&o&&Al(a,s);break;case 22:null===s.memoizedState&&zl(a,s,n),cl(s,s.return);break;case 30:break;default:zl(a,s,n)}t=t.sibling}}function Bl(e,t){var n=null;null!==e&&null!==e.memoizedState&&null!==e.memoizedState.cachePool&&(n=e.memoizedState.cachePool.pool),e=null,null!==t.memoizedState&&null!==t.memoizedState.cachePool&&(e=t.memoizedState.cachePool.pool),e!==n&&(null!=e&&e.refCount++,null!=n&&Oa(n))}function Vl(e,t){e=null,null!==t.alternate&&(e=t.alternate.memoizedState.cache),(t=t.memoizedState.cache)!==e&&(t.refCount++,null!=e&&Oa(e))}function Wl(e,t,n,r){if(10256&t.subtreeFlags)for(t=t.child;null!==t;)Ul(e,t,n,r),t=t.sibling}function Ul(e,t,n,r){var a=t.flags;switch(t.tag){case 0:case 11:case 15:Wl(e,t,n,r),2048&a&&ol(9,t);break;case 1:case 13:default:Wl(e,t,n,r);break;case 3:Wl(e,t,n,r),2048&a&&(e=null,null!==t.alternate&&(e=t.alternate.memoizedState.cache),(t=t.memoizedState.cache)!==e&&(t.refCount++,null!=e&&Oa(e)));break;case 12:if(2048&a){Wl(e,t,n,r),e=t.stateNode;try{var s=t.memoizedProps,o=s.id,i=s.onPostCommit;"function"===typeof i&&i(o,null===t.alternate?"mount":"update",e.passiveEffectDuration,-0)}catch(l){cc(t,t.return,l)}}else Wl(e,t,n,r);break;case 23:break;case 22:s=t.stateNode,o=t.alternate,null!==t.memoizedState?2&s._visibility?Wl(e,t,n,r):jl(e,t):2&s._visibility?Wl(e,t,n,r):(s._visibility|=2,Gl(e,t,n,r,0!==(10256&t.subtreeFlags))),2048&a&&Bl(o,t);break;case 24:Wl(e,t,n,r),2048&a&&Vl(t.alternate,t)}}function Gl(e,t,n,r,a){for(a=a&&0!==(10256&t.subtreeFlags),t=t.child;null!==t;){var s=e,o=t,i=n,l=r,u=o.flags;switch(o.tag){case 0:case 11:case 15:Gl(s,o,i,l,a),ol(8,o);break;case 23:break;case 22:var c=o.stateNode;null!==o.memoizedState?2&c._visibility?Gl(s,o,i,l,a):jl(s,o):(c._visibility|=2,Gl(s,o,i,l,a)),a&&2048&u&&Bl(o.alternate,o);break;case 24:Gl(s,o,i,l,a),a&&2048&u&&Vl(o.alternate,o);break;default:Gl(s,o,i,l,a)}t=t.sibling}}function jl(e,t){if(10256&t.subtreeFlags)for(t=t.child;null!==t;){var n=e,r=t,a=r.flags;switch(r.tag){case 22:jl(n,r),2048&a&&Bl(r.alternate,r);break;case 24:jl(n,r),2048&a&&Vl(r.alternate,r);break;default:jl(n,r)}t=t.sibling}}var Hl=8192;function Yl(e){if(e.subtreeFlags&Hl)for(e=e.child;null!==e;)ql(e),e=e.sibling}function ql(e){switch(e.tag){case 26:Yl(e),e.flags&Hl&&null!==e.memoizedState&&function(e,t,n){if(null===Wd)throw Error(o(475));var r=Wd;if("stylesheet"===t.type&&("string"!==typeof n.media||!1!==matchMedia(n.media).matches)&&0===(4&t.state.loading)){if(null===t.instance){var a=$d(n.href),s=e.querySelector(Ad(a));if(s)return null!==(e=s._p)&&"object"===typeof e&&"function"===typeof e.then&&(r.count++,r=Gd.bind(r),e.then(r,r)),t.state.loading|=4,t.instance=s,void je(s);s=e.ownerDocument||e,n=_d(n),(a=wd.get(a))&&Md(n,a),je(s=s.createElement("link"));var i=s;i._p=new Promise((function(e,t){i.onload=e,i.onerror=t})),ed(s,"link",n),t.instance=s}null===r.stylesheets&&(r.stylesheets=new Map),r.stylesheets.set(t,e),(e=t.state.preload)&&0===(3&t.state.loading)&&(r.count++,t=Gd.bind(r),e.addEventListener("load",t),e.addEventListener("error",t))}}(Fl,e.memoizedState,e.memoizedProps);break;case 5:default:Yl(e);break;case 3:case 4:var t=Fl;Fl=Td(e.stateNode.containerInfo),Yl(e),Fl=t;break;case 22:null===e.memoizedState&&(null!==(t=e.alternate)&&null!==t.memoizedState?(t=Hl,Hl=16777216,Yl(e),Hl=t):Yl(e))}}function Kl(e){var t=e.alternate;if(null!==t&&null!==(e=t.child)){t.child=null;do{t=e.sibling,e.sibling=null,e=t}while(null!==e)}}function Xl(e){var t=e.deletions;if(0!==(16&e.flags)){if(null!==t)for(var n=0;n<t.length;n++){var r=t[n];Sl=r,Jl(r,e)}Kl(e)}if(10256&e.subtreeFlags)for(e=e.child;null!==e;)Zl(e),e=e.sibling}function Zl(e){switch(e.tag){case 0:case 11:case 15:Xl(e),2048&e.flags&&il(9,e,e.return);break;case 3:case 12:default:Xl(e);break;case 22:var t=e.stateNode;null!==e.memoizedState&&2&t._visibility&&(null===e.return||13!==e.return.tag)?(t._visibility&=-3,Ql(e)):Xl(e)}}function Ql(e){var t=e.deletions;if(0!==(16&e.flags)){if(null!==t)for(var n=0;n<t.length;n++){var r=t[n];Sl=r,Jl(r,e)}Kl(e)}for(e=e.child;null!==e;){switch((t=e).tag){case 0:case 11:case 15:il(8,t,t.return),Ql(t);break;case 22:2&(n=t.stateNode)._visibility&&(n._visibility&=-3,Ql(t));break;default:Ql(t)}e=e.sibling}}function Jl(e,t){for(;null!==Sl;){var n=Sl;switch(n.tag){case 0:case 11:case 15:il(8,n,t);break;case 23:case 22:if(null!==n.memoizedState&&null!==n.memoizedState.cachePool){var r=n.memoizedState.cachePool.pool;null!=r&&r.refCount++}break;case 24:Oa(n.memoizedState.cache)}if(null!==(r=n.child))r.return=n,Sl=r;else e:for(n=e;null!==Sl;){var a=(r=Sl).sibling,s=r.return;if(Nl(r),r===n){Sl=null;break e}if(null!==a){a.return=s,Sl=a;break e}Sl=s}}}var eu={getCacheForType:function(e){var t=Ia(Ra),n=t.data.get(e);return void 0===n&&(n=e(),t.data.set(e,n)),n}},tu="function"===typeof WeakMap?WeakMap:Map,nu=0,ru=null,au=null,su=0,ou=0,iu=null,lu=!1,uu=!1,cu=!1,du=0,pu=0,hu=0,fu=0,mu=0,gu=0,yu=0,bu=null,vu=null,xu=!1,ku=0,wu=1/0,Su=null,Tu=null,Nu=0,Iu=null,Cu=null,Eu=0,$u=0,Au=null,_u=null,Ru=0,Fu=null;function Ou(){if(0!==(2&nu)&&0!==su)return su&-su;if(null!==O.T){return 0!==Pa?Pa:$c()}return Ae()}function Du(){0===gu&&(gu=0===(536870912&su)||sa?we():536870912);var e=ai.current;return null!==e&&(e.flags|=32),gu}function Mu(e,t,n){(e!==ru||2!==ou&&9!==ou)&&null===e.cancelPendingCommit||(Uu(e,0),Bu(e,su,gu,!1)),Ne(e,n),0!==(2&nu)&&e===ru||(e===ru&&(0===(2&nu)&&(fu|=n),4===pu&&Bu(e,su,gu,!1)),wc(e))}function Pu(e,t,n){if(0!==(6&nu))throw Error(o(327));for(var r=!n&&0===(124&t)&&0===(t&e.expiredLanes)||xe(e,t),a=r?function(e,t){var n=nu;nu|=2;var r=ju(),a=Hu();ru!==e||su!==t?(Su=null,wu=te()+500,Uu(e,t)):uu=xe(e,t);e:for(;;)try{if(0!==ou&&null!==au){t=au;var s=iu;t:switch(ou){case 1:ou=0,iu=null,Ju(e,t,s,1);break;case 2:case 9:if(Ka(s)){ou=0,iu=null,Qu(t);break}t=function(){2!==ou&&9!==ou||ru!==e||(ou=7),wc(e)},s.then(t,t);break e;case 3:ou=7;break e;case 4:ou=5;break e;case 7:Ka(s)?(ou=0,iu=null,Qu(t)):(ou=0,iu=null,Ju(e,t,s,7));break;case 5:var i=null;switch(au.tag){case 26:i=au.memoizedState;case 5:case 27:var l=au;if(!i||Vd(i)){ou=0,iu=null;var u=l.sibling;if(null!==u)au=u;else{var c=l.return;null!==c?(au=c,ec(c)):au=null}break t}}ou=0,iu=null,Ju(e,t,s,5);break;case 6:ou=0,iu=null,Ju(e,t,s,6);break;case 8:Wu(),pu=6;break e;default:throw Error(o(462))}}Xu();break}catch(d){Gu(e,d)}return ba=ya=null,O.H=r,O.A=a,nu=n,null!==au?0:(ru=null,su=0,Er(),pu)}(e,t):qu(e,t,!0),s=r;;){if(0===a){uu&&!r&&Bu(e,t,0,!1);break}if(n=e.current.alternate,!s||zu(n)){if(2===a){if(s=t,e.errorRecoveryDisabledLanes&s)var i=0;else i=0!==(i=-536870913&e.pendingLanes)?i:536870912&i?536870912:0;if(0!==i){t=i;e:{var l=e;a=bu;var u=l.current.memoizedState.isDehydrated;if(u&&(Uu(l,i).flags|=256),2!==(i=qu(l,i,!1))){if(cu&&!u){l.errorRecoveryDisabledLanes|=s,fu|=s,a=4;break e}s=vu,vu=a,null!==s&&(null===vu?vu=s:vu.push.apply(vu,s))}a=i}if(s=!1,2!==a)continue}}if(1===a){Uu(e,0),Bu(e,t,0,!0);break}e:{switch(r=e,s=a){case 0:case 1:throw Error(o(345));case 4:if((4194048&t)!==t)break;case 6:Bu(r,t,gu,!lu);break e;case 2:vu=null;break;case 3:case 5:break;default:throw Error(o(329))}if((62914560&t)===t&&10<(a=ku+300-te())){if(Bu(r,t,gu,!lu),0!==ve(r,0,!0))break e;r.timeoutHandle=ld(Lu.bind(null,r,n,vu,Su,xu,t,gu,fu,yu,lu,s,2,-0,0),a)}else Lu(r,n,vu,Su,xu,t,gu,fu,yu,lu,s,0,-0,0)}break}a=qu(e,t,!1),s=!1}wc(e)}function Lu(e,t,n,r,a,s,i,l,u,c,d,p,h,f){if(e.timeoutHandle=-1,(8192&(p=t.subtreeFlags)||16785408===(16785408&p))&&(Wd={stylesheets:null,count:0,unsuspend:Ud},ql(t),null!==(p=function(){if(null===Wd)throw Error(o(475));var e=Wd;return e.stylesheets&&0===e.count&&Hd(e,e.stylesheets),0<e.count?function(t){var n=setTimeout((function(){if(e.stylesheets&&Hd(e,e.stylesheets),e.unsuspend){var t=e.unsuspend;e.unsuspend=null,t()}}),6e4);return e.unsuspend=t,function(){e.unsuspend=null,clearTimeout(n)}}:null}())))return e.cancelPendingCommit=p(nc.bind(null,e,t,s,n,r,a,i,l,u,d,1,h,f)),void Bu(e,s,i,!c);nc(e,t,s,n,r,a,i,l,u)}function zu(e){for(var t=e;;){var n=t.tag;if((0===n||11===n||15===n)&&16384&t.flags&&(null!==(n=t.updateQueue)&&null!==(n=n.stores)))for(var r=0;r<n.length;r++){var a=n[r],s=a.getSnapshot;a=a.value;try{if(!Kn(s(),a))return!1}catch(o){return!1}}if(n=t.child,16384&t.subtreeFlags&&null!==n)n.return=t,t=n;else{if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return!0;t=t.return}t.sibling.return=t.return,t=t.sibling}}return!0}function Bu(e,t,n,r){t&=~mu,t&=~fu,e.suspendedLanes|=t,e.pingedLanes&=~t,r&&(e.warmLanes|=t),r=e.expirationTimes;for(var a=t;0<a;){var s=31-he(a),o=1<<s;r[s]=-1,a&=~o}0!==n&&Ie(e,n,t)}function Vu(){return 0!==(6&nu)||(Sc(0,!1),!1)}function Wu(){if(null!==au){if(0===ou)var e=au.return;else ba=ya=null,Ps(e=au),Ko=null,Xo=0,e=au;for(;null!==e;)sl(e.alternate,e),e=e.return;au=null}}function Uu(e,t){var n=e.timeoutHandle;-1!==n&&(e.timeoutHandle=-1,ud(n)),null!==(n=e.cancelPendingCommit)&&(e.cancelPendingCommit=null,n()),Wu(),ru=e,au=n=Lr(e.current,null),su=t,ou=0,iu=null,lu=!1,uu=xe(e,t),cu=!1,yu=gu=mu=fu=hu=pu=0,vu=bu=null,xu=!1,0!==(8&t)&&(t|=32&t);var r=e.entangledLanes;if(0!==r)for(e=e.entanglements,r&=t;0<r;){var a=31-he(r),s=1<<a;t|=e[a],r&=~s}return du=t,Er(),n}function Gu(e,t){vs=null,O.H=jo,t===ja||t===Ya?(t=Ja(),ou=3):t===Ha?(t=Ja(),ou=4):ou=t===Ii?8:null!==t&&"object"===typeof t&&"function"===typeof t.then?6:1,iu=t,null===au&&(pu=1,ki(e,Tr(t,e.current)))}function ju(){var e=O.H;return O.H=jo,null===e?jo:e}function Hu(){var e=O.A;return O.A=eu,e}function Yu(){pu=4,lu||(4194048&su)!==su&&null!==ai.current||(uu=!0),0===(134217727&hu)&&0===(134217727&fu)||null===ru||Bu(ru,su,gu,!1)}function qu(e,t,n){var r=nu;nu|=2;var a=ju(),s=Hu();ru===e&&su===t||(Su=null,Uu(e,t)),t=!1;var o=pu;e:for(;;)try{if(0!==ou&&null!==au){var i=au,l=iu;switch(ou){case 8:Wu(),o=6;break e;case 3:case 2:case 9:case 6:null===ai.current&&(t=!0);var u=ou;if(ou=0,iu=null,Ju(e,i,l,u),n&&uu){o=0;break e}break;default:u=ou,ou=0,iu=null,Ju(e,i,l,u)}}Ku(),o=pu;break}catch(c){Gu(e,c)}return t&&e.shellSuspendCounter++,ba=ya=null,nu=r,O.H=a,O.A=s,null===au&&(ru=null,su=0,Er()),o}function Ku(){for(;null!==au;)Zu(au)}function Xu(){for(;null!==au&&!J();)Zu(au)}function Zu(e){var t=Zi(e.alternate,e,du);e.memoizedProps=e.pendingProps,null===t?ec(e):au=t}function Qu(e){var t=e,n=t.alternate;switch(t.tag){case 15:case 0:t=Mi(n,t,t.pendingProps,t.type,void 0,su);break;case 11:t=Mi(n,t,t.pendingProps,t.type.render,t.ref,su);break;case 5:Ps(t);default:sl(n,t),t=Zi(n,t=au=zr(t,du),du)}e.memoizedProps=e.pendingProps,null===t?ec(e):au=t}function Ju(e,t,n,r){ba=ya=null,Ps(t),Ko=null,Xo=0;var a=t.return;try{if(function(e,t,n,r,a){if(n.flags|=32768,null!==r&&"object"===typeof r&&"function"===typeof r.then){if(null!==(t=n.alternate)&&Sa(t,n,a,!0),null!==(n=ai.current)){switch(n.tag){case 13:return null===si?Yu():null===n.alternate&&0===pu&&(pu=3),n.flags&=-257,n.flags|=65536,n.lanes=a,r===qa?n.flags|=16384:(null===(t=n.updateQueue)?n.updateQueue=new Set([r]):t.add(r),dc(e,r,a)),!1;case 22:return n.flags|=65536,r===qa?n.flags|=16384:(null===(t=n.updateQueue)?(t={transitions:null,markerInstances:null,retryQueue:new Set([r])},n.updateQueue=t):null===(n=t.retryQueue)?t.retryQueue=new Set([r]):n.add(r),dc(e,r,a)),!1}throw Error(o(435,n.tag))}return dc(e,r,a),Yu(),!1}if(sa)return null!==(t=ai.current)?(0===(65536&t.flags)&&(t.flags|=256),t.flags|=65536,t.lanes=a,r!==la&&ma(Tr(e=Error(o(422),{cause:r}),n))):(r!==la&&ma(Tr(t=Error(o(423),{cause:r}),n)),(e=e.current.alternate).flags|=65536,a&=-a,e.lanes|=a,r=Tr(r,n),is(e,a=Si(e.stateNode,r,a)),4!==pu&&(pu=2)),!1;var s=Error(o(520),{cause:r});if(s=Tr(s,n),null===bu?bu=[s]:bu.push(s),4!==pu&&(pu=2),null===t)return!0;r=Tr(r,n),n=t;do{switch(n.tag){case 3:return n.flags|=65536,e=a&-a,n.lanes|=e,is(n,e=Si(n.stateNode,r,e)),!1;case 1:if(t=n.type,s=n.stateNode,0===(128&n.flags)&&("function"===typeof t.getDerivedStateFromError||null!==s&&"function"===typeof s.componentDidCatch&&(null===Tu||!Tu.has(s))))return n.flags|=65536,a&=-a,n.lanes|=a,Ni(a=Ti(a),e,n,r),is(n,a),!1}n=n.return}while(null!==n);return!1}(e,a,t,n,su))return pu=1,ki(e,Tr(n,e.current)),void(au=null)}catch(s){if(null!==a)throw au=a,s;return pu=1,ki(e,Tr(n,e.current)),void(au=null)}32768&t.flags?(sa||1===r?e=!0:uu||0!==(536870912&su)?e=!1:(lu=e=!0,(2===r||9===r||3===r||6===r)&&(null!==(r=ai.current)&&13===r.tag&&(r.flags|=16384))),tc(t,e)):ec(t)}function ec(e){var t=e;do{if(0!==(32768&t.flags))return void tc(t,lu);e=t.return;var n=rl(t.alternate,t,du);if(null!==n)return void(au=n);if(null!==(t=t.sibling))return void(au=t);au=t=e}while(null!==t);0===pu&&(pu=5)}function tc(e,t){do{var n=al(e.alternate,e);if(null!==n)return n.flags&=32767,void(au=n);if(null!==(n=e.return)&&(n.flags|=32768,n.subtreeFlags=0,n.deletions=null),!t&&null!==(e=e.sibling))return void(au=e);au=e=n}while(null!==e);pu=6,au=null}function nc(e,t,n,r,a,s,i,l,u){e.cancelPendingCommit=null;do{ic()}while(0!==Nu);if(0!==(6&nu))throw Error(o(327));if(null!==t){if(t===e.current)throw Error(o(177));if(s=t.lanes|t.childLanes,function(e,t,n,r,a,s){var o=e.pendingLanes;e.pendingLanes=n,e.suspendedLanes=0,e.pingedLanes=0,e.warmLanes=0,e.expiredLanes&=n,e.entangledLanes&=n,e.errorRecoveryDisabledLanes&=n,e.shellSuspendCounter=0;var i=e.entanglements,l=e.expirationTimes,u=e.hiddenUpdates;for(n=o&~n;0<n;){var c=31-he(n),d=1<<c;i[c]=0,l[c]=-1;var p=u[c];if(null!==p)for(u[c]=null,c=0;c<p.length;c++){var h=p[c];null!==h&&(h.lane&=-536870913)}n&=~d}0!==r&&Ie(e,r,0),0!==s&&0===a&&0!==e.tag&&(e.suspendedLanes|=s&~(o&~t))}(e,n,s|=Cr,i,l,u),e===ru&&(au=ru=null,su=0),Cu=t,Iu=e,Eu=n,$u=s,Au=a,_u=r,0!==(10256&t.subtreeFlags)||0!==(10256&t.flags)?(e.callbackNode=null,e.callbackPriority=0,Z(se,(function(){return lc(),null}))):(e.callbackNode=null,e.callbackPriority=0),r=0!==(13878&t.flags),0!==(13878&t.subtreeFlags)||r){r=O.T,O.T=null,a=D.p,D.p=2,i=nu,nu|=4;try{!function(e,t){if(e=e.containerInfo,td=np,tr(e=er(e))){if("selectionStart"in e)var n={start:e.selectionStart,end:e.selectionEnd};else e:{var r=(n=(n=e.ownerDocument)&&n.defaultView||window).getSelection&&n.getSelection();if(r&&0!==r.rangeCount){n=r.anchorNode;var a=r.anchorOffset,s=r.focusNode;r=r.focusOffset;try{n.nodeType,s.nodeType}catch(g){n=null;break e}var i=0,l=-1,u=-1,c=0,d=0,p=e,h=null;t:for(;;){for(var f;p!==n||0!==a&&3!==p.nodeType||(l=i+a),p!==s||0!==r&&3!==p.nodeType||(u=i+r),3===p.nodeType&&(i+=p.nodeValue.length),null!==(f=p.firstChild);)h=p,p=f;for(;;){if(p===e)break t;if(h===n&&++c===a&&(l=i),h===s&&++d===r&&(u=i),null!==(f=p.nextSibling))break;h=(p=h).parentNode}p=f}n=-1===l||-1===u?null:{start:l,end:u}}else n=null}n=n||{start:0,end:0}}else n=null;for(nd={focusedElem:e,selectionRange:n},np=!1,Sl=t;null!==Sl;)if(e=(t=Sl).child,0!==(1024&t.subtreeFlags)&&null!==e)e.return=t,Sl=e;else for(;null!==Sl;){switch(s=(t=Sl).alternate,e=t.flags,t.tag){case 0:case 11:case 15:case 5:case 26:case 27:case 6:case 4:case 17:break;case 1:if(0!==(1024&e)&&null!==s){e=void 0,n=t,a=s.memoizedProps,s=s.memoizedState,r=n.stateNode;try{var m=gi(n.type,a,(n.elementType,n.type));e=r.getSnapshotBeforeUpdate(m,s),r.__reactInternalSnapshotBeforeUpdate=e}catch(y){cc(n,n.return,y)}}break;case 3:if(0!==(1024&e))if(9===(n=(e=t.stateNode.containerInfo).nodeType))md(e);else if(1===n)switch(e.nodeName){case"HEAD":case"HTML":case"BODY":md(e);break;default:e.textContent=""}break;default:if(0!==(1024&e))throw Error(o(163))}if(null!==(e=t.sibling)){e.return=t.return,Sl=e;break}Sl=t.return}}(e,t)}finally{nu=i,D.p=a,O.T=r}}Nu=1,rc(),ac(),sc()}}function rc(){if(1===Nu){Nu=0;var e=Iu,t=Cu,n=0!==(13878&t.flags);if(0!==(13878&t.subtreeFlags)||n){n=O.T,O.T=null;var r=D.p;D.p=2;var a=nu;nu|=4;try{Ol(t,e);var s=nd,o=er(e.containerInfo),i=s.focusedElem,l=s.selectionRange;if(o!==i&&i&&i.ownerDocument&&Jn(i.ownerDocument.documentElement,i)){if(null!==l&&tr(i)){var u=l.start,c=l.end;if(void 0===c&&(c=u),"selectionStart"in i)i.selectionStart=u,i.selectionEnd=Math.min(c,i.value.length);else{var d=i.ownerDocument||document,p=d&&d.defaultView||window;if(p.getSelection){var h=p.getSelection(),f=i.textContent.length,m=Math.min(l.start,f),g=void 0===l.end?m:Math.min(l.end,f);!h.extend&&m>g&&(o=g,g=m,m=o);var y=Qn(i,m),b=Qn(i,g);if(y&&b&&(1!==h.rangeCount||h.anchorNode!==y.node||h.anchorOffset!==y.offset||h.focusNode!==b.node||h.focusOffset!==b.offset)){var v=d.createRange();v.setStart(y.node,y.offset),h.removeAllRanges(),m>g?(h.addRange(v),h.extend(b.node,b.offset)):(v.setEnd(b.node,b.offset),h.addRange(v))}}}}for(d=[],h=i;h=h.parentNode;)1===h.nodeType&&d.push({element:h,left:h.scrollLeft,top:h.scrollTop});for("function"===typeof i.focus&&i.focus(),i=0;i<d.length;i++){var x=d[i];x.element.scrollLeft=x.left,x.element.scrollTop=x.top}}np=!!td,nd=td=null}finally{nu=a,D.p=r,O.T=n}}e.current=t,Nu=2}}function ac(){if(2===Nu){Nu=0;var e=Iu,t=Cu,n=0!==(8772&t.flags);if(0!==(8772&t.subtreeFlags)||n){n=O.T,O.T=null;var r=D.p;D.p=2;var a=nu;nu|=4;try{Tl(e,t.alternate,t)}finally{nu=a,D.p=r,O.T=n}}Nu=3}}function sc(){if(4===Nu||3===Nu){Nu=0,ee();var e=Iu,t=Cu,n=Eu,r=_u;0!==(10256&t.subtreeFlags)||0!==(10256&t.flags)?Nu=5:(Nu=0,Cu=Iu=null,oc(e,e.pendingLanes));var a=e.pendingLanes;if(0===a&&(Tu=null),$e(n),t=t.stateNode,de&&"function"===typeof de.onCommitFiberRoot)try{de.onCommitFiberRoot(ce,t,void 0,128===(128&t.current.flags))}catch(l){}if(null!==r){t=O.T,a=D.p,D.p=2,O.T=null;try{for(var s=e.onRecoverableError,o=0;o<r.length;o++){var i=r[o];s(i.value,{componentStack:i.stack})}}finally{O.T=t,D.p=a}}0!==(3&Eu)&&ic(),wc(e),a=e.pendingLanes,0!==(4194090&n)&&0!==(42&a)?e===Fu?Ru++:(Ru=0,Fu=e):Ru=0,Sc(0,!1)}}function oc(e,t){0===(e.pooledCacheLanes&=t)&&(null!=(t=e.pooledCache)&&(e.pooledCache=null,Oa(t)))}function ic(e){return rc(),ac(),sc(),lc()}function lc(){if(5!==Nu)return!1;var e=Iu,t=$u;$u=0;var n=$e(Eu),r=O.T,a=D.p;try{D.p=32>n?32:n,O.T=null,n=Au,Au=null;var s=Iu,i=Eu;if(Nu=0,Cu=Iu=null,Eu=0,0!==(6&nu))throw Error(o(331));var l=nu;if(nu|=4,Zl(s.current),Ul(s,s.current,i,n),nu=l,Sc(0,!1),de&&"function"===typeof de.onPostCommitFiberRoot)try{de.onPostCommitFiberRoot(ce,s)}catch(u){}return!0}finally{D.p=a,O.T=r,oc(e,t)}}function uc(e,t,n){t=Tr(n,t),null!==(e=ss(e,t=Si(e.stateNode,t,2),2))&&(Ne(e,2),wc(e))}function cc(e,t,n){if(3===e.tag)uc(e,e,n);else for(;null!==t;){if(3===t.tag){uc(t,e,n);break}if(1===t.tag){var r=t.stateNode;if("function"===typeof t.type.getDerivedStateFromError||"function"===typeof r.componentDidCatch&&(null===Tu||!Tu.has(r))){e=Tr(n,e),null!==(r=ss(t,n=Ti(2),2))&&(Ni(n,r,t,e),Ne(r,2),wc(r));break}}t=t.return}}function dc(e,t,n){var r=e.pingCache;if(null===r){r=e.pingCache=new tu;var a=new Set;r.set(t,a)}else void 0===(a=r.get(t))&&(a=new Set,r.set(t,a));a.has(n)||(cu=!0,a.add(n),e=pc.bind(null,e,t,n),t.then(e,e))}function pc(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),e.pingedLanes|=e.suspendedLanes&n,e.warmLanes&=~n,ru===e&&(su&n)===n&&(4===pu||3===pu&&(62914560&su)===su&&300>te()-ku?0===(2&nu)&&Uu(e,0):mu|=n,yu===su&&(yu=0)),wc(e)}function hc(e,t){0===t&&(t=Se()),null!==(e=_r(e,t))&&(Ne(e,t),wc(e))}function fc(e){var t=e.memoizedState,n=0;null!==t&&(n=t.retryLane),hc(e,n)}function mc(e,t){var n=0;switch(e.tag){case 13:var r=e.stateNode,a=e.memoizedState;null!==a&&(n=a.retryLane);break;case 19:r=e.stateNode;break;case 22:r=e.stateNode._retryCache;break;default:throw Error(o(314))}null!==r&&r.delete(t),hc(e,n)}var gc=null,yc=null,bc=!1,vc=!1,xc=!1,kc=0;function wc(e){e!==yc&&null===e.next&&(null===yc?gc=yc=e:yc=yc.next=e),vc=!0,bc||(bc=!0,dd((function(){0!==(6&nu)?Z(re,Tc):Nc()})))}function Sc(e,t){if(!xc&&vc){xc=!0;do{for(var n=!1,r=gc;null!==r;){if(!t)if(0!==e){var a=r.pendingLanes;if(0===a)var s=0;else{var o=r.suspendedLanes,i=r.pingedLanes;s=(1<<31-he(42|e)+1)-1,s=201326741&(s&=a&~(o&~i))?201326741&s|1:s?2|s:0}0!==s&&(n=!0,Ec(r,s))}else s=su,0===(3&(s=ve(r,r===ru?s:0,null!==r.cancelPendingCommit||-1!==r.timeoutHandle)))||xe(r,s)||(n=!0,Ec(r,s));r=r.next}}while(n);xc=!1}}function Tc(){Nc()}function Nc(){vc=bc=!1;var e=0;0!==kc&&(function(){var e=window.event;if(e&&"popstate"===e.type)return e!==id&&(id=e,!0);return id=null,!1}()&&(e=kc),kc=0);for(var t=te(),n=null,r=gc;null!==r;){var a=r.next,s=Ic(r,t);0===s?(r.next=null,null===n?gc=a:n.next=a,null===a&&(yc=n)):(n=r,(0!==e||0!==(3&s))&&(vc=!0)),r=a}Sc(e,!1)}function Ic(e,t){for(var n=e.suspendedLanes,r=e.pingedLanes,a=e.expirationTimes,s=-62914561&e.pendingLanes;0<s;){var o=31-he(s),i=1<<o,l=a[o];-1===l?0!==(i&n)&&0===(i&r)||(a[o]=ke(i,t)):l<=t&&(e.expiredLanes|=i),s&=~i}if(n=su,n=ve(e,e===(t=ru)?n:0,null!==e.cancelPendingCommit||-1!==e.timeoutHandle),r=e.callbackNode,0===n||e===t&&(2===ou||9===ou)||null!==e.cancelPendingCommit)return null!==r&&null!==r&&Q(r),e.callbackNode=null,e.callbackPriority=0;if(0===(3&n)||xe(e,n)){if((t=n&-n)===e.callbackPriority)return t;switch(null!==r&&Q(r),$e(n)){case 2:case 8:n=ae;break;case 32:default:n=se;break;case 268435456:n=ie}return r=Cc.bind(null,e),n=Z(n,r),e.callbackPriority=t,e.callbackNode=n,t}return null!==r&&null!==r&&Q(r),e.callbackPriority=2,e.callbackNode=null,2}function Cc(e,t){if(0!==Nu&&5!==Nu)return e.callbackNode=null,e.callbackPriority=0,null;var n=e.callbackNode;if(ic()&&e.callbackNode!==n)return null;var r=su;return 0===(r=ve(e,e===ru?r:0,null!==e.cancelPendingCommit||-1!==e.timeoutHandle))?null:(Pu(e,r,t),Ic(e,te()),null!=e.callbackNode&&e.callbackNode===n?Cc.bind(null,e):null)}function Ec(e,t){if(ic())return null;Pu(e,t,!0)}function $c(){return 0===kc&&(kc=we()),kc}function Ac(e){return null==e||"symbol"===typeof e||"boolean"===typeof e?null:"function"===typeof e?e:$t(""+e)}function _c(e,t){var n=t.ownerDocument.createElement("input");return n.name=t.name,n.value=t.value,e.id&&n.setAttribute("form",e.id),t.parentNode.insertBefore(n,t),e=new FormData(e),n.parentNode.removeChild(n),e}for(var Rc=0;Rc<kr.length;Rc++){var Fc=kr[Rc];wr(Fc.toLowerCase(),"on"+(Fc[0].toUpperCase()+Fc.slice(1)))}wr(hr,"onAnimationEnd"),wr(fr,"onAnimationIteration"),wr(mr,"onAnimationStart"),wr("dblclick","onDoubleClick"),wr("focusin","onFocus"),wr("focusout","onBlur"),wr(gr,"onTransitionRun"),wr(yr,"onTransitionStart"),wr(br,"onTransitionCancel"),wr(vr,"onTransitionEnd"),Ke("onMouseEnter",["mouseout","mouseover"]),Ke("onMouseLeave",["mouseout","mouseover"]),Ke("onPointerEnter",["pointerout","pointerover"]),Ke("onPointerLeave",["pointerout","pointerover"]),qe("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),qe("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),qe("onBeforeInput",["compositionend","keypress","textInput","paste"]),qe("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),qe("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),qe("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Oc="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Dc=new Set("beforetoggle cancel close invalid load scroll scrollend toggle".split(" ").concat(Oc));function Mc(e,t){t=0!==(4&t);for(var n=0;n<e.length;n++){var r=e[n],a=r.event;r=r.listeners;e:{var s=void 0;if(t)for(var o=r.length-1;0<=o;o--){var i=r[o],l=i.instance,u=i.currentTarget;if(i=i.listener,l!==s&&a.isPropagationStopped())break e;s=i,a.currentTarget=u;try{s(a)}catch(c){yi(c)}a.currentTarget=null,s=l}else for(o=0;o<r.length;o++){if(l=(i=r[o]).instance,u=i.currentTarget,i=i.listener,l!==s&&a.isPropagationStopped())break e;s=i,a.currentTarget=u;try{s(a)}catch(c){yi(c)}a.currentTarget=null,s=l}}}}function Pc(e,t){var n=t[De];void 0===n&&(n=t[De]=new Set);var r=e+"__bubble";n.has(r)||(Vc(t,e,2,!1),n.add(r))}function Lc(e,t,n){var r=0;t&&(r|=4),Vc(n,e,r,t)}var zc="_reactListening"+Math.random().toString(36).slice(2);function Bc(e){if(!e[zc]){e[zc]=!0,He.forEach((function(t){"selectionchange"!==t&&(Dc.has(t)||Lc(t,!1,e),Lc(t,!0,e))}));var t=9===e.nodeType?e:e.ownerDocument;null===t||t[zc]||(t[zc]=!0,Lc("selectionchange",!1,t))}}function Vc(e,t,n,r){switch(up(t)){case 2:var a=rp;break;case 8:a=ap;break;default:a=sp}n=a.bind(null,t,n,e),a=void 0,!zt||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(a=!0),r?void 0!==a?e.addEventListener(t,n,{capture:!0,passive:a}):e.addEventListener(t,n,!0):void 0!==a?e.addEventListener(t,n,{passive:a}):e.addEventListener(t,n,!1)}function Wc(e,t,n,r,a){var s=r;if(0===(1&t)&&0===(2&t)&&null!==r)e:for(;;){if(null===r)return;var o=r.tag;if(3===o||4===o){var i=r.stateNode.containerInfo;if(i===a)break;if(4===o)for(o=r.return;null!==o;){var u=o.tag;if((3===u||4===u)&&o.stateNode.containerInfo===a)return;o=o.return}for(;null!==i;){if(null===(o=Ve(i)))return;if(5===(u=o.tag)||6===u||26===u||27===u){r=s=o;continue e}i=i.parentNode}}r=r.return}Mt((function(){var r=s,a=_t(n),o=[];e:{var i=xr.get(e);if(void 0!==i){var u=Jt,c=e;switch(e){case"keypress":if(0===jt(n))break e;case"keydown":case"keyup":u=mn;break;case"focusin":c="focus",u=sn;break;case"focusout":c="blur",u=sn;break;case"beforeblur":case"afterblur":u=sn;break;case"click":if(2===n.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":u=rn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":u=an;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":u=yn;break;case hr:case fr:case mr:u=on;break;case vr:u=bn;break;case"scroll":case"scrollend":u=tn;break;case"wheel":u=vn;break;case"copy":case"cut":case"paste":u=ln;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":u=gn;break;case"toggle":case"beforetoggle":u=xn}var d=0!==(4&t),p=!d&&("scroll"===e||"scrollend"===e),h=d?null!==i?i+"Capture":null:i;d=[];for(var f,m=r;null!==m;){var g=m;if(f=g.stateNode,5!==(g=g.tag)&&26!==g&&27!==g||null===f||null===h||null!=(g=Pt(m,h))&&d.push(Uc(m,g,f)),p)break;m=m.return}0<d.length&&(i=new u(i,c,null,n,a),o.push({event:i,listeners:d}))}}if(0===(7&t)){if(u="mouseout"===e||"pointerout"===e,(!(i="mouseover"===e||"pointerover"===e)||n===At||!(c=n.relatedTarget||n.fromElement)||!Ve(c)&&!c[Oe])&&(u||i)&&(i=a.window===a?a:(i=a.ownerDocument)?i.defaultView||i.parentWindow:window,u?(u=r,null!==(c=(c=n.relatedTarget||n.toElement)?Ve(c):null)&&(p=l(c),d=c.tag,c!==p||5!==d&&27!==d&&6!==d)&&(c=null)):(u=null,c=r),u!==c)){if(d=rn,g="onMouseLeave",h="onMouseEnter",m="mouse","pointerout"!==e&&"pointerover"!==e||(d=gn,g="onPointerLeave",h="onPointerEnter",m="pointer"),p=null==u?i:Ue(u),f=null==c?i:Ue(c),(i=new d(g,m+"leave",u,n,a)).target=p,i.relatedTarget=f,g=null,Ve(a)===r&&((d=new d(h,m+"enter",c,n,a)).target=f,d.relatedTarget=p,g=d),p=g,u&&c)e:{for(h=c,m=0,f=d=u;f;f=jc(f))m++;for(f=0,g=h;g;g=jc(g))f++;for(;0<m-f;)d=jc(d),m--;for(;0<f-m;)h=jc(h),f--;for(;m--;){if(d===h||null!==h&&d===h.alternate)break e;d=jc(d),h=jc(h)}d=null}else d=null;null!==u&&Hc(o,i,u,d,!1),null!==c&&null!==p&&Hc(o,p,c,d,!0)}if("select"===(u=(i=r?Ue(r):window).nodeName&&i.nodeName.toLowerCase())||"input"===u&&"file"===i.type)var y=Ln;else if(Rn(i))if(zn)y=qn;else{y=Hn;var b=jn}else!(u=i.nodeName)||"input"!==u.toLowerCase()||"checkbox"!==i.type&&"radio"!==i.type?r&&It(r.elementType)&&(y=Ln):y=Yn;switch(y&&(y=y(e,r))?Fn(o,y,n,a):(b&&b(e,i,r),"focusout"===e&&r&&"number"===i.type&&null!=r.memoizedProps.value&&bt(i,"number",i.value)),b=r?Ue(r):window,e){case"focusin":(Rn(b)||"true"===b.contentEditable)&&(rr=b,ar=r,sr=null);break;case"focusout":sr=ar=rr=null;break;case"mousedown":or=!0;break;case"contextmenu":case"mouseup":case"dragend":or=!1,ir(o,n,a);break;case"selectionchange":if(nr)break;case"keydown":case"keyup":ir(o,n,a)}var v;if(wn)e:{switch(e){case"compositionstart":var x="onCompositionStart";break e;case"compositionend":x="onCompositionEnd";break e;case"compositionupdate":x="onCompositionUpdate";break e}x=void 0}else An?En(e,n)&&(x="onCompositionEnd"):"keydown"===e&&229===n.keyCode&&(x="onCompositionStart");x&&(Nn&&"ko"!==n.locale&&(An||"onCompositionStart"!==x?"onCompositionEnd"===x&&An&&(v=Gt()):(Wt="value"in(Vt=a)?Vt.value:Vt.textContent,An=!0)),0<(b=Gc(r,x)).length&&(x=new un(x,e,null,n,a),o.push({event:x,listeners:b}),v?x.data=v:null!==(v=$n(n))&&(x.data=v))),(v=Tn?function(e,t){switch(e){case"compositionend":return $n(t);case"keypress":return 32!==t.which?null:(Cn=!0,In);case"textInput":return(e=t.data)===In&&Cn?null:e;default:return null}}(e,n):function(e,t){if(An)return"compositionend"===e||!wn&&En(e,t)?(e=Gt(),Ut=Wt=Vt=null,An=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Nn&&"ko"!==t.locale?null:t.data}}(e,n))&&(0<(x=Gc(r,"onBeforeInput")).length&&(b=new un("onBeforeInput","beforeinput",null,n,a),o.push({event:b,listeners:x}),b.data=v)),function(e,t,n,r,a){if("submit"===t&&n&&n.stateNode===a){var s=Ac((a[Fe]||null).action),o=r.submitter;o&&null!==(t=(t=o[Fe]||null)?Ac(t.formAction):o.getAttribute("formAction"))&&(s=t,o=null);var i=new Jt("action","action",null,r,a);e.push({event:i,listeners:[{instance:null,listener:function(){if(r.defaultPrevented){if(0!==kc){var e=o?_c(a,o):new FormData(a);_o(n,{pending:!0,data:e,method:a.method,action:s},null,e)}}else"function"===typeof s&&(i.preventDefault(),e=o?_c(a,o):new FormData(a),_o(n,{pending:!0,data:e,method:a.method,action:s},s,e))},currentTarget:a}]})}}(o,e,r,n,a)}Mc(o,t)}))}function Uc(e,t,n){return{instance:e,listener:t,currentTarget:n}}function Gc(e,t){for(var n=t+"Capture",r=[];null!==e;){var a=e,s=a.stateNode;if(5!==(a=a.tag)&&26!==a&&27!==a||null===s||(null!=(a=Pt(e,n))&&r.unshift(Uc(e,a,s)),null!=(a=Pt(e,t))&&r.push(Uc(e,a,s))),3===e.tag)return r;e=e.return}return[]}function jc(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag&&27!==e.tag);return e||null}function Hc(e,t,n,r,a){for(var s=t._reactName,o=[];null!==n&&n!==r;){var i=n,l=i.alternate,u=i.stateNode;if(i=i.tag,null!==l&&l===r)break;5!==i&&26!==i&&27!==i||null===u||(l=u,a?null!=(u=Pt(n,s))&&o.unshift(Uc(n,u,l)):a||null!=(u=Pt(n,s))&&o.push(Uc(n,u,l))),n=n.return}0!==o.length&&e.push({event:t,listeners:o})}var Yc=/\r\n?/g,qc=/\u0000|\uFFFD/g;function Kc(e){return("string"===typeof e?e:""+e).replace(Yc,"\n").replace(qc,"")}function Xc(e,t){return t=Kc(t),Kc(e)===t}function Zc(){}function Qc(e,t,n,r,a,s){switch(n){case"children":"string"===typeof r?"body"===t||"textarea"===t&&""===r||wt(e,r):("number"===typeof r||"bigint"===typeof r)&&"body"!==t&&wt(e,""+r);break;case"className":nt(e,"class",r);break;case"tabIndex":nt(e,"tabindex",r);break;case"dir":case"role":case"viewBox":case"width":case"height":nt(e,n,r);break;case"style":Nt(e,r,s);break;case"data":if("object"!==t){nt(e,"data",r);break}case"src":case"href":if(""===r&&("a"!==t||"href"!==n)){e.removeAttribute(n);break}if(null==r||"function"===typeof r||"symbol"===typeof r||"boolean"===typeof r){e.removeAttribute(n);break}r=$t(""+r),e.setAttribute(n,r);break;case"action":case"formAction":if("function"===typeof r){e.setAttribute(n,"javascript:throw new Error('A React form was unexpectedly submitted. If you called form.submit() manually, consider using form.requestSubmit() instead. If you\\'re trying to use event.stopPropagation() in a submit event handler, consider also calling event.preventDefault().')");break}if("function"===typeof s&&("formAction"===n?("input"!==t&&Qc(e,t,"name",a.name,a,null),Qc(e,t,"formEncType",a.formEncType,a,null),Qc(e,t,"formMethod",a.formMethod,a,null),Qc(e,t,"formTarget",a.formTarget,a,null)):(Qc(e,t,"encType",a.encType,a,null),Qc(e,t,"method",a.method,a,null),Qc(e,t,"target",a.target,a,null))),null==r||"symbol"===typeof r||"boolean"===typeof r){e.removeAttribute(n);break}r=$t(""+r),e.setAttribute(n,r);break;case"onClick":null!=r&&(e.onclick=Zc);break;case"onScroll":null!=r&&Pc("scroll",e);break;case"onScrollEnd":null!=r&&Pc("scrollend",e);break;case"dangerouslySetInnerHTML":if(null!=r){if("object"!==typeof r||!("__html"in r))throw Error(o(61));if(null!=(n=r.__html)){if(null!=a.children)throw Error(o(60));e.innerHTML=n}}break;case"multiple":e.multiple=r&&"function"!==typeof r&&"symbol"!==typeof r;break;case"muted":e.muted=r&&"function"!==typeof r&&"symbol"!==typeof r;break;case"suppressContentEditableWarning":case"suppressHydrationWarning":case"defaultValue":case"defaultChecked":case"innerHTML":case"ref":case"autoFocus":break;case"xlinkHref":if(null==r||"function"===typeof r||"boolean"===typeof r||"symbol"===typeof r){e.removeAttribute("xlink:href");break}n=$t(""+r),e.setAttributeNS("http://www.w3.org/1999/xlink","xlink:href",n);break;case"contentEditable":case"spellCheck":case"draggable":case"value":case"autoReverse":case"externalResourcesRequired":case"focusable":case"preserveAlpha":null!=r&&"function"!==typeof r&&"symbol"!==typeof r?e.setAttribute(n,""+r):e.removeAttribute(n);break;case"inert":case"allowFullScreen":case"async":case"autoPlay":case"controls":case"default":case"defer":case"disabled":case"disablePictureInPicture":case"disableRemotePlayback":case"formNoValidate":case"hidden":case"loop":case"noModule":case"noValidate":case"open":case"playsInline":case"readOnly":case"required":case"reversed":case"scoped":case"seamless":case"itemScope":r&&"function"!==typeof r&&"symbol"!==typeof r?e.setAttribute(n,""):e.removeAttribute(n);break;case"capture":case"download":!0===r?e.setAttribute(n,""):!1!==r&&null!=r&&"function"!==typeof r&&"symbol"!==typeof r?e.setAttribute(n,r):e.removeAttribute(n);break;case"cols":case"rows":case"size":case"span":null!=r&&"function"!==typeof r&&"symbol"!==typeof r&&!isNaN(r)&&1<=r?e.setAttribute(n,r):e.removeAttribute(n);break;case"rowSpan":case"start":null==r||"function"===typeof r||"symbol"===typeof r||isNaN(r)?e.removeAttribute(n):e.setAttribute(n,r);break;case"popover":Pc("beforetoggle",e),Pc("toggle",e),tt(e,"popover",r);break;case"xlinkActuate":rt(e,"http://www.w3.org/1999/xlink","xlink:actuate",r);break;case"xlinkArcrole":rt(e,"http://www.w3.org/1999/xlink","xlink:arcrole",r);break;case"xlinkRole":rt(e,"http://www.w3.org/1999/xlink","xlink:role",r);break;case"xlinkShow":rt(e,"http://www.w3.org/1999/xlink","xlink:show",r);break;case"xlinkTitle":rt(e,"http://www.w3.org/1999/xlink","xlink:title",r);break;case"xlinkType":rt(e,"http://www.w3.org/1999/xlink","xlink:type",r);break;case"xmlBase":rt(e,"http://www.w3.org/XML/1998/namespace","xml:base",r);break;case"xmlLang":rt(e,"http://www.w3.org/XML/1998/namespace","xml:lang",r);break;case"xmlSpace":rt(e,"http://www.w3.org/XML/1998/namespace","xml:space",r);break;case"is":tt(e,"is",r);break;case"innerText":case"textContent":break;default:(!(2<n.length)||"o"!==n[0]&&"O"!==n[0]||"n"!==n[1]&&"N"!==n[1])&&tt(e,n=Ct.get(n)||n,r)}}function Jc(e,t,n,r,a,s){switch(n){case"style":Nt(e,r,s);break;case"dangerouslySetInnerHTML":if(null!=r){if("object"!==typeof r||!("__html"in r))throw Error(o(61));if(null!=(n=r.__html)){if(null!=a.children)throw Error(o(60));e.innerHTML=n}}break;case"children":"string"===typeof r?wt(e,r):("number"===typeof r||"bigint"===typeof r)&&wt(e,""+r);break;case"onScroll":null!=r&&Pc("scroll",e);break;case"onScrollEnd":null!=r&&Pc("scrollend",e);break;case"onClick":null!=r&&(e.onclick=Zc);break;case"suppressContentEditableWarning":case"suppressHydrationWarning":case"innerHTML":case"ref":case"innerText":case"textContent":break;default:Ye.hasOwnProperty(n)||("o"!==n[0]||"n"!==n[1]||(a=n.endsWith("Capture"),t=n.slice(2,a?n.length-7:void 0),"function"===typeof(s=null!=(s=e[Fe]||null)?s[n]:null)&&e.removeEventListener(t,s,a),"function"!==typeof r)?n in e?e[n]=r:!0===r?e.setAttribute(n,""):tt(e,n,r):("function"!==typeof s&&null!==s&&(n in e?e[n]=null:e.hasAttribute(n)&&e.removeAttribute(n)),e.addEventListener(t,r,a)))}}function ed(e,t,n){switch(t){case"div":case"span":case"svg":case"path":case"a":case"g":case"p":case"li":break;case"img":Pc("error",e),Pc("load",e);var r,a=!1,s=!1;for(r in n)if(n.hasOwnProperty(r)){var i=n[r];if(null!=i)switch(r){case"src":a=!0;break;case"srcSet":s=!0;break;case"children":case"dangerouslySetInnerHTML":throw Error(o(137,t));default:Qc(e,t,r,i,n,null)}}return s&&Qc(e,t,"srcSet",n.srcSet,n,null),void(a&&Qc(e,t,"src",n.src,n,null));case"input":Pc("invalid",e);var l=r=i=s=null,u=null,c=null;for(a in n)if(n.hasOwnProperty(a)){var d=n[a];if(null!=d)switch(a){case"name":s=d;break;case"type":i=d;break;case"checked":u=d;break;case"defaultChecked":c=d;break;case"value":r=d;break;case"defaultValue":l=d;break;case"children":case"dangerouslySetInnerHTML":if(null!=d)throw Error(o(137,t));break;default:Qc(e,t,a,d,n,null)}}return yt(e,r,l,u,c,i,s,!1),void dt(e);case"select":for(s in Pc("invalid",e),a=i=r=null,n)if(n.hasOwnProperty(s)&&null!=(l=n[s]))switch(s){case"value":r=l;break;case"defaultValue":i=l;break;case"multiple":a=l;default:Qc(e,t,s,l,n,null)}return t=r,n=i,e.multiple=!!a,void(null!=t?vt(e,!!a,t,!1):null!=n&&vt(e,!!a,n,!0));case"textarea":for(i in Pc("invalid",e),r=s=a=null,n)if(n.hasOwnProperty(i)&&null!=(l=n[i]))switch(i){case"value":a=l;break;case"defaultValue":s=l;break;case"children":r=l;break;case"dangerouslySetInnerHTML":if(null!=l)throw Error(o(91));break;default:Qc(e,t,i,l,n,null)}return kt(e,a,s,r),void dt(e);case"option":for(u in n)if(n.hasOwnProperty(u)&&null!=(a=n[u]))if("selected"===u)e.selected=a&&"function"!==typeof a&&"symbol"!==typeof a;else Qc(e,t,u,a,n,null);return;case"dialog":Pc("beforetoggle",e),Pc("toggle",e),Pc("cancel",e),Pc("close",e);break;case"iframe":case"object":Pc("load",e);break;case"video":case"audio":for(a=0;a<Oc.length;a++)Pc(Oc[a],e);break;case"image":Pc("error",e),Pc("load",e);break;case"details":Pc("toggle",e);break;case"embed":case"source":case"link":Pc("error",e),Pc("load",e);case"area":case"base":case"br":case"col":case"hr":case"keygen":case"meta":case"param":case"track":case"wbr":case"menuitem":for(c in n)if(n.hasOwnProperty(c)&&null!=(a=n[c]))switch(c){case"children":case"dangerouslySetInnerHTML":throw Error(o(137,t));default:Qc(e,t,c,a,n,null)}return;default:if(It(t)){for(d in n)n.hasOwnProperty(d)&&(void 0!==(a=n[d])&&Jc(e,t,d,a,n,void 0));return}}for(l in n)n.hasOwnProperty(l)&&(null!=(a=n[l])&&Qc(e,t,l,a,n,null))}var td=null,nd=null;function rd(e){return 9===e.nodeType?e:e.ownerDocument}function ad(e){switch(e){case"http://www.w3.org/2000/svg":return 1;case"http://www.w3.org/1998/Math/MathML":return 2;default:return 0}}function sd(e,t){if(0===e)switch(t){case"svg":return 1;case"math":return 2;default:return 0}return 1===e&&"foreignObject"===t?0:e}function od(e,t){return"textarea"===e||"noscript"===e||"string"===typeof t.children||"number"===typeof t.children||"bigint"===typeof t.children||"object"===typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var id=null;var ld="function"===typeof setTimeout?setTimeout:void 0,ud="function"===typeof clearTimeout?clearTimeout:void 0,cd="function"===typeof Promise?Promise:void 0,dd="function"===typeof queueMicrotask?queueMicrotask:"undefined"!==typeof cd?function(e){return cd.resolve(null).then(e).catch(pd)}:ld;function pd(e){setTimeout((function(){throw e}))}function hd(e){return"head"===e}function fd(e,t){var n=t,r=0,a=0;do{var s=n.nextSibling;if(e.removeChild(n),s&&8===s.nodeType)if("/$"===(n=s.data)){if(0<r&&8>r){n=r;var o=e.ownerDocument;if(1&n&&kd(o.documentElement),2&n&&kd(o.body),4&n)for(kd(n=o.head),o=n.firstChild;o;){var i=o.nextSibling,l=o.nodeName;o[ze]||"SCRIPT"===l||"STYLE"===l||"LINK"===l&&"stylesheet"===o.rel.toLowerCase()||n.removeChild(o),o=i}}if(0===a)return e.removeChild(s),void Cp(t);a--}else"$"===n||"$?"===n||"$!"===n?a++:r=n.charCodeAt(0)-48;else r=0;n=s}while(n);Cp(t)}function md(e){var t=e.firstChild;for(t&&10===t.nodeType&&(t=t.nextSibling);t;){var n=t;switch(t=t.nextSibling,n.nodeName){case"HTML":case"HEAD":case"BODY":md(n),Be(n);continue;case"SCRIPT":case"STYLE":continue;case"LINK":if("stylesheet"===n.rel.toLowerCase())continue}e.removeChild(n)}}function gd(e){return"$!"===e.data||"$?"===e.data&&"complete"===e.ownerDocument.readyState}function yd(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break;if(8===t){if("$"===(t=e.data)||"$!"===t||"$?"===t||"F!"===t||"F"===t)break;if("/$"===t)return null}}return e}var bd=null;function vd(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}function xd(e,t,n){switch(t=rd(n),e){case"html":if(!(e=t.documentElement))throw Error(o(452));return e;case"head":if(!(e=t.head))throw Error(o(453));return e;case"body":if(!(e=t.body))throw Error(o(454));return e;default:throw Error(o(451))}}function kd(e){for(var t=e.attributes;t.length;)e.removeAttributeNode(t[0]);Be(e)}var wd=new Map,Sd=new Set;function Td(e){return"function"===typeof e.getRootNode?e.getRootNode():9===e.nodeType?e:e.ownerDocument}var Nd=D.d;D.d={f:function(){var e=Nd.f(),t=Vu();return e||t},r:function(e){var t=We(e);null!==t&&5===t.tag&&"form"===t.type?Fo(t):Nd.r(e)},D:function(e){Nd.D(e),Cd("dns-prefetch",e,null)},C:function(e,t){Nd.C(e,t),Cd("preconnect",e,t)},L:function(e,t,n){Nd.L(e,t,n);var r=Id;if(r&&e&&t){var a='link[rel="preload"][as="'+mt(t)+'"]';"image"===t&&n&&n.imageSrcSet?(a+='[imagesrcset="'+mt(n.imageSrcSet)+'"]',"string"===typeof n.imageSizes&&(a+='[imagesizes="'+mt(n.imageSizes)+'"]')):a+='[href="'+mt(e)+'"]';var s=a;switch(t){case"style":s=$d(e);break;case"script":s=Rd(e)}wd.has(s)||(e=p({rel:"preload",href:"image"===t&&n&&n.imageSrcSet?void 0:e,as:t},n),wd.set(s,e),null!==r.querySelector(a)||"style"===t&&r.querySelector(Ad(s))||"script"===t&&r.querySelector(Fd(s))||(ed(t=r.createElement("link"),"link",e),je(t),r.head.appendChild(t)))}},m:function(e,t){Nd.m(e,t);var n=Id;if(n&&e){var r=t&&"string"===typeof t.as?t.as:"script",a='link[rel="modulepreload"][as="'+mt(r)+'"][href="'+mt(e)+'"]',s=a;switch(r){case"audioworklet":case"paintworklet":case"serviceworker":case"sharedworker":case"worker":case"script":s=Rd(e)}if(!wd.has(s)&&(e=p({rel:"modulepreload",href:e},t),wd.set(s,e),null===n.querySelector(a))){switch(r){case"audioworklet":case"paintworklet":case"serviceworker":case"sharedworker":case"worker":case"script":if(n.querySelector(Fd(s)))return}ed(r=n.createElement("link"),"link",e),je(r),n.head.appendChild(r)}}},X:function(e,t){Nd.X(e,t);var n=Id;if(n&&e){var r=Ge(n).hoistableScripts,a=Rd(e),s=r.get(a);s||((s=n.querySelector(Fd(a)))||(e=p({src:e,async:!0},t),(t=wd.get(a))&&Pd(e,t),je(s=n.createElement("script")),ed(s,"link",e),n.head.appendChild(s)),s={type:"script",instance:s,count:1,state:null},r.set(a,s))}},S:function(e,t,n){Nd.S(e,t,n);var r=Id;if(r&&e){var a=Ge(r).hoistableStyles,s=$d(e);t=t||"default";var o=a.get(s);if(!o){var i={loading:0,preload:null};if(o=r.querySelector(Ad(s)))i.loading=5;else{e=p({rel:"stylesheet",href:e,"data-precedence":t},n),(n=wd.get(s))&&Md(e,n);var l=o=r.createElement("link");je(l),ed(l,"link",e),l._p=new Promise((function(e,t){l.onload=e,l.onerror=t})),l.addEventListener("load",(function(){i.loading|=1})),l.addEventListener("error",(function(){i.loading|=2})),i.loading|=4,Dd(o,t,r)}o={type:"stylesheet",instance:o,count:1,state:i},a.set(s,o)}}},M:function(e,t){Nd.M(e,t);var n=Id;if(n&&e){var r=Ge(n).hoistableScripts,a=Rd(e),s=r.get(a);s||((s=n.querySelector(Fd(a)))||(e=p({src:e,async:!0,type:"module"},t),(t=wd.get(a))&&Pd(e,t),je(s=n.createElement("script")),ed(s,"link",e),n.head.appendChild(s)),s={type:"script",instance:s,count:1,state:null},r.set(a,s))}}};var Id="undefined"===typeof document?null:document;function Cd(e,t,n){var r=Id;if(r&&"string"===typeof t&&t){var a=mt(t);a='link[rel="'+e+'"][href="'+a+'"]',"string"===typeof n&&(a+='[crossorigin="'+n+'"]'),Sd.has(a)||(Sd.add(a),e={rel:e,crossOrigin:n,href:t},null===r.querySelector(a)&&(ed(t=r.createElement("link"),"link",e),je(t),r.head.appendChild(t)))}}function Ed(e,t,n,r){var a,s,i,l,u=(u=G.current)?Td(u):null;if(!u)throw Error(o(446));switch(e){case"meta":case"title":return null;case"style":return"string"===typeof n.precedence&&"string"===typeof n.href?(t=$d(n.href),(r=(n=Ge(u).hoistableStyles).get(t))||(r={type:"style",instance:null,count:0,state:null},n.set(t,r)),r):{type:"void",instance:null,count:0,state:null};case"link":if("stylesheet"===n.rel&&"string"===typeof n.href&&"string"===typeof n.precedence){e=$d(n.href);var c=Ge(u).hoistableStyles,d=c.get(e);if(d||(u=u.ownerDocument||u,d={type:"stylesheet",instance:null,count:0,state:{loading:0,preload:null}},c.set(e,d),(c=u.querySelector(Ad(e)))&&!c._p&&(d.instance=c,d.state.loading=5),wd.has(e)||(n={rel:"preload",as:"style",href:n.href,crossOrigin:n.crossOrigin,integrity:n.integrity,media:n.media,hrefLang:n.hrefLang,referrerPolicy:n.referrerPolicy},wd.set(e,n),c||(a=u,s=e,i=n,l=d.state,a.querySelector('link[rel="preload"][as="style"]['+s+"]")?l.loading=1:(s=a.createElement("link"),l.preload=s,s.addEventListener("load",(function(){return l.loading|=1})),s.addEventListener("error",(function(){return l.loading|=2})),ed(s,"link",i),je(s),a.head.appendChild(s))))),t&&null===r)throw Error(o(528,""));return d}if(t&&null!==r)throw Error(o(529,""));return null;case"script":return t=n.async,"string"===typeof(n=n.src)&&t&&"function"!==typeof t&&"symbol"!==typeof t?(t=Rd(n),(r=(n=Ge(u).hoistableScripts).get(t))||(r={type:"script",instance:null,count:0,state:null},n.set(t,r)),r):{type:"void",instance:null,count:0,state:null};default:throw Error(o(444,e))}}function $d(e){return'href="'+mt(e)+'"'}function Ad(e){return'link[rel="stylesheet"]['+e+"]"}function _d(e){return p({},e,{"data-precedence":e.precedence,precedence:null})}function Rd(e){return'[src="'+mt(e)+'"]'}function Fd(e){return"script[async]"+e}function Od(e,t,n){if(t.count++,null===t.instance)switch(t.type){case"style":var r=e.querySelector('style[data-href~="'+mt(n.href)+'"]');if(r)return t.instance=r,je(r),r;var a=p({},n,{"data-href":n.href,"data-precedence":n.precedence,href:null,precedence:null});return je(r=(e.ownerDocument||e).createElement("style")),ed(r,"style",a),Dd(r,n.precedence,e),t.instance=r;case"stylesheet":a=$d(n.href);var s=e.querySelector(Ad(a));if(s)return t.state.loading|=4,t.instance=s,je(s),s;r=_d(n),(a=wd.get(a))&&Md(r,a),je(s=(e.ownerDocument||e).createElement("link"));var i=s;return i._p=new Promise((function(e,t){i.onload=e,i.onerror=t})),ed(s,"link",r),t.state.loading|=4,Dd(s,n.precedence,e),t.instance=s;case"script":return s=Rd(n.src),(a=e.querySelector(Fd(s)))?(t.instance=a,je(a),a):(r=n,(a=wd.get(s))&&Pd(r=p({},n),a),je(a=(e=e.ownerDocument||e).createElement("script")),ed(a,"link",r),e.head.appendChild(a),t.instance=a);case"void":return null;default:throw Error(o(443,t.type))}else"stylesheet"===t.type&&0===(4&t.state.loading)&&(r=t.instance,t.state.loading|=4,Dd(r,n.precedence,e));return t.instance}function Dd(e,t,n){for(var r=n.querySelectorAll('link[rel="stylesheet"][data-precedence],style[data-precedence]'),a=r.length?r[r.length-1]:null,s=a,o=0;o<r.length;o++){var i=r[o];if(i.dataset.precedence===t)s=i;else if(s!==a)break}s?s.parentNode.insertBefore(e,s.nextSibling):(t=9===n.nodeType?n.head:n).insertBefore(e,t.firstChild)}function Md(e,t){null==e.crossOrigin&&(e.crossOrigin=t.crossOrigin),null==e.referrerPolicy&&(e.referrerPolicy=t.referrerPolicy),null==e.title&&(e.title=t.title)}function Pd(e,t){null==e.crossOrigin&&(e.crossOrigin=t.crossOrigin),null==e.referrerPolicy&&(e.referrerPolicy=t.referrerPolicy),null==e.integrity&&(e.integrity=t.integrity)}var Ld=null;function zd(e,t,n){if(null===Ld){var r=new Map,a=Ld=new Map;a.set(n,r)}else(r=(a=Ld).get(n))||(r=new Map,a.set(n,r));if(r.has(e))return r;for(r.set(e,null),n=n.getElementsByTagName(e),a=0;a<n.length;a++){var s=n[a];if(!(s[ze]||s[Re]||"link"===e&&"stylesheet"===s.getAttribute("rel"))&&"http://www.w3.org/2000/svg"!==s.namespaceURI){var o=s.getAttribute(t)||"";o=e+o;var i=r.get(o);i?i.push(s):r.set(o,[s])}}return r}function Bd(e,t,n){(e=e.ownerDocument||e).head.insertBefore(n,"title"===t?e.querySelector("head > title"):null)}function Vd(e){return"stylesheet"!==e.type||0!==(3&e.state.loading)}var Wd=null;function Ud(){}function Gd(){if(this.count--,0===this.count)if(this.stylesheets)Hd(this,this.stylesheets);else if(this.unsuspend){var e=this.unsuspend;this.unsuspend=null,e()}}var jd=null;function Hd(e,t){e.stylesheets=null,null!==e.unsuspend&&(e.count++,jd=new Map,t.forEach(Yd,e),jd=null,Gd.call(e))}function Yd(e,t){if(!(4&t.state.loading)){var n=jd.get(e);if(n)var r=n.get(null);else{n=new Map,jd.set(e,n);for(var a=e.querySelectorAll("link[data-precedence],style[data-precedence]"),s=0;s<a.length;s++){var o=a[s];"LINK"!==o.nodeName&&"not all"===o.getAttribute("media")||(n.set(o.dataset.precedence,o),r=o)}r&&n.set(null,r)}o=(a=t.instance).getAttribute("data-precedence"),(s=n.get(o)||r)===r&&n.set(null,a),n.set(o,a),this.count++,r=Gd.bind(this),a.addEventListener("load",r),a.addEventListener("error",r),s?s.parentNode.insertBefore(a,s.nextSibling):(e=9===e.nodeType?e.head:e).insertBefore(a,e.firstChild),t.state.loading|=4}}var qd={$$typeof:k,Provider:null,Consumer:null,_currentValue:M,_currentValue2:M,_threadCount:0};function Kd(e,t,n,r,a,s,o,i){this.tag=1,this.containerInfo=e,this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.next=this.pendingContext=this.context=this.cancelPendingCommit=null,this.callbackPriority=0,this.expirationTimes=Te(-1),this.entangledLanes=this.shellSuspendCounter=this.errorRecoveryDisabledLanes=this.expiredLanes=this.warmLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=Te(0),this.hiddenUpdates=Te(null),this.identifierPrefix=r,this.onUncaughtError=a,this.onCaughtError=s,this.onRecoverableError=o,this.pooledCache=null,this.pooledCacheLanes=0,this.formState=i,this.incompleteTransitions=new Map}function Xd(e,t,n,r,a,s,o,i,l,u,c,d){return e=new Kd(e,t,n,o,i,l,u,d),t=1,!0===s&&(t|=24),s=Mr(3,null,null,t),e.current=s,s.stateNode=e,(t=Fa()).refCount++,e.pooledCache=t,t.refCount++,s.memoizedState={element:r,isDehydrated:n,cache:t},ns(s),e}function Zd(e){return e?e=Or:Or}function Qd(e,t,n,r,a,s){a=Zd(a),null===r.context?r.context=a:r.pendingContext=a,(r=as(t)).payload={element:n},null!==(s=void 0===s?null:s)&&(r.callback=s),null!==(n=ss(e,r,t))&&(Mu(n,0,t),os(n,e,t))}function Jd(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var n=e.retryLane;e.retryLane=0!==n&&n<t?n:t}}function ep(e,t){Jd(e,t),(e=e.alternate)&&Jd(e,t)}function tp(e){if(13===e.tag){var t=_r(e,67108864);null!==t&&Mu(t,0,67108864),ep(e,67108864)}}var np=!0;function rp(e,t,n,r){var a=O.T;O.T=null;var s=D.p;try{D.p=2,sp(e,t,n,r)}finally{D.p=s,O.T=a}}function ap(e,t,n,r){var a=O.T;O.T=null;var s=D.p;try{D.p=8,sp(e,t,n,r)}finally{D.p=s,O.T=a}}function sp(e,t,n,r){if(np){var a=op(r);if(null===a)Wc(e,t,r,ip,n),bp(e,r);else if(function(e,t,n,r,a){switch(t){case"focusin":return dp=vp(dp,e,t,n,r,a),!0;case"dragenter":return pp=vp(pp,e,t,n,r,a),!0;case"mouseover":return hp=vp(hp,e,t,n,r,a),!0;case"pointerover":var s=a.pointerId;return fp.set(s,vp(fp.get(s)||null,e,t,n,r,a)),!0;case"gotpointercapture":return s=a.pointerId,mp.set(s,vp(mp.get(s)||null,e,t,n,r,a)),!0}return!1}(a,e,t,n,r))r.stopPropagation();else if(bp(e,r),4&t&&-1<yp.indexOf(e)){for(;null!==a;){var s=We(a);if(null!==s)switch(s.tag){case 3:if((s=s.stateNode).current.memoizedState.isDehydrated){var o=be(s.pendingLanes);if(0!==o){var i=s;for(i.pendingLanes|=2,i.entangledLanes|=2;o;){var l=1<<31-he(o);i.entanglements[1]|=l,o&=~l}wc(s),0===(6&nu)&&(wu=te()+500,Sc(0,!1))}}break;case 13:null!==(i=_r(s,2))&&Mu(i,0,2),Vu(),ep(s,2)}if(null===(s=op(r))&&Wc(e,t,r,ip,n),s===a)break;a=s}null!==a&&r.stopPropagation()}else Wc(e,t,r,null,n)}}function op(e){return lp(e=_t(e))}var ip=null;function lp(e){if(ip=null,null!==(e=Ve(e))){var t=l(e);if(null===t)e=null;else{var n=t.tag;if(13===n){if(null!==(e=u(t)))return e;e=null}else if(3===n){if(t.stateNode.current.memoizedState.isDehydrated)return 3===t.tag?t.stateNode.containerInfo:null;e=null}else t!==e&&(e=null)}}return ip=e,null}function up(e){switch(e){case"beforetoggle":case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"toggle":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 2;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 8;case"message":switch(ne()){case re:return 2;case ae:return 8;case se:case oe:return 32;case ie:return 268435456;default:return 32}default:return 32}}var cp=!1,dp=null,pp=null,hp=null,fp=new Map,mp=new Map,gp=[],yp="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset".split(" ");function bp(e,t){switch(e){case"focusin":case"focusout":dp=null;break;case"dragenter":case"dragleave":pp=null;break;case"mouseover":case"mouseout":hp=null;break;case"pointerover":case"pointerout":fp.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":mp.delete(t.pointerId)}}function vp(e,t,n,r,a,s){return null===e||e.nativeEvent!==s?(e={blockedOn:t,domEventName:n,eventSystemFlags:r,nativeEvent:s,targetContainers:[a]},null!==t&&(null!==(t=We(t))&&tp(t)),e):(e.eventSystemFlags|=r,t=e.targetContainers,null!==a&&-1===t.indexOf(a)&&t.push(a),e)}function xp(e){var t=Ve(e.target);if(null!==t){var n=l(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=u(n)))return e.blockedOn=t,void function(e,t){var n=D.p;try{return D.p=e,t()}finally{D.p=n}}(e.priority,(function(){if(13===n.tag){var e=Ou();e=Ee(e);var t=_r(n,e);null!==t&&Mu(t,0,e),ep(n,e)}}))}else if(3===t&&n.stateNode.current.memoizedState.isDehydrated)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function kp(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var n=op(e.nativeEvent);if(null!==n)return null!==(t=We(n))&&tp(t),e.blockedOn=n,!1;var r=new(n=e.nativeEvent).constructor(n.type,n);At=r,n.target.dispatchEvent(r),At=null,t.shift()}return!0}function wp(e,t,n){kp(e)&&n.delete(t)}function Sp(){cp=!1,null!==dp&&kp(dp)&&(dp=null),null!==pp&&kp(pp)&&(pp=null),null!==hp&&kp(hp)&&(hp=null),fp.forEach(wp),mp.forEach(wp)}function Tp(e,t){e.blockedOn===t&&(e.blockedOn=null,cp||(cp=!0,r.unstable_scheduleCallback(r.unstable_NormalPriority,Sp)))}var Np=null;function Ip(e){Np!==e&&(Np=e,r.unstable_scheduleCallback(r.unstable_NormalPriority,(function(){Np===e&&(Np=null);for(var t=0;t<e.length;t+=3){var n=e[t],r=e[t+1],a=e[t+2];if("function"!==typeof r){if(null===lp(r||n))continue;break}var s=We(n);null!==s&&(e.splice(t,3),t-=3,_o(s,{pending:!0,data:a,method:n.method,action:r},r,a))}})))}function Cp(e){function t(t){return Tp(t,e)}null!==dp&&Tp(dp,e),null!==pp&&Tp(pp,e),null!==hp&&Tp(hp,e),fp.forEach(t),mp.forEach(t);for(var n=0;n<gp.length;n++){var r=gp[n];r.blockedOn===e&&(r.blockedOn=null)}for(;0<gp.length&&null===(n=gp[0]).blockedOn;)xp(n),null===n.blockedOn&&gp.shift();if(null!=(n=(e.ownerDocument||e).$$reactFormReplay))for(r=0;r<n.length;r+=3){var a=n[r],s=n[r+1],o=a[Fe]||null;if("function"===typeof s)o||Ip(n);else if(o){var i=null;if(s&&s.hasAttribute("formAction")){if(a=s,o=s[Fe]||null)i=o.formAction;else if(null!==lp(a))continue}else i=o.action;"function"===typeof i?n[r+1]=i:(n.splice(r,3),r-=3),Ip(n)}}}function Ep(e){this._internalRoot=e}function $p(e){this._internalRoot=e}$p.prototype.render=Ep.prototype.render=function(e){var t=this._internalRoot;if(null===t)throw Error(o(409));Qd(t.current,Ou(),e,t,null,null)},$p.prototype.unmount=Ep.prototype.unmount=function(){var e=this._internalRoot;if(null!==e){this._internalRoot=null;var t=e.containerInfo;Qd(e.current,2,null,e,null,null),Vu(),t[Oe]=null}},$p.prototype.unstable_scheduleHydration=function(e){if(e){var t=Ae();e={blockedOn:null,target:e,priority:t};for(var n=0;n<gp.length&&0!==t&&t<gp[n].priority;n++);gp.splice(n,0,e),0===n&&xp(e)}};var Ap=a.version;if("19.1.0"!==Ap)throw Error(o(527,Ap,"19.1.0"));D.findDOMNode=function(e){var t=e._reactInternals;if(void 0===t){if("function"===typeof e.render)throw Error(o(188));throw e=Object.keys(e).join(","),Error(o(268,e))}return e=function(e){var t=e.alternate;if(!t){if(null===(t=l(e)))throw Error(o(188));return t!==e?null:e}for(var n=e,r=t;;){var a=n.return;if(null===a)break;var s=a.alternate;if(null===s){if(null!==(r=a.return)){n=r;continue}break}if(a.child===s.child){for(s=a.child;s;){if(s===n)return c(a),e;if(s===r)return c(a),t;s=s.sibling}throw Error(o(188))}if(n.return!==r.return)n=a,r=s;else{for(var i=!1,u=a.child;u;){if(u===n){i=!0,n=a,r=s;break}if(u===r){i=!0,r=a,n=s;break}u=u.sibling}if(!i){for(u=s.child;u;){if(u===n){i=!0,n=s,r=a;break}if(u===r){i=!0,r=s,n=a;break}u=u.sibling}if(!i)throw Error(o(189))}}if(n.alternate!==r)throw Error(o(190))}if(3!==n.tag)throw Error(o(188));return n.stateNode.current===n?e:t}(t),e=null===(e=null!==e?d(e):null)?null:e.stateNode};var _p={bundleType:0,version:"19.1.0",rendererPackageName:"react-dom",currentDispatcherRef:O,reconcilerVersion:"19.1.0"};if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var Rp=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!Rp.isDisabled&&Rp.supportsFiber)try{ce=Rp.inject(_p),de=Rp}catch(Op){}}t.createRoot=function(e,t){if(!i(e))throw Error(o(299));var n=!1,r="",a=bi,s=vi,l=xi;return null!==t&&void 0!==t&&(!0===t.unstable_strictMode&&(n=!0),void 0!==t.identifierPrefix&&(r=t.identifierPrefix),void 0!==t.onUncaughtError&&(a=t.onUncaughtError),void 0!==t.onCaughtError&&(s=t.onCaughtError),void 0!==t.onRecoverableError&&(l=t.onRecoverableError),void 0!==t.unstable_transitionCallbacks&&t.unstable_transitionCallbacks),t=Xd(e,1,!1,null,0,n,r,a,s,l,0,null),e[Oe]=t.current,Bc(e),new Ep(t)},t.hydrateRoot=function(e,t,n){if(!i(e))throw Error(o(299));var r=!1,a="",s=bi,l=vi,u=xi,c=null;return null!==n&&void 0!==n&&(!0===n.unstable_strictMode&&(r=!0),void 0!==n.identifierPrefix&&(a=n.identifierPrefix),void 0!==n.onUncaughtError&&(s=n.onUncaughtError),void 0!==n.onCaughtError&&(l=n.onCaughtError),void 0!==n.onRecoverableError&&(u=n.onRecoverableError),void 0!==n.unstable_transitionCallbacks&&n.unstable_transitionCallbacks,void 0!==n.formState&&(c=n.formState)),(t=Xd(e,1,!0,t,0,r,a,s,l,u,0,c)).context=Zd(null),n=t.current,(a=as(r=Ee(r=Ou()))).callback=null,ss(n,a,r),n=r,t.current.lanes=n,Ne(t,n),wc(t),e[Oe]=t.current,Bc(e),new $p(t)},t.version="19.1.0"},7046:(e,t,n)=>{"use strict";n.d(t,{Yp:()=>l,uM:()=>o});var r=n(5743),a=n(4084),s=n(4729);const o=(0,a.o)((e=>Math.expm1(e))),i=(0,s.F)(r.Expm1,o),l={kernelName:r.Expm1,backendName:"cpu",kernelFunc:i}},7066:function(e,t,n){var r;!function(e,a){function s(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function i(e,t){var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=i:n.amdD&&n.amdO?void 0===(r=function(){return i}.call(t,n,t,a))||(a.exports=r):this.xor128=i}(0,e=n.nmd(e),n.amdD)},7131:(e,t,n)=>{"use strict";n.d(t,{D:()=>a});var r=n(8977);class a{static join(e){return new a(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,null==e)return;if(e instanceof Array||(e=[e]),0===(e=e.map((e=>r.isTypedArray(e)?e.buffer:e))).length)return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let n=0;n<e.length;n++){const r=e[n];n!==e.length-1&&r.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const a=t+r.byteLength;this.shards.push({buffer:r,start:t,end:a}),t=a}0===this.shards.length&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.byteLength;if(0===this.shards.length)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),t=Math.min(this.byteLength,t),t<=e)return new ArrayBuffer(0);const n=this.findShardForByte(e);if(-1===n)throw new Error(`Could not find start shard for byte ${e}`);const r=new ArrayBuffer(t-e),a=new Uint8Array(r);let s=0;for(let o=n;o<this.shards.length;o++){const n=this.shards[o],r=e+s-n.start,i=s,l=Math.min(t,n.end)-n.start,u=new Uint8Array(n.buffer,r,l-r);if(a.set(u,i),s+=u.length,t<n.end)break}return r}findShardForByte(e){if(0===this.shards.length||e<0||e>=this.byteLength)return-1;if(null!=this.bufferUniformSize)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(t){return e<t.start?-1:e>=t.end?1:0}if(0===t(this.shards[this.previousShardIndex]))return this.previousShardIndex;const n=function(e,t){let n=0,r=e.length;for(;n<=r;){const a=Math.floor((r-n)/2)+n,s=t(e[a]);if(0===s)return a;s<0?r=a:n=a+1}return-1}(this.shards,t);return-1===n?-1:(this.previousShardIndex=n,this.previousShardIndex)}}},7167:(e,t,n)=>{"use strict";n.d(t,{r:()=>o});var r=n(2164),a=n(9554),s=n(4148);const o=(0,n(7892).op)({cumsum_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],o=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const i={x:(0,s.YT)(e,"x","cumsum")},l={axis:t,exclusive:n,reverse:o};return r.T2.runKernel(a.nY8,i,l)}})},7185:(e,t,n)=>{"use strict";n.d(t,{S:()=>s});var r=n(5743);function a(e,t,n,r){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)r.push(e.subarray(t,t+1));return}if(1===t.length){const a=t[0];let s=e.indexOf(a);for(;-1!==s;){const t=e.subarray(0,s);n&&0===t.length||r.push(t),s=(e=e.subarray(s+1)).indexOf(a)}return void(n&&0===e.length||r.push(e))}let a=0;for(let s=0;s<e.length+1;s++)if(s===e.length||-1!==t.indexOf(e[s])){const t=e.subarray(a,s);n&&0===t.length||r.push(t),a=s+1}}function s(e,t,n){const s=e.length,o=[];let i=0,l=0;const u=new Array(s);for(let r=0;r<s;++r){const s=o.length;a(e[r],t,n,o);const c=o.length-s;u[r]=c,i+=c,l=Math.max(l,c)}const c=r.util.getArrayFromDType("int32",2*i),d=new Array(i),p=[s,l];let h=0;for(let r=0;r<s;++r)for(let e=0;e<u[r];++e)c[2*h]=r,c[2*h+1]=e,d[h]=o[h],++h;return[c,d,p]}},7237:(e,t,n)=>{"use strict";n.d(t,{$:()=>l});var r=n(2164),a=n(9554),s=n(4148),o=n(1426),i=n(5583);const l=(0,n(7892).op)({batchNorm_:function(e,t,n,l,u,c){null==c&&(c=.001);const d=(0,s.YT)(e,"x","batchNorm"),p=(0,s.YT)(t,"mean","batchNorm"),h=(0,s.YT)(n,"variance","batchNorm");let f,m;null!=u&&(f=(0,s.YT)(u,"scale","batchNorm")),null!=l&&(m=(0,s.YT)(l,"offset","batchNorm")),o.vA(p.rank===h.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),o.vA(null==m||p.rank===m.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),o.vA(null==f||p.rank===f.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const g={x:function(e){let t;return t=0===e.rank||1===e.rank?(0,i.t)(e,[1,1,1,e.size]):2===e.rank?(0,i.t)(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?(0,i.t)(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(d),scale:f,offset:m,mean:p,variance:h},y={varianceEpsilon:c},b=r.T2.runKernel(a.i5R,g,y);return(0,i.t)(b,d.shape)}})},7242:(e,t,n)=>{"use strict";n.d(t,{W:()=>i});var r=n(2164),a=n(9554),s=n(8804),o=n(4148);const i=(0,n(7892).op)({add_:function(e,t){let n=(0,o.YT)(e,"a","add"),i=(0,o.YT)(t,"b","add");[n,i]=(0,s.makeTypesMatch)(n,i);const l={a:n,b:i};return r.T2.runKernel(a.OMN,l)}})},7307:(e,t,n)=>{"use strict";n.d(t,{g:()=>f});var r=n(6149),a=n(4429),s=n(1047),o=n(803),i=n(7892),l=n(9477),u=n(5583),c=n(7419),d=n(1997),p=n(463),h=n(1405);const f=(0,i.op)({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let i;if(t<=2){const r=(0,u.t)(e,[n,t]);i=(0,h.K)(r)}else{const f=[n,2*(t-1)],m=(0,u.t)((0,l.x)(e),[n,t]),g=(0,u.t)((0,s.n)(e),[n,t]),y=(0,c.B)((0,p.d)(m,[0,1],[n,t-2]),1),b=(0,o.l)((0,c.B)((0,p.d)(g,[0,1],[n,t-2]),1),(0,d.d)(-1)),v=(0,a.x)([m,y],1),x=(0,a.x)([g,b],1),k=(0,u.t)((0,r.f)(v,x),[f[0],f[1]]);i=(0,h.K)(k)}if(i=(0,l.x)(i),3===e.rank&&0!==e.shape[0]){const t=i,n=e.shape[0];i=(0,u.t)(i,[n,i.shape[0]/n,i.shape[1]]),t.dispose()}return i}})},7353:e=>{e.exports=n;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(N){}function n(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function r(e){return!0===(e&&e.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=r;var a={},s={};function o(e,t){var n,r,o;return t?(o=0<=(e>>>=0)&&e<256)&&(r=s[e])?r:(n=l(e,(0|e)<0?-1:0,!0),o&&(s[e]=n),n):(o=-128<=(e|=0)&&e<128)&&(r=a[e])?r:(n=l(e,e<0?-1:0,!1),o&&(a[e]=n),n)}function i(e,t){if(isNaN(e))return t?y:g;if(t){if(e<0)return y;if(e>=h)return w}else{if(e<=-f)return S;if(e+1>=f)return k}return e<0?i(-e,t).neg():l(e%p|0,e/p|0,t)}function l(e,t,r){return new n(e,t,r)}n.fromInt=o,n.fromNumber=i,n.fromBits=l;var u=Math.pow;function c(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return g;if("number"===typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return c(e.substring(1),t,n).neg();for(var a=i(u(n,8)),s=g,o=0;o<e.length;o+=8){var l=Math.min(8,e.length-o),d=parseInt(e.substring(o,o+l),n);if(l<8){var p=i(u(n,l));s=s.mul(p).add(i(d))}else s=(s=s.mul(a)).add(i(d))}return s.unsigned=t,s}function d(e,t){return"number"===typeof e?i(e,t):"string"===typeof e?c(e,t):l(e.low,e.high,"boolean"===typeof t?t:e.unsigned)}n.fromString=c,n.fromValue=d;var p=4294967296,h=p*p,f=h/2,m=o(1<<24),g=o(0);n.ZERO=g;var y=o(0,!0);n.UZERO=y;var b=o(1);n.ONE=b;var v=o(1,!0);n.UONE=v;var x=o(-1);n.NEG_ONE=x;var k=l(-1,2147483647,!1);n.MAX_VALUE=k;var w=l(-1,-1,!0);n.MAX_UNSIGNED_VALUE=w;var S=l(0,-2147483648,!1);n.MIN_VALUE=S;var T=n.prototype;T.toInt=function(){return this.unsigned?this.low>>>0:this.low},T.toNumber=function(){return this.unsigned?(this.high>>>0)*p+(this.low>>>0):this.high*p+(this.low>>>0)},T.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(S)){var t=i(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var a=i(u(e,6),this.unsigned),s=this,o="";;){var l=s.div(a),c=(s.sub(l.mul(a)).toInt()>>>0).toString(e);if((s=l).isZero())return c+o;for(;c.length<6;)c="0"+c;o=""+c+o}},T.getHighBits=function(){return this.high},T.getHighBitsUnsigned=function(){return this.high>>>0},T.getLowBits=function(){return this.low},T.getLowBitsUnsigned=function(){return this.low>>>0},T.getNumBitsAbs=function(){if(this.isNegative())return this.eq(S)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},T.isZero=function(){return 0===this.high&&0===this.low},T.eqz=T.isZero,T.isNegative=function(){return!this.unsigned&&this.high<0},T.isPositive=function(){return this.unsigned||this.high>=0},T.isOdd=function(){return 1===(1&this.low)},T.isEven=function(){return 0===(1&this.low)},T.equals=function(e){return r(e)||(e=d(e)),(this.unsigned===e.unsigned||this.high>>>31!==1||e.high>>>31!==1)&&(this.high===e.high&&this.low===e.low)},T.eq=T.equals,T.notEquals=function(e){return!this.eq(e)},T.neq=T.notEquals,T.ne=T.notEquals,T.lessThan=function(e){return this.comp(e)<0},T.lt=T.lessThan,T.lessThanOrEqual=function(e){return this.comp(e)<=0},T.lte=T.lessThanOrEqual,T.le=T.lessThanOrEqual,T.greaterThan=function(e){return this.comp(e)>0},T.gt=T.greaterThan,T.greaterThanOrEqual=function(e){return this.comp(e)>=0},T.gte=T.greaterThanOrEqual,T.ge=T.greaterThanOrEqual,T.compare=function(e){if(r(e)||(e=d(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},T.comp=T.compare,T.negate=function(){return!this.unsigned&&this.eq(S)?S:this.not().add(b)},T.neg=T.negate,T.add=function(e){r(e)||(e=d(e));var t=this.high>>>16,n=65535&this.high,a=this.low>>>16,s=65535&this.low,o=e.high>>>16,i=65535&e.high,u=e.low>>>16,c=0,p=0,h=0,f=0;return h+=(f+=s+(65535&e.low))>>>16,p+=(h+=a+u)>>>16,c+=(p+=n+i)>>>16,c+=t+o,l((h&=65535)<<16|(f&=65535),(c&=65535)<<16|(p&=65535),this.unsigned)},T.subtract=function(e){return r(e)||(e=d(e)),this.add(e.neg())},T.sub=T.subtract,T.multiply=function(e){if(this.isZero())return g;if(r(e)||(e=d(e)),t)return l(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return g;if(this.eq(S))return e.isOdd()?S:g;if(e.eq(S))return this.isOdd()?S:g;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(m)&&e.lt(m))return i(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,a=65535&this.high,s=this.low>>>16,o=65535&this.low,u=e.high>>>16,c=65535&e.high,p=e.low>>>16,h=65535&e.low,f=0,y=0,b=0,v=0;return b+=(v+=o*h)>>>16,y+=(b+=s*h)>>>16,b&=65535,y+=(b+=o*p)>>>16,f+=(y+=a*h)>>>16,y&=65535,f+=(y+=s*p)>>>16,y&=65535,f+=(y+=o*c)>>>16,f+=n*h+a*p+s*c+o*u,l((b&=65535)<<16|(v&=65535),(f&=65535)<<16|(y&=65535),this.unsigned)},T.mul=T.multiply,T.divide=function(e){if(r(e)||(e=d(e)),e.isZero())throw Error("division by zero");var n,a,s;if(t)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?l((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?y:g;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return y;if(e.gt(this.shru(1)))return v;s=y}else{if(this.eq(S))return e.eq(b)||e.eq(x)?S:e.eq(S)?b:(n=this.shr(1).div(e).shl(1)).eq(g)?e.isNegative()?b:x:(a=this.sub(e.mul(n)),s=n.add(a.div(e)));if(e.eq(S))return this.unsigned?y:g;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();s=g}for(a=this;a.gte(e);){n=Math.max(1,Math.floor(a.toNumber()/e.toNumber()));for(var o=Math.ceil(Math.log(n)/Math.LN2),c=o<=48?1:u(2,o-48),p=i(n),h=p.mul(e);h.isNegative()||h.gt(a);)h=(p=i(n-=c,this.unsigned)).mul(e);p.isZero()&&(p=b),s=s.add(p),a=a.sub(h)}return s},T.div=T.divide,T.modulo=function(e){return r(e)||(e=d(e)),t?l((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},T.mod=T.modulo,T.rem=T.modulo,T.not=function(){return l(~this.low,~this.high,this.unsigned)},T.and=function(e){return r(e)||(e=d(e)),l(this.low&e.low,this.high&e.high,this.unsigned)},T.or=function(e){return r(e)||(e=d(e)),l(this.low|e.low,this.high|e.high,this.unsigned)},T.xor=function(e){return r(e)||(e=d(e)),l(this.low^e.low,this.high^e.high,this.unsigned)},T.shiftLeft=function(e){return r(e)&&(e=e.toInt()),0===(e&=63)?this:e<32?l(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):l(0,this.low<<e-32,this.unsigned)},T.shl=T.shiftLeft,T.shiftRight=function(e){return r(e)&&(e=e.toInt()),0===(e&=63)?this:e<32?l(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):l(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},T.shr=T.shiftRight,T.shiftRightUnsigned=function(e){if(r(e)&&(e=e.toInt()),0===(e&=63))return this;var t=this.high;return e<32?l(this.low>>>e|t<<32-e,t>>>e,this.unsigned):l(32===e?t:t>>>e-32,0,this.unsigned)},T.shru=T.shiftRightUnsigned,T.shr_u=T.shiftRightUnsigned,T.toSigned=function(){return this.unsigned?l(this.low,this.high,!1):this},T.toUnsigned=function(){return this.unsigned?this:l(this.low,this.high,!0)},T.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},T.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},T.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},n.fromBytes=function(e,t,r){return r?n.fromBytesLE(e,t):n.fromBytesBE(e,t)},n.fromBytesLE=function(e,t){return new n(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},n.fromBytesBE=function(e,t){return new n(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},7359:function(e,t,n){var r;!function(e,a){function s(e){var t=this,n=function(){var e=4022871197,t=function(t){t=String(t);for(var n=0;n<t.length;n++){var r=.02519603282416938*(e+=t.charCodeAt(n));r-=e=r>>>0,e=(r*=e)>>>0,e+=4294967296*(r-=e)}return 2.3283064365386963e-10*(e>>>0)};return t}();t.next=function(){var e=2091639*t.s0+2.3283064365386963e-10*t.c;return t.s0=t.s1,t.s1=t.s2,t.s2=e-(t.c=0|e)},t.c=1,t.s0=n(" "),t.s1=n(" "),t.s2=n(" "),t.s0-=n(e),t.s0<0&&(t.s0+=1),t.s1-=n(e),t.s1<0&&(t.s1+=1),t.s2-=n(e),t.s2<0&&(t.s2+=1),n=null}function o(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function i(e,t){var n=new s(e),r=t&&t.state,a=n.next;return a.int32=function(){return 4294967296*n.next()|0},a.double=function(){return a()+11102230246251565e-32*(2097152*a()|0)},a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=i:n.amdD&&n.amdO?void 0===(r=function(){return i}.call(t,n,t,a))||(a.exports=r):this.alea=i}(0,e=n.nmd(e),n.amdD)},7382:(e,t,n)=>{"use strict";n.d(t,{c:()=>i});var r=n(2164),a=n(9554),s=n(4148),o=n(7794);const i=(0,n(7892).op)({sum_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=(0,s.YT)(e,"x","sum");"bool"===i.dtype&&(i=(0,o.w)(i,"int32"));const l={x:i},u={axis:t,keepDims:n};return r.T2.runKernel(a.WuN,l,u)}})},7399:(e,t,n)=>{"use strict";n.d(t,{x:()=>i});var r=n(2164),a=n(9554),s=n(7892),o=n(5583);const i=(0,s.op)({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,s,i){let l=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],u=arguments.length>6?arguments[6]:void 0,c=e;3===e.rank&&(c=(0,o.t)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let d=t;3===d.rank&&(d=(0,o.t)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const p={x:c,dy:d},h={strides:s,pad:i,dimRoundingMode:u,dilations:l,filterShape:n};return r.T2.runKernel(a.X$8,p,h)}})},7419:(e,t,n)=>{"use strict";n.d(t,{B:()=>o});var r=n(2164),a=n(9554),s=n(4148);const o=(0,n(7892).op)({reverse_:function(e,t){const n={x:(0,s.YT)(e,"x","reverse")},o={dims:t};return r.T2.runKernel(a.D7i,n,o)}})},7457:(e,t,n)=>{"use strict";n.d(t,{L:()=>l});var r=n(2164),a=n(9554),s=n(8804),o=n(4148),i=n(8805);const l=(0,n(7892).op)({equal_:function(e,t){let n=(0,o.YT)(e,"a","equal","string_or_numeric"),l=(0,o.YT)(t,"b","equal","string_or_numeric");[n,l]=(0,s.makeTypesMatch)(n,l),(0,i.assertAndGetBroadcastShape)(n.shape,l.shape);const u={a:n,b:l};return r.T2.runKernel(a.BRl,u)}})},7538:(e,t,n)=>{"use strict";n.d(t,{$Q:()=>y,Dh:()=>f,E6:()=>s,G0:()=>m,G8:()=>u,YQ:()=>a,l5:()=>o,p$:()=>l,qk:()=>g,s_:()=>b,uf:()=>i});var r=n(1426);function a(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",s=arguments.length>5?arguments[5]:void 0;return i(e,[...t,e[3]],n,s,r,null,null,y(a))}function s(e,t,n,r,a,s){let o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"channelsLast";const[l,u]=c(t);let d;if("channelsLast"===o)d=[l,u,e[3],e[3]];else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);d=[l,u,e[1],e[1]]}return i(e,d,n,r,a,s,!1,o)}function o(e,t,n,r,a,s){let o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"NDHWC";const[i,u,c]=d(t);let p,h;if("NDHWC"===o)h="channelsLast",p=[i,u,c,e[4],e[4]];else{if("NCDHW"!==o)throw new Error(`Unknown dataFormat ${o}`);h="channelsFirst",p=[i,u,c,e[1],e[1]]}return l(e,p,n,r,a,!1,h,s)}function i(e,t,n,r,a,s){let o=arguments.length>6&&void 0!==arguments[6]&&arguments[6],i=arguments.length>7&&void 0!==arguments[7]?arguments[7]:"channelsLast",[l,d,f,m]=[-1,-1,-1,-1];if("channelsLast"===i)[l,d,f,m]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[l,m,d,f]=e}const[g,y,,b]=t,[v,x]=c(n),[k,w]=c(r),S=p(g,k),T=p(y,w),{padInfo:N,outHeight:I,outWidth:C}=function(e,t,n,r,a,s,o,i,l){let c,d,p;if("number"===typeof e){c={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const a=function(e,t,n,r,a){null==r&&(r=u(e,t,n));const s=e[0],o=e[1],i=h((s-t+2*r)/n+1,a),l=h((o-t+2*r)/n+1,a);return[i,l]}([t,n],s,r,e,i);d=a[0],p=a[1]}else if("same"===e){d=Math.ceil(t/r),p=Math.ceil(n/a);const e=Math.max(0,(d-1)*r+s-t),i=Math.max(0,(p-1)*a+o-n),l=Math.floor(e/2),u=e-l,h=Math.floor(i/2);c={top:l,bottom:u,left:h,right:i-h,type:"SAME"}}else if("valid"===e)c={top:0,bottom:0,left:0,right:0,type:"VALID"},d=Math.ceil((t-s+1)/r),p=Math.ceil((n-o+1)/a);else{if("object"!==typeof e)throw Error(`Unknown padding parameter: ${e}`);{const u="channelsLast"===l?e[1][0]:e[2][0],f="channelsLast"===l?e[1][1]:e[2][1],m="channelsLast"===l?e[2][0]:e[3][0],g="channelsLast"===l?e[2][1]:e[3][1];c={top:u,bottom:f,left:m,right:g,type:0===u&&0===f&&0===m&&0===g?"VALID":"EXPLICIT"},d=h((t-s+u+f)/r+1,i),p=h((n-o+m+g)/a+1,i)}}return{padInfo:c,outHeight:d,outWidth:p}}(a,d,f,v,x,S,T,s,i),E=o?b*m:b;let $;return"channelsFirst"===i?$=[l,E,I,C]:"channelsLast"===i&&($=[l,I,C,E]),{batchSize:l,dataFormat:i,inHeight:d,inWidth:f,inChannels:m,outHeight:I,outWidth:C,outChannels:E,padInfo:N,strideHeight:v,strideWidth:x,filterHeight:g,filterWidth:y,effectiveFilterHeight:S,effectiveFilterWidth:T,dilationHeight:k,dilationWidth:w,inShape:e,outShape:$,filterShape:t}}function l(e,t,n,r,a){let s=arguments.length>5&&void 0!==arguments[5]&&arguments[5],o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"channelsLast",i=arguments.length>7?arguments[7]:void 0,[l,c,f,m,g]=[-1,-1,-1,-1,-1];if("channelsLast"===o)[l,c,f,m,g]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,g,c,f,m]=e}const[y,b,v,,x]=t,[k,w,S]=d(n),[T,N,I]=d(r),C=p(y,T),E=p(b,N),$=p(v,I),{padInfo:A,outDepth:_,outHeight:R,outWidth:F}=function(e,t,n,r,a,s,o,i,l,c,d){let p,f,m,g;"valid"===e&&(e=0);if("number"===typeof e){p={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const y=function(e,t,n,r,a,s){null==a&&(a=u(e,t[0],r[0]));const o=[0,0,0,n];for(let i=0;i<3;i++)e[i]+2*a>=t[i]&&(o[i]=h((e[i]-t[i]+2*a)/r[i]+1,s));return o}([t,n,r,1],[i,l,c],1,[a,s,o],e,d);f=y[0],m=y[1],g=y[2]}else{if("same"!==e)throw Error(`Unknown padding parameter: ${e}`);{f=Math.ceil(t/a),m=Math.ceil(n/s),g=Math.ceil(r/o);const e=(f-1)*a+i-t,u=(m-1)*s+l-n,d=(g-1)*o+c-r,h=Math.floor(e/2),y=e-h,b=Math.floor(u/2),v=u-b,x=Math.floor(d/2);p={top:b,bottom:v,left:x,right:d-x,front:h,back:y,type:"SAME"}}}return{padInfo:p,outDepth:f,outHeight:m,outWidth:g}}(a,c,f,m,k,w,S,C,E,$,i),O=s?x*g:x;let D;return"channelsFirst"===o?D=[l,O,_,R,F]:"channelsLast"===o&&(D=[l,_,R,F,O]),{batchSize:l,dataFormat:o,inDepth:c,inHeight:f,inWidth:m,inChannels:g,outDepth:_,outHeight:R,outWidth:F,outChannels:O,padInfo:A,strideDepth:k,strideHeight:w,strideWidth:S,filterDepth:y,filterHeight:b,filterWidth:v,effectiveFilterDepth:C,effectiveFilterHeight:E,effectiveFilterWidth:$,dilationDepth:T,dilationHeight:N,dilationWidth:I,inShape:e,outShape:D,filterShape:t}}function u(e,t,n){const r=p(t,arguments.length>3&&void 0!==arguments[3]?arguments[3]:1);return Math.floor((e[0]*(n-1)-n+r)/2)}function c(e){return"number"===typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function d(e){return"number"===typeof e?[e,e,e]:e}function p(e,t){return t<=1?e:e+(e-1)*(t-1)}function h(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function f(e){const[t,n,r]=c(e);return 1===t&&1===n&&1===r}function m(e,t){return f(e)||f(t)}function g(e){return c(e).every((e=>e>0))}function y(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function b(e,t,n){if(null!=n){if("string"===typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"===typeof t)r.vA(r.E6(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`));else{if("object"!==typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach((t=>{t.forEach((t=>{r.vA(r.E6(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`))}))}))}}}},7587:(e,t,n)=>{"use strict";n.d(t,{n:()=>i});var r=n(2164),a=n(9554),s=n(8804),o=n(4148);const i=(0,n(7892).op)({pow_:function(e,t){let n=(0,o.YT)(e,"base","pow"),i=(0,o.YT)(t,"exp","pow");[n,i]=(0,s.makeTypesMatch)(n,i);const l={a:n,b:i};return r.T2.runKernel(a.pyJ,l)}})},7738:(e,t,n)=>{"use strict";n.d(t,{E:()=>s});var r=n(2164),a=n(4148);const s=(0,n(7892).op)({square_:function(e){const t=(0,a.YT)(e,"x","square");return r.T2.runKernel("Square",{x:t},{})}})},7751:(e,t,n)=>{"use strict";n.d(t,{d:()=>p});var r=n(4148),a=n(1426),s=n(8650),o=n(2557),i=n(7538),l=n(6044),u=n(7892),c=n(5583),d=n(3585);const p=(0,u.op)({pool_:function(e,t,n,u,p,h,f){null==p&&(p=[1,1]),null==h&&(h=1),0===u&&(u="valid");const m=(0,r.YT)(e,"x","maxPool");let g=m,y=!1;3===m.rank&&(y=!0,g=(0,c.t)(m,[1,m.shape[0],m.shape[1],m.shape[2]])),a.vA(i.G0(h,p),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${h} and dilations '${p}'`));const b=i.E6(g.shape,t,h,p,u),v=[b.dilationHeight,b.dilationWidth];let x;x="same"===u?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))),r=n.map((e=>e-1)),a=r.map((e=>Math.floor(e/2))),s=r.map(((e,t)=>e-a[t]));return r.map(((e,t)=>[a[t],s[t]]))}([b.filterHeight,b.filterWidth],v):[[0,0],[0,0]];const k=1===v[0]&&1===v[1],[w,S]=function(e,t,n){const r=n.map((e=>e[0])),a=n.map((e=>e[1])),s=e.concat(r,a),o=t.map(((e,t)=>(e-s[t]%e)%e)),i=a.map(((e,t)=>e+o[t])),l=t.map(((e,t)=>[r[t],i[t]])),u=t.map(((e,t)=>[0,o[t]]));return[l,u]}([b.inHeight,b.inWidth],v,x),T=k?u:"valid",N=k?g:(0,d.e)(g,v,w),I=("avg"===n?()=>(0,s.$)(N,t,h,T,f):()=>(0,l.j)(N,t,h,T,f))(),C=k?I:(0,o.G)(I,v,S);return y?(0,c.t)(C,[C.shape[1],C.shape[2],C.shape[3]]):C}})},7794:(e,t,n)=>{"use strict";n.d(t,{w:()=>i});var r=n(2164),a=n(9554),s=n(4148),o=n(1426);const i=(0,n(7892).op)({cast_:function(e,t){const n=(0,s.YT)(e,"x","cast");if(!o.xn(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const i={x:n},l={dtype:t};return r.T2.runKernel(a.KXH,i,l)}})},7803:(e,t,n)=>{"use strict";n.d(t,{r:()=>o});var r=n(2164),a=n(9554),s=n(4148);const o=(0,n(7892).op)({atan_:function(e){const t={x:(0,s.YT)(e,"x","atan")};return r.T2.runKernel(a.TyE,t)}})},7844:(e,t,n)=>{"use strict";n.d(t,{C:()=>l,_:()=>o});var r=n(5743),a=n(4084),s=n(4729);const o=(0,a.o)(((e,t)=>{const{pattern:n,replaceGlobal:r,rewrite:a}=t;return e.replace(new RegExp(n,r?"g":""),a)})),i=(0,s.F)(r.StaticRegexReplace,o),l={kernelName:r.StaticRegexReplace,backendName:"cpu",kernelFunc:i}},7892:(e,t,n)=>{"use strict";n.d(t,{B:()=>s,op:()=>o});var r=n(2164),a=n(1426);const s="__op";function o(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const o=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=s;const i=function(){r.T2.startScope(n);try{const e=o(...arguments);return(0,a.yL)(e)&&console.error("Cannot return a Promise inside of tidy."),r.T2.endScope(e),e}catch(e){throw r.T2.endScope(null),e}};return Object.defineProperty(i,"name",{value:n,configurable:!0}),i}},7905:(e,t,n)=>{"use strict";n.d(t,{Do:()=>m,XB:()=>f,f2:()=>g,zE:()=>y});var r=n(8805),a=n(3645),s=n(8076),o=n(803),i=n(9855),l=n(5251),u=n(9721),c=n(5583),d=n(4213),p=n(319),h=n(7382);function f(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return(0,o.l)(e,(0,p.P)(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function m(e,t){let n=t;const a=r.getReductionAxes(e.shape,t.shape);return a.length>0&&(n=(0,h.c)(n,a)),(0,c.t)(n,e.shape)}function g(e,t,n,r){if("linear"===t)return e;if("relu"===t)return(0,l.V)(e);if("elu"===t)return(0,a.P)(e);if("relu6"===t)return(0,u.j)(e);if("prelu"===t)return(0,i.N)(e,n);if("leakyrelu"===t)return(0,s.H)(e,r);if("sigmoid"===t)return(0,d.r)(e);throw new Error(`Unknown fused activation ${t}.`)}const y=(e,t)=>!(e>0)||"linear"===t},7920:(e,t,n)=>{"use strict";n.d(t,{z:()=>i});var r=n(2164),a=n(9554),s=n(4148),o=n(8805);const i=(0,n(7892).op)({logicalOr_:function(e,t){const n=(0,s.YT)(e,"a","logicalOr","bool"),i=(0,s.YT)(t,"b","logicalOr","bool");(0,o.assertAndGetBroadcastShape)(n.shape,i.shape);const l={a:n,b:i};return r.T2.runKernel(a.LXA,l)}})},7926:(e,t,n)=>{"use strict";let r;function a(){if(null==r){let e;if("undefined"!==typeof window)e=window;else if("undefined"!==typeof n.g)e=n.g;else if("undefined"!==typeof process)e=process;else{if("undefined"===typeof self)throw new Error("Could not find a global object");e=self}r=e}return r}function s(e,t){const n=function(){const e=a();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}n.d(t,{L:()=>a,m:()=>s})},7950:(e,t,n)=>{"use strict";!function e(){if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(t){console.error(t)}}(),e.exports=n(6672)},7951:(e,t,n)=>{"use strict";n.d(t,{j:()=>i});var r=n(2164),a=n(9554),s=n(8804),o=n(4148);const i=(0,n(7892).op)({sub_:function(e,t){let n=(0,o.YT)(e,"a","sub"),i=(0,o.YT)(t,"b","sub");[n,i]=(0,s.makeTypesMatch)(n,i);const l={a:n,b:i};return r.T2.runKernel(a.PbM,l)}})},8024:(e,t,n)=>{"use strict";n.d(t,{D:()=>a});var r=n(5743);function a(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const a=(0,r.buffer)(n,e.dtype);for(let r=0;r<a.values.length;++r){const t=a.indexToLoc(r),n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=t[r]%e.shape[r];const s=e.locToIndex(n);a.values[r]=e.values[s]}return a}},8032:(e,t,n)=>{"use strict";n.d(t,{O:()=>s});var r=n(4148),a=n(9914);function s(e,t,n){const s=(0,r.MZ)(e,n);return(0,a.Q)(e,t,s,n)}},8036:(e,t,n)=>{"use strict";n.d(t,{x:()=>o});var r=n(5743);const a=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function s(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:e.length-1;for(;o>n;){if(o-n>600){const r=o-n+1,a=t-n+1,i=Math.log(r),l=.5*Math.exp(2*i/3),u=.5*Math.sqrt(i*l*(r-l)/r)*Math.sign(a-r/2);s(e,t,Math.max(n,Math.floor(t-a*l/r+u)),Math.min(o,Math.floor(t+(r-a)*l/r+u)))}const i=e[t];let l=n,u=o;for(r.util.swap(e,n,t),a(e[o],i)>0&&r.util.swap(e,n,o);l<u;){for(r.util.swap(e,l,u),l++,u--;a(e[l],i)<0;)l+=1;for(;a(e[u],i)>0;)u-=1}0===a(e[n],i)?r.util.swap(e,n,u):(u+=1,r.util.swap(e,u,o)),u<=t&&(n=u+1),t<=u&&(o=u-1)}}function o(e,t,n,o,i){const l=t[t.length-1],[u,c]=[e.length/l,l],d=r.util.getTypedArrayFromDType(n,u*o),p=r.util.getTypedArrayFromDType("int32",u*o);for(let r=0;r<u;r++){const t=r*c,n=e.subarray(t,t+c);let l=new Array(n.length);n.forEach(((e,t)=>l[t]={value:e,index:t})),o<l.length&&(s(l,o),l=l.slice(0,o)),i&&l.sort(a);const u=r*o,h=d.subarray(u,u+o),f=p.subarray(u,u+o);for(let e=0;e<o;e++)h[e]=l[e].value,f[e]=l[e].index}const h=t.slice();return h[h.length-1]=o,[(0,r.buffer)(h,n,d),(0,r.buffer)(h,"int32",p)]}},8041:(e,t,n)=>{"use strict";n.d(t,{Fu:()=>l,x6:()=>o});var r=n(5743),a=n(4084),s=n(4729);const o=(0,a.o)((e=>Math.sqrt(e))),i=(0,s.v)(r.Sqrt,(e=>Math.sqrt(e))),l={kernelName:r.Sqrt,backendName:"cpu",kernelFunc:i}},8046:(e,t,n)=>{"use strict";n.d(t,{AS:()=>g,DZ:()=>m,Gc:()=>x,Hi:()=>p,Hs:()=>I,IS:()=>u,ME:()=>f,Ok:()=>C,Sm:()=>i,W4:()=>T,aC:()=>y,fL:()=>c,gJ:()=>N,gY:()=>l,go:()=>S,jh:()=>v,jz:()=>k,kB:()=>b,m1:()=>h,rE:()=>w,rm:()=>d});var r=n(2164),a=n(5399),s=n(9494),o=n(8804);function i(){(0,a._K)().set("PROD",!0)}function l(){(0,a._K)().set("DEBUG",!0)}function u(){(0,a._K)().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function c(e){(0,a._K)().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function d(){r.T2.disposeVariables()}function p(){return r.T2}function h(){return r.T2.memory()}function f(e){return r.T2.profile(e)}function m(e,t){return r.T2.tidy(e,t)}function g(e){(0,o.getTensorsInContainer)(e).forEach((e=>e.dispose()))}function y(e){return r.T2.keep(e)}function b(e){return r.T2.time(e)}function v(e){return r.T2.setBackend(e)}function x(){return r.T2.ready()}function k(){return r.T2.backendName}function w(e){r.T2.removeBackend(e)}function S(e){return r.T2.findBackend(e)}function T(e){return r.T2.findBackendFactory(e)}function N(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return r.T2.registerBackend(e,t,n)}function I(){return r.T2.backend}function C(e,t){(0,a._K)().setPlatform(e,t)}(0,s.B4)(c)},8075:(e,t,n)=>{"use strict";var r,a,s,o,i;n.d(t,{Nw:()=>p,Oj:()=>d,Tu:()=>u,ch:()=>c,rg:()=>r}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(r||(r={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(a||(a={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(s||(s={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(o||(o={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(i||(i={}));const l={float32:o,int32:a,bool:s,complex64:i};function u(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return l[e][t]}function c(e){return u(e,"int32")}function d(e){return null!=e&&"object"===typeof e&&"texture"in e&&e.texture instanceof WebGLTexture}function p(e){return"undefined"!==typeof GPUBuffer&&null!=e&&"object"===typeof e&&"buffer"in e&&e.buffer instanceof GPUBuffer}},8076:(e,t,n)=>{"use strict";n.d(t,{H:()=>o});var r=n(2164),a=n(9554),s=n(4148);const o=(0,n(7892).op)({leakyRelu_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.2;const n={x:(0,s.YT)(e,"x","leakyRelu")},o={alpha:t};return r.T2.runKernel(a.X0$,n,o)}})},8143:(e,t,n)=>{"use strict";n.d(t,{L:()=>o});var r=n(2164),a=n(9554),s=n(4148);const o=(0,n(7892).op)({sinh_:function(e){const t={x:(0,s.YT)(e,"x","sinh")};return r.T2.runKernel(a.J3C,t)}})},8147:(e,t,n)=>{"use strict";n.d(t,{r:()=>o});var r=n(2164),a=n(9554),s=n(4148);const o=(0,n(7892).op)({atanh_:function(e){const t={x:(0,s.YT)(e,"x","atanh")};return r.T2.runKernel(a.zP9,t)}})},8320:(e,t,n)=>{"use strict";n.d(t,{M:()=>l});var r=n(2164),a=n(9554),s=n(8804),o=n(4148),i=n(8805);const l=(0,n(7892).op)({less_:function(e,t){let n=(0,o.YT)(e,"a","less","string_or_numeric"),l=(0,o.YT)(t,"b","less","string_or_numeric");[n,l]=(0,s.makeTypesMatch)(n,l),(0,i.assertAndGetBroadcastShape)(n.shape,l.shape);const u={a:n,b:l};return r.T2.runKernel(a.mIA,u)}})},8440:(e,t,n)=>{"use strict";n.d(t,{AL:()=>l,cl:()=>o});var r=n(5743),a=n(2312),s=n(5101);const o=(0,a.Z)(((e,t)=>e!==t?1:0)),i=(0,s.j)(r.NotEqual,o,null,"bool"),l={kernelName:r.NotEqual,backendName:"cpu",kernelFunc:i}},8482:(e,t,n)=>{"use strict";n.d(t,{X:()=>o});var r=n(2164),a=n(9554),s=n(4148);const o=(0,n(7892).op)({argMin_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n={x:(0,s.YT)(e,"x","argMin")},o={axis:t};return r.T2.runKernel(a.p_m,n,o)}})},8545:(e,t,n)=>{"use strict";n.d(t,{K:()=>l});var r=n(5743),a=r.backend_util.RowPartitionType;class s{constructor(e,t,n,a,s,o,i,l,u,c){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=a,this.valuesDType=s,this.defaultValue=o,this.defaultValueShape=i,this.rowPartitionValues=l,this.rowPartitionValuesShapes=u,this.rowPartitionTypes=r.backend_util.getRowPartitionTypesHelper(c),this.raggedRank=r.backend_util.getRaggedRank(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===a.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===a.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case a.VALUE_ROWIDS:return s.getMaxWidthValueRowID(t);case a.ROW_SPLITS:return s.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${a[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const t=e.length;if(0===t||1===t)return 0;let n=0;for(let r=0;r<t-1;++r){const t=e[r+1]-e[r];t>n&&(n=t)}return n}static getMaxWidthValueRowID(e){const t=e.length;if(0===t)return 0;let n=0,r=e[0],a=0;for(let s=1;s<t;++s){const t=e[s];t!==r&&(r=t,a=Math.max(s-n,a),n=s)}return Math.max(t-n,a)}tensorShapeFromTensor(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(0===t.length){if(-1===e[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return i(e,n)}calculateOutputSize(e){const t=this.valuesShape,n=this.defaultValueShape;r.backend_util.validateDefaultValueShape(n,t);const a=this.tensorShapeFromTensor(this.shape,this.shapeShape),s=r.backend_util.combineRaggedTensorToTensorShapes(this.raggedRank,a,t);s[0]<0&&(s[0]=e);for(let r=1;r<=this.raggedRank;++r)s[r]<0&&(s[r]=this.getMaxWidth(r));return s}calculateFirstParentOutputIndex(e,t,n){const a=Math.min(e,n),s=[];let o=0;for(let r=0;r<a;++r,o+=t)s.push(o);for(let r=a;r<e;++r)s.push(-1);return r.util.assert(s.length===e,(()=>"Final length of result must be equal to firstDimension.")),s}calculateOutputIndexRowSplit(e,t,n,r){const a=e.length,s=[];for(let o=0;o<a-1;++o){const a=e[o+1]-e[o];let i=Math.min(r,a),l=t[o];-1===l&&(i=0);for(let e=0;e<i;++e)s.push(l),l+=n;for(let e=0;e<a-i;++e)s.push(-1)}if(a>0&&s.length!==e[a-1])throw new Error("Invalid row split size.");return s}calculateOutputIndexValueRowID(e,t,n,r){const a=e.length,s=[];if(0===a)return[];let o=0,i=e[0];if(i>=t.length)throw new Error(`Got currentValueRowId=${i}, which is not less than ${t.length}`);let l=t[i];s.push(l);for(let u=1;u<a;++u){const a=e[u];if(a===i)l>=0&&(++o,o<r?l+=n:l=-1);else{if(o=0,i=a,a>=t.length)throw new Error(`Got nextValueRowId=${a} which is not less than ${t.length}`);l=t[a]}s.push(l)}if(s.length!==e.length)throw new Error("Invalid row ids.");return s}calculateOutputIndex(e,t,n,r){const s=this.getRowPartitionTensor(e),o=this.getRowPartitionTypeByDimension(e);switch(o){case a.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(s,t,n,r);case a.ROW_SPLITS:if(s.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${s.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(s,t,n,r);default:throw new Error(`Unsupported partition type: ${a[o]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case a.FIRST_DIM_SIZE:return e[0];case a.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case a.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${a[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let r=n.length-2;r>=0;--r)n[r]=n[r+1]*t[r+1];const a=i(t,!1),s=r.util.getArrayFromDType(this.valuesDType,r.util.sizeFromShape(a));if(n[0]*t[0]>0){let r=this.calculateFirstParentOutputIndex(e,n[0],t[0]);for(let e=1;e<=this.raggedRank;++e){r=this.calculateOutputIndex(e-1,r,n[e],t[e])}this.setOutput(this.raggedRank,r,s,a)}return[a,s]}setOutput(e,t,n,a){if(0===n.length)return;const s=this.values,i=n;let l=a.slice();l=l.slice(e+1);const u=r.util.sizeFromShape(l),c=t.length;let d=this.defaultValue;if(d.length!==u&&1!==d.length){const e=this.defaultValueShape;(0,r.tidy)((()=>{const t=(0,r.reshape)(d,e),n=(0,r.broadcastTo)(t,l);d=n.dataSync()}))}let p=0,h=0,f=0;for(let r=0;r<=c;++r){let e=r<c?t[r]:-1;if(e!==f){if(h<f){const e=s.subarray(p*u);o(i.subarray(h*u),e,(f-h)*u)}if(r>=c){const t=n.length;e=Math.floor(t/u)}if(e>f)if(1===this.defaultValue.length)i.subarray(f*u,e*u).fill(this.defaultValue[0]),f=e;else for(;e>f;){o(i.slice(f*u),d,u),++f}e<0?(p=r+1,h=f):(p=r,h=f,f=h+1)}else++f}}}function o(e,t,n){for(let r=0;r<n;r++)e[r]=t[r]}function i(e,t){const n=[];for(let r of e){if(r<0){if(!t)throw new Error(`Dimension ${r} must be >= 0`);if(r<-1)throw new Error(`Dimension ${r} must be >= -1`);r=-1}n.push(r)}return n}function l(e,t,n,r,a,o,i,l,u,c){return new s(e,t,n,r,a,o,i,l,u,c).compute()}},8587:(e,t,n)=>{"use strict";n.d(t,{R:()=>o});var r=n(2164),a=n(9554),s=n(4148);const o=(0,n(7892).op)({floor_:function(e){const t={x:(0,s.YT)(e,"x","floor","float32")};return r.T2.runKernel(a.ZgB,t)}})},8590:()=>{},8617:(e,t,n)=>{"use strict";n.d(t,{He:()=>o,l9:()=>l});var r=n(5743),a=n(2312),s=n(5101);const o=(0,a.Z)(((e,t)=>Math.max(e,t))),i=(0,s.j)(r.Maximum,o),l={kernelName:r.Maximum,backendName:"cpu",kernelFunc:i}},8650:(e,t,n)=>{"use strict";n.d(t,{$:()=>d});var r=n(2164),a=n(9554),s=n(4148),o=n(1426),i=n(7794),l=n(7538),u=n(7892),c=n(5583);const d=(0,u.op)({avgPool_:function(e,t,n,u,d){const p=(0,s.YT)(e,"x","avgPool","float32");o.vA(l.G0(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let h=p,f=!1;3===p.rank&&(f=!0,h=(0,c.t)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),o.vA(4===h.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${h.rank}.`)),l.s_("avgPool",u,d);const m={x:h},g={filterSize:t,strides:n,pad:u,dimRoundingMode:d};let y=r.T2.runKernel(a.ho8,m,g);return y=(0,i.w)(y,p.dtype),f?(0,c.t)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}})},8793:(e,t,n)=>{"use strict";n.d(t,{G:()=>s});var r=n(5743);class a{constructor(e,t,n,a,s,o){this.separator=r.util.encodeString(e),this.nGramWidths=t,this.leftPad=r.util.encodeString(n),this.rightPad=r.util.encodeString(a),this.padWidth=s,this.preserveShort=o}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,a,s){for(let o=0;o<a;++o){const i=this.getPadWidth(s),l=Math.max(0,i-o),u=Math.max(0,i-(a-(o+1))),c=s-(l+u),d=t+(l>0?0:o-i);let p=0;p+=l*this.leftPad.length;for(let t=0;t<c;++t)p+=e[d+t].length;p+=u*this.rightPad.length;p+=(l+u+c-1)*this.separator.length,n[r+o]=new Uint8Array(p);const h=n[r+o];let f=0;const m=e=>e.forEach((e=>h[f++]=e));for(let e=0;e<l;++e)m(this.leftPad),m(this.separator);for(let t=0;t<c-1;++t)m(e[d+t]),m(this.separator);if(c>0){m(e[d+c-1]);for(let e=0;e<u;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<u-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,a=t.length;if(a>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let r=1;r<a;++r){let a=t[r]>=e;if(a=a&&t[r]<=n,!a)throw new Error(`Invalid split value ${t[r]}, must be in [${e}, ${n}]`);e=t[r]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const s=a-1,o=r.util.getArrayFromDType("int32",a);if(0===n||0===a){const e=new Array(n);for(let t=0;t<=s;++t)o[t]=0;return[e,o]}o[0]=0;for(let r=1;r<=s;++r){const e=t[r]-t[r-1];let n=0;this.nGramWidths.forEach((t=>{n+=this.getNumNGrams(e,t)})),this.preserveShort&&e>0&&0===n&&(n=1),o[r]=o[r-1]+n}const i=new Array(o[s]);for(let r=0;r<s;++r){const n=t[r];let a=o[r];if(this.nGramWidths.forEach((s=>{const o=t[r+1]-t[r],l=this.getNumNGrams(o,s);this.createNGrams(e,n,i,a,l,s),a+=l})),this.preserveShort&&a===o[r]){const s=t[r+1]-t[r];if(0===s)continue;const o=s+2*this.padWidth,l=1;this.createNGrams(e,n,i,a,l,o)}}return[i,o]}}function s(e,t,n,r,s,o,i,l){return new a(n,r,s,o,i,l).compute(e,t)}},8804:(e,t,n)=>{"use strict";n.r(t),n.d(t,{assertTypesMatch:()=>i,getTensorsInContainer:()=>u,isTensorInList:()=>l,makeTypesMatch:()=>o});var r=n(9494),a=n(8075),s=n(1426);function o(e,t){if(e.dtype===t.dtype)return[e,t];const n=(0,a.Tu)(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function i(e,t){(0,s.vA)(e.dtype===t.dtype,(()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`))}function l(e,t){return t.some((t=>t.id===e.id))}function u(e){const t=[];return c(e,t,new Set),t}function c(e,t,n){if(null==e)return;if(e instanceof r.qY)return void t.push(e);if(a=e,!Array.isArray(a)&&"object"!==typeof a)return;var a;const s=e;for(const r in s){const e=s[r];n.has(e)||(n.add(e),c(e,t,n))}}},8805:(e,t,n)=>{"use strict";function r(e,t){const n=e.length,r=[];for(let a=0;a<n;a++){const s=n-1-a,o=e[s]||1;(t[t.length-1-a]||1)>1&&1===o&&r.unshift(s)}return r}function a(e,t){const n=[];for(let r=0;r<t.length;r++){const a=e[e.length-r-1],s=t.length-r-1,o=t[s];(null==a||1===a&&o>1)&&n.unshift(s)}return n}function s(e,t){const n=Math.max(e.length,t.length),r=new Array(n);for(let a=0;a<n;a++){let s=e[e.length-a-1];null==s&&(s=1);let o=t[t.length-a-1];if(null==o&&(o=1),1===s)r[n-a-1]=o;else if(1===o)r[n-a-1]=s;else{if(s!==o){throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`)}r[n-a-1]=s}}return r}n.r(t),n.d(t,{assertAndGetBroadcastShape:()=>s,getBroadcastDims:()=>r,getReductionAxes:()=>a})},8810:(e,t,n)=>{"use strict";n.d(t,{Y:()=>l});var r=n(2164),a=n(9554),s=n(4148),o=n(1426),i=n(7794);const l=(0,n(7892).op)({erf_:function(e){let t=(0,s.YT)(e,"x","erf");o.vA("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=(0,i.w)(t,"float32"));const n={x:t};return r.T2.runKernel(a._s9,n)}})},8826:(e,t,n)=>{"use strict";n.d(t,{p:()=>a});var r=n(2155);const a=(0,n(7892).op)({euclideanNorm_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return(0,r.x)(e,"euclidean",t,n)}})},8829:(e,t,n)=>{"use strict";n.d(t,{VM:()=>l,lg:()=>o});var r=n(5743),a=n(2312),s=n(5101);const o=(0,a.Z)(((e,t)=>e>=t?1:0)),i=(0,s.j)(r.GreaterEqual,o,null,"bool"),l={kernelName:r.GreaterEqual,backendName:"cpu",kernelFunc:i}},8853:(e,t,n)=>{"use strict";e.exports=n(5896)},8977:(e,t,n)=>{"use strict";n.r(t),n.d(t,{arraysEqual:()=>s.r1,arraysEqualWithNull:()=>s.e_,assert:()=>s.vA,assertNonNegativeIntegerDimensions:()=>s.SA,assertNonNull:()=>s.HO,assertShapesMatch:()=>s.O3,bytesFromStringArray:()=>s.SL,bytesPerElement:()=>s.jv,checkConversionForErrors:()=>s.nd,clamp:()=>s.qE,computeStrides:()=>s.Ur,convertBackendValuesAndArrayBuffer:()=>s.o2,createScalarValue:()=>x,createShuffledIndices:()=>s.P8,decodeString:()=>N,distSquared:()=>s.oO,encodeString:()=>T,fetch:()=>S,fingerPrint64:()=>v,flatten:()=>C,getArrayFromDType:()=>s.Ab,getTypedArrayFromDType:()=>s.ce,hasEncodingLoss:()=>s.BE,hexToLong:()=>l,indexToLoc:()=>s._k,inferDtype:()=>s.X$,inferFromImplicitShape:()=>s.XT,isBoolean:()=>s.Lm,isFunction:()=>s.Tn,isInt:()=>s.E6,isNumber:()=>s.Et,isPromise:()=>s.yL,isScalarShape:()=>s.Sf,isString:()=>s.Kg,isTypedArray:()=>I,isValidDtype:()=>s.xn,locToIndex:()=>s.sX,makeOnesTypedArray:()=>s.FZ,makeZerosNestedTypedArray:()=>s.c7,makeZerosTypedArray:()=>s.Ty,nearestDivisor:()=>s.lK,nearestLargerEven:()=>s.eV,now:()=>w,parseAxisParam:()=>s.Y6,randUniform:()=>s.so,repeatedTry:()=>s._q,rightPad:()=>s.av,shuffle:()=>s.k4,shuffleCombo:()=>s.a0,sizeFromShape:()=>s.Ze,sizeToSquarishShape:()=>s.gS,squeezeShape:()=>s.gx,sum:()=>s.cz,swap:()=>s.wg,tanh:()=>s.ym,toNestedArray:()=>s.yw,toTypedArray:()=>k});var r=n(5399),a=n(5767),s=n(1426),o=n(7353);const i=n.n(o)()||o;function l(e){return i.fromString(e,!0,16)}const u=l("c3a5c85c97cb3127"),c=l("b492b66fbe98f273"),d=l("9ae16a3b2f90404f");function p(e){return e.xor(e.shru(47))}function h(e,t,n){const r=e.slice(t,t+n);return i.fromBytes(Array.from(r),!0,!0)}function f(e,t){return h(e,t,8)}function m(e,t){return h(e,t,4)}function g(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function y(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:l("9ddfea08eb382d69"),r=e.xor(t).mul(n);r=r.xor(r.shru(47));let a=t.xor(r).mul(n);return a=a.xor(a.shru(47)),a=a.mul(n),a}function b(e,t,n,r){return function(e,t,n,r,a,s){a=a.add(e),s=g(s.add(a).add(r),21);const o=a;return a=(a=a.add(t)).add(n),s=s.add(g(a,44)),[a.add(r),s.add(o)]}(f(e,t),f(e,t+8),f(e,t+16),f(e,t+24),n,r)}function v(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;const n=i.fromNumber(81,!0);if(t<=32)return t<=16?function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;if(t>=8){const n=d.add(2*t),r=f(e,0).add(d),a=f(e,t-8);return y(g(a,37).mul(n).add(r),g(r,25).add(a).mul(n),n)}if(t>=4){const n=d.add(2*t);return y(m(e,0).shl(3).add(t),m(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),r=t+(e[t-1]<<2);return p(d.mul(n).xor(u.mul(r))).mul(d)}return d}(e,t):function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;const n=d.add(2*t),r=f(e,0).mul(c),a=f(e,8),s=f(e,t-8).mul(n),o=f(e,t-16).mul(d);return y(g(r.add(a),43).add(g(s,30)).add(o),r.add(g(a.add(d),18)).add(s),n)}(e,t);if(t<=64)return function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;const n=d.add(2*t),r=f(e,0).mul(d),a=f(e,8),s=f(e,t-8).mul(n),o=f(e,t-16).mul(d),i=g(r.add(a),43).add(g(s,30)).add(o),l=y(i,r.add(g(a.add(d),18)).add(s),n),u=f(e,16).mul(n),c=f(e,24),p=i.add(f(e,t-32)).mul(n),h=l.add(f(e,t-24)).mul(n);return y(g(u.add(c),43).add(g(p,30)).add(h),u.add(g(c.add(r),18)).add(p),n)}(e,t);let r=n,a=n.mul(c).add(113),s=p(a.mul(d).add(113)).mul(d),o=[i.UZERO,i.UZERO],l=[i.UZERO,i.UZERO];r=r.mul(d).add(f(e,0));let h=0;const v=64*(t-1>>6),x=v+(t-1&63)-63;do{r=g(r.add(a).add(o[0]).add(f(e,h+8)),37).mul(c),a=g(a.add(o[1]).add(f(e,h+48)),42).mul(c),r=r.xor(l[1]),a=a.add(o[0]).add(f(e,h+40)),s=g(s.add(l[0]),33).mul(c),o=b(e,h,o[1].mul(c),r.add(l[0])),l=b(e,h+32,s.add(l[1]),a.add(f(e,h+16))),[s,r]=[r,s],h+=64}while(h!==v);const k=c.add(s.and(255).shl(1));return h=x,l[0]=l[0].add(t-1&63),o[0]=o[0].add(l[0]),l[0]=l[0].add(o[0]),r=g(r.add(a).add(o[0]).add(f(e,h+8)),37).mul(k),a=g(a.add(o[1]).add(f(e,h+48)),42).mul(k),r=r.xor(l[1].mul(9)),a=a.add(o[0].mul(9).add(f(e,h+40))),s=g(s.add(l[0]),33).mul(k),o=b(e,h,o[1].mul(k),r.add(l[0])),l=b(e,h+32,s.add(l[1]),a.add(f(e,h+16))),[s,r]=[r,s],y(y(o[0],l[0],k).add(p(a).mul(u)).add(s),y(o[1],l[1],k).add(r),k)}function x(e,t){return"string"===t?T(e):k([e],t)}function k(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=C(e)),(0,r._K)().getBool("DEBUG")&&s.nd(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function w(){return(0,r._K)().platform.now()}function S(e,t){return(0,r._K)().platform.fetch(e,t)}function T(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"utf-8";return t=t||"utf-8",(0,r._K)().platform.encode(e,t)}function N(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"utf-8";return t=t||"utf-8",(0,r._K)().platform.decode(e,t)}function I(e){return null!=(0,r._K)().platform.isTypedArray?(0,r._K)().platform.isTypedArray(e):(0,a.Y)(e)}function C(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(null==t&&(t=[]),"boolean"===typeof e||"number"===typeof e||"string"===typeof e||s.yL(e)||null==e||I(e)&&n)t.push(e);else if(Array.isArray(e)||I(e))for(let r=0;r<e.length;++r)C(e[r],t,n);else{let r=-1;for(const t of Object.keys(e))/^([1-9]+[0-9]*|0)$/.test(t)&&(r=Math.max(r,Number(t)));for(let a=0;a<=r;a++)C(e[a],t,n)}return t}},9016:function(e,t,n){var r;!function(e,a){function s(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function i(e,t){var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=i:n.amdD&&n.amdO?void 0===(r=function(){return i}.call(t,n,t,a))||(a.exports=r):this.xorwow=i}(0,e=n.nmd(e),n.amdD)},9027:(e,t,n)=>{"use strict";n.d(t,{M:()=>o});var r=n(2164),a=n(9554),s=n(4148);const o=(0,n(7892).op)({isFinite_:function(e){const t={x:(0,s.YT)(e,"x","isFinite")};return r.T2.runKernel(a.gIW,t)}})},9044:(e,t,n)=>{"use strict";n.d(t,{h:()=>a});var r=n(5743);function a(e,t,n,a){const s=r.util.getArrayFromDType(n,r.util.sizeFromShape(t));if(a&&"string"!==n){let t=0;e.forEach((e=>{const n=r.util.sizeFromShape(e.shape);s.set(e.vals,t),t+=n}))}else{let a=0;e.forEach((e=>{const o="string"===n?r.backend_util.fromUint8ToStringArray(e.vals):e.vals;let i=0;for(let n=0;n<e.shape[0];++n){const r=n*t[1]+a;for(let t=0;t<e.shape[1];++t)s[r+t]=o[i++]}a+=e.shape[1]}))}return s}},9235:(e,t,n)=>{"use strict";n.d(t,{Em:()=>u,SM:()=>i,WC:()=>l,WH:()=>a,aF:()=>s,fK:()=>d,gx:()=>c,lb:()=>o});var r=n(1426);function a(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function s(e,t,n){const r=e.length+t.length,a=[];let s=0,o=0;for(let i=0;i<r;i++)-1===n.indexOf(i)?a.push(e[s++]):a.push(t[o++]);return a}function o(e,t){const n=[],r=e.length;for(let a=0;a<r;a++)-1===t.indexOf(a)&&n.push(e[a]);return[n,t.map((t=>e[t]))]}function i(e,t){return s(e,t.map((e=>1)),t)}function l(e,t,n){r.vA(a(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function u(e,t){if(a(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function c(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function d(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}},9249:(e,t,n)=>{"use strict";n.d(t,{BTT:()=>p.B,tnl:()=>a.t,HQu:()=>s.H,FqL:()=>o.F,WQq:()=>i.W,QiD:()=>h,Q7R:()=>f.Q,bzn:()=>m.b,FLi:()=>g.F,XRg:()=>y.X,qRo:()=>b.q,yHs:()=>v.y,rYl:()=>x.r,FPz:()=>k.F,rfv:()=>w.r,$jT:()=>S.$,sub:()=>C,lZX:()=>O,$v7:()=>M.$,BFc:()=>P,kSi:()=>L,T5N:()=>z,GTe:()=>D.G,HbZ:()=>B,vjT:()=>V,ftb:()=>nr,ROE:()=>W,hOW:()=>U.h,ra8:()=>G.r,wgE:()=>T.w,mkO:()=>j.m,zQh:()=>H.z,o8B:()=>Y.o,faB:()=>q.f,xWs:()=>E.x,I1m:()=>K,RPU:()=>X,O5O:()=>Z,P1l:()=>Q,kA9:()=>J.k,Xtf:()=>ee.X,wX9:()=>te.w,IPL:()=>ne,jIJ:()=>ae,gnS:()=>se.g,yIG:()=>oe.y,_jP:()=>pr,Lp0:()=>ie.L,rCv:()=>le.r,aOp:()=>ue,Rj8:()=>ce.R,Gl3:()=>de.G,smy:()=>pe,X7t:()=>he.X,y4m:()=>fe.y,ek5:()=>me.e,Omf:()=>ge.O,EZY:()=>cr,_3C:()=>ye,Pqc:()=>be.P,FJY:()=>dr,QP2:()=>ve,LCg:()=>xe.L,Y12:()=>ke.Y,p4S:()=>we.p,oNF:()=>Se.o,UG6:()=>Te.U,IYd:()=>Ne.I,y5U:()=>Ce,hVP:()=>kn.h,GSj:()=>Ee.G,RIf:()=>$e.R,wh_:()=>Ae.w,cZk:()=>r,kgh:()=>_e.k,SY9:()=>ur,rhj:()=>Re.r,DQN:()=>Fe.D,KGM:()=>wn.K,ngS:()=>Oe.n,Slp:()=>ga,U4u:()=>hr,ggX:()=>Sn.g,MIs:()=>De.M,EN4:()=>Me.E,yrW:()=>Pe.y,H8d:()=>Le.H,M7h:()=>ze.M,InN:()=>Be.I,mPL:()=>ya,mT8:()=>Ve,Kgs:()=>We.K,Rm2:()=>Ue.R,Kko:()=>Ge.K,nqI:()=>je.n,HPB:()=>He.H,VZ:()=>Ye.V,n76:()=>qe.n,NSZ:()=>Ke.N,ztW:()=>Xe.z,rxB:()=>Ze.r,YYh:()=>ba,yzS:()=>et,NoW:()=>$.N,T9B:()=>tt.T,jgi:()=>nt.j,NYV:()=>rt,RO:()=>at,PhQ:()=>st.P,i2o:()=>ot.i,OYQ:()=>ut,jkA:()=>ct.j,BpO:()=>dt.B,FFZ:()=>pt.F,ziu:()=>ht.z,Clk:()=>yt,CRk:()=>or,lKK:()=>A.l,YDF:()=>bt,OjQ:()=>vt,HZy:()=>xt.H,xbf:()=>ar.x,Ec:()=>kt.E,Mw0:()=>wt.M,SaS:()=>it.S,P61:()=>St.P,op:()=>p.op,X4o:()=>Tt,eVF:()=>Nt.e,BZs:()=>It,grY:()=>Ct,XHu:()=>Et,WLX:()=>$t,dzn:()=>At.d,n7C:()=>_t.n,NsG:()=>Rt.N,yyV:()=>Ft.y,_eU:()=>Ot._,whe:()=>Dt,iyU:()=>Mt,Q0_:()=>Pt,_9M:()=>Lt,pR9:()=>Ut,FE$:()=>Gt,m0H:()=>jt,YeY:()=>Ht,HYA:()=>Yt,y17:()=>qt,xav:()=>Kt.x,VOZ:()=>Xt.V,VVh:()=>Zt.V,j__:()=>Qt.j,tQQ:()=>I.t,BEg:()=>Jt.B,QD2:()=>en,LMr:()=>tn,I2l:()=>nn,JYU:()=>rn,z8$:()=>Tn.z,LIG:()=>an.L,Z$r:()=>sn.Z,d_2:()=>on.d,NFr:()=>ir,sZg:()=>Je,WfX:()=>ln.W,wdz:()=>un.w,F12:()=>cn,ry7:()=>_.r,_SZ:()=>dn._,vPA:()=>ma,F8e:()=>pn.F,L0l:()=>hn.L,dik:()=>R.d,Q$M:()=>fn,zAd:()=>mn,wck:()=>gn,R0O:()=>yn,Vs9:()=>bn.V,lw0:()=>vn.l,eDJ:()=>xn.e,lMo:()=>va,Zhr:()=>lr,lOn:()=>fa,lDo:()=>Nn.l,RZD:()=>In.R,EwI:()=>mt.E,Pbu:()=>Cn.P,r2V:()=>En.r,t$z:()=>$n.t,PMw:()=>An.P,Ym9:()=>_n.Y,YjP:()=>xa,jbE:()=>gt.j,czq:()=>Rn.c,Mlm:()=>Fn.M,ymU:()=>F.y,OEK:()=>On.O,tGX:()=>Mn,KtR:()=>Pn,$_$:()=>Ln.$,g9W:()=>zn,Lpo:()=>Bn,yxw:()=>Vn,NNh:()=>Un,Vsq:()=>Ie.V,rfw:()=>Gn.r,mgz:()=>rr.m,efE:()=>jn,AmM:()=>Hn.A,zAU:()=>Yn.z,K$i:()=>qn.K,rni:()=>Kn,bvq:()=>Xn,_M9:()=>Zn._,YJN:()=>Jn,Ul9:()=>er.U,POl:()=>tr.P});var r={};n.r(r),n.d(r,{conv2d:()=>vr,depthwiseConv2d:()=>wr,matMul:()=>Sr});var a=n(3753),s=n(4759),o=n(983),i=n(7242),l=n(2164),u=n(9554),c=n(4148),d=n(1426),p=n(7892);const h=(0,p.op)({addN_:function(e){d.vA(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),d.vA(e.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`));const t=e.map(((e,t)=>(0,c.YT)(e,`tensors${t}`,"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!d.r1(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const r=t;return l.T2.runKernel(u.EkD,r)}});var f=n(1802),m=n(1819),g=n(3068),y=n(8482),b=n(3010),v=n(6464),x=n(7803),k=n(6349),w=n(8147),S=n(8650),T=n(7794),N=n(7538),I=n(5583);const C=(0,p.op)({avgPool3d_:function(e,t,n,r,a){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NDHWC";const o=(0,c.YT)(e,"x","avgPool3d","float32");let i=o,p=!1;4===o.rank&&(p=!0,i=(0,I.t)(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),d.vA(5===i.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${i.rank}.`)),d.vA("NDHWC"===s,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`)),d.vA("number"===typeof n&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,(()=>`Error in avgPool3d: Stride must be > 0, but got '${n}'`)),(0,N.s_)("avgPool3d",r,a);const h={x:i},f={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s};let m=l.T2.runKernel(u.cS,h,f);return m=(0,T.w)(m,i.dtype),p?(0,I.t)(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}});var E=n(4429),$=n(5162),A=n(803),_=n(4213),R=n(463),F=n(6532);const O=(0,p.op)({basicLSTMCell_:function(e,t,n,r,a,s){const o=(0,c.YT)(e,"forgetBias","basicLSTMCell"),l=(0,c.YT)(t,"lstmKernel","basicLSTMCell"),u=(0,c.YT)(n,"lstmBias","basicLSTMCell"),d=(0,c.YT)(r,"data","basicLSTMCell"),p=(0,c.YT)(a,"c","basicLSTMCell"),h=(0,c.YT)(s,"h","basicLSTMCell"),f=(0,E.x)([d,h],1),m=(0,$.N)(f,l),g=(0,i.W)(m,u),y=g.shape[0],b=g.shape[1]/4,v=[y,b],x=(0,R.d)(g,[0,0],v),k=(0,R.d)(g,[0,b],v),w=(0,R.d)(g,[0,2*b],v),S=(0,R.d)(g,[0,3*b],v),T=(0,i.W)((0,A.l)((0,_.r)(x),(0,F.y)(k)),(0,A.l)(p,(0,_.r)((0,i.W)(o,w))));return[T,(0,A.l)((0,F.y)(T),(0,_.r)(S))]}});var D=n(2557),M=n(7237);const P=(0,p.op)({batchNorm2d_:function(e,t,n,r,a,s){const o=(0,c.YT)(e,"x","batchNorm"),i=(0,c.YT)(t,"mean","batchNorm"),l=(0,c.YT)(n,"variance","batchNorm");let u,p;return null!=a&&(u=(0,c.YT)(a,"scale","batchNorm")),null!=r&&(p=(0,c.YT)(r,"offset","batchNorm")),d.vA(2===o.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${o.rank}.`)),d.vA(2===i.rank||1===i.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${i.rank}.`)),d.vA(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=u&&d.vA(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=p&&d.vA(2===p.rank||1===p.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${p.rank}.`)),(0,M.$)(o,i,l,p,u,s)}});const L=(0,p.op)({batchNorm3d_:function(e,t,n,r,a,s){const o=(0,c.YT)(e,"x","batchNorm"),i=(0,c.YT)(t,"mean","batchNorm"),l=(0,c.YT)(n,"variance","batchNorm");let u,p;return null!=a&&(u=(0,c.YT)(a,"scale","batchNorm")),null!=r&&(p=(0,c.YT)(r,"offset","batchNorm")),d.vA(3===o.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${o.rank}.`)),d.vA(3===i.rank||1===i.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${i.rank}.`)),d.vA(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=u&&d.vA(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=p&&d.vA(3===p.rank||1===p.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${p.rank}.`)),(0,M.$)(o,i,l,p,u,s)}});const z=(0,p.op)({batchNorm4d_:function(e,t,n,r,a,s){const o=(0,c.YT)(e,"x","batchNorm"),i=(0,c.YT)(t,"mean","batchNorm"),l=(0,c.YT)(n,"variance","batchNorm");let u,p;return null!=a&&(u=(0,c.YT)(a,"scale","batchNorm")),null!=r&&(p=(0,c.YT)(r,"offset","batchNorm")),d.vA(4===o.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${o.rank}.`)),d.vA(4===i.rank||1===i.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${i.rank}.`)),d.vA(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=u&&d.vA(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=p&&d.vA(4===p.rank||1===p.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${p.rank}.`)),(0,M.$)(o,i,l,p,u,s)}});const B=(0,p.op)({bincount_:function(e,t,n){const r=(0,c.YT)(e,"x","bincount"),a=(0,c.YT)(t,"weights","bincount");d.vA("int32"===r.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`)),d.vA(n>=0,(()=>`size must be non-negative, but got ${n}.`)),d.vA(a.size===r.size||0===a.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${a.shape}.`));const s={x:r,weights:a},o={size:n};return l.T2.runKernel(u.N4F,s,o)}});const V=(0,p.op)({bitwiseAnd_:function(e,t){const n=(0,c.YT)(e,"x","bitwiseAnd"),r=(0,c.YT)(t,"y","bitwiseAnd");if(!(0,d.r1)(n.shape,r.shape))throw new Error(`BitwiseAnd: Tensors must have the same shape. x: ${n.shape}, y: ${r.shape}`);if("int32"!==n.dtype||"int32"!==r.dtype)throw new Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${n.dtype} and type of y: ${r.dtype}`);const a={a:n,b:r};return l.T2.runKernel(u.HNs,a)}});const W=(0,p.op)({broadcastArgs_:function(e,t){const n=(0,c.YT)(e,"s0","broadcastArgs","int32"),r=(0,c.YT)(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(1!==r.rank)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${r.rank}`);const a={s0:n,s1:r};return l.T2.runKernel(u.vj7,a)}});var U=n(4920),G=n(259),j=n(5396),H=n(3829),Y=n(9820),q=n(6149);const K=(0,p.op)({concat1d_:function(e){return(0,E.x)(e,0)}});const X=(0,p.op)({concat2d_:function(e,t){return(0,E.x)(e,t)}});const Z=(0,p.op)({concat3d_:function(e,t){return(0,E.x)(e,t)}});const Q=(0,p.op)({concat4d_:function(e,t){return(0,E.x)(e,t)}});var J=n(9870),ee=n(4969),te=n(1137);const ne=(0,p.op)({conv3d_:function(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NDHWC",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1,1];const o=(0,c.YT)(e,"x","conv3d"),i=(0,c.YT)(t,"filter","conv3d");let p=o,h=!1;4===o.rank&&(h=!0,p=(0,I.t)(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),d.vA(5===p.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${p.rank}.`)),d.vA(5===i.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${i.rank}.`)),d.vA(p.shape[4]===i.shape[3],(()=>`Error in conv3d: depth of input (${p.shape[4]}) must match input depth for filter ${i.shape[3]}.`)),d.vA((0,N.G0)(n,s),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),d.vA("NDHWC"===a,(()=>`Error in conv3d: got dataFormat of ${a} but only NDHWC is currently supported.`)),d.vA((0,N.qk)(s),(()=>"Error in conv3D: Dilated rates should be larger than 0.")),d.vA((0,N.qk)(n),(()=>"Error in conv3D: Strides should be larger than 0."));const f={x:p,filter:i},m={strides:n,pad:r,dataFormat:a,dilations:s},g=l.T2.runKernel(u.A1h,f,m);return h?(0,I.t)(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}});var re=n(6410);const ae=(0,p.op)({conv3dTranspose_:function(e,t,n,r,a){const s=(0,c.YT)(e,"x","conv3dTranspose"),o=(0,c.YT)(t,"filter","conv3dTranspose");return(0,re.c)(n,s,o,r,a)}});var se=n(5894),oe=n(1164),ie=n(3739),le=n(7167);const ue=(0,p.op)({denseBincount_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const a=(0,c.YT)(e,"x","denseBincount"),s=(0,c.YT)(t,"weights","denseBincount");d.vA("int32"===a.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${a.dtype}`)),d.vA(a.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${a.rank}.`)),d.vA(n>=0,(()=>`size must be non-negative, but got ${n}.`)),d.vA(s.size===a.size||0===s.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${a.shape}, weights shape: ${s.shape}.`));const o={x:a,weights:s},i={size:n,binaryOutput:r};return l.T2.runKernel(u.wNW,o,i)}});var ce=n(1719),de=n(9899);const pe=(0,p.op)({diag_:function(e){const t={x:(0,c.YT)(e,"x","diag")};return l.T2.runKernel(u.ORI,t)}});var he=n(3789),fe=n(4974),me=n(44),ge=n(6434);const ye=(0,p.op)({einsum_:function(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];const a=n.map(((e,t)=>(0,c.YT)(e,`tensors${t}`,"einsum"))),s={equation:e};return l.T2.runKernel(u.Qgm,a,s)}});var be=n(3645);const ve=(0,p.op)({ensureShape_:function(e,t){const n=(0,c.YT)(e,"x","ensureShape","string_or_numeric");if(!(0,d.e_)(n.shape,t))throw new Error(`EnsureShape: Shape of tensor ${n.shape} is not compatible with expected shape ${t}`);return e}});var xe=n(7457),ke=n(8810),we=n(8826),Se=n(5462),Te=n(4023),Ne=n(2520),Ie=n(3017);const Ce=(0,p.op)({eye_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32";null==t&&(t=e);const a=(0,G.r)([e,t],r),s=e<=t?e:t;for(let i=0;i<s;++i)a.set(1,i,i);const o=(0,I.t)(a.toTensor(),[e,t]);if(null==n)return o;if(1===n.length)return(0,Ie.V)((0,Te.U)(o,0),[n[0],1,1]);if(2===n.length)return(0,Ie.V)((0,Te.U)((0,Te.U)(o,0),0),[n[0],n[1],1,1]);if(3===n.length)return(0,Ie.V)((0,Te.U)((0,Te.U)((0,Te.U)(o,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});var Ee=n(4660),$e=n(8587),Ae=n(3612),_e=n(6178),Re=n(2759),Fe=n(9996),Oe=n(1047),De=n(9027),Me=n(6005),Pe=n(3467),Le=n(8076),ze=n(8320),Be=n(827);function Ve(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const r={start:e,stop:t,num:n};return l.T2.runKernel(u.mnI,{},r)}var We=n(6584),Ue=n(5911),Ge=n(1386),je=n(4824),He=n(1194),Ye=n(2175),qe=n(5692),Ke=n(5344),Xe=n(7920),Ze=n(3708);const Qe=2147483648;const Je=(0,p.op)({searchSorted_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"left";const r=(0,c.YT)(e,"sortedSequence","searchSorted"),a=(0,c.YT)(t,"values","searchSorted"),s=r.shape[r.shape.length-1],o=a.shape[a.shape.length-1],i=(0,I.t)(r,[-1,s]),p=(0,I.t)(a,[-1,o]);if(i.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(i.shape[0]!==p.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if((0,d.Ze)(p.shape)>=Qe)throw new Error("values tensor size must less than 2147483648");if(i.shape[1]>=Qe)throw new Error(`trailing dim_size must less than 2147483648 for int32 output type, was ${i.shape[1]}`);const h={sortedSequence:i,values:p},f={side:n};return l.T2.runKernel(u.uWl,h,f)}});function et(e,t){return Je(e,t,"left")}var tt=n(891),nt=n(6044);const rt=(0,p.op)({maxPool3d_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[1,1,1],n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0,a=arguments.length>4?arguments[4]:void 0,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NDHWC";const o=(0,c.YT)(e,"x","maxPool3d");let i=o,p=!1;4===o.rank&&(p=!0,i=(0,I.t)(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),d.vA(5===i.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${i.rank}.`)),d.vA("NDHWC"===s,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`)),(0,N.s_)("maxPool3d",r,a);const h={x:i},f={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s},m=l.T2.runKernel(u.ySp,h,f);return p?(0,I.t)(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}});const at=(0,p.op)({maxPoolWithArgmax_:function(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];const s={x:(0,c.YT)(e,"x","maxPoolWithArgmax")},o={filterSize:t,strides:n,pad:r,includeBatchInIndex:a},i=l.T2.runKernel(u.TL8,s,o);return{result:i[0],indexes:i[1]}}});var st=n(2131),ot=n(3015),it=n(4616),lt=n(9494);function ut(e,t){let{indexing:n="xy"}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if("xy"!==n&&"ij"!==n)throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(void 0===e)return[];let r=(0,c.YT)(e,"x","meshgrid",e instanceof lt.qY?e.dtype:"float32");if(void 0===t)return[r];let a=(0,c.YT)(t,"y","meshgrid",t instanceof lt.qY?t.dtype:"float32");const s=(0,d.Ze)(r.shape),o=(0,d.Ze)(a.shape);return"xy"===n?(r=(0,I.t)(r,[1,-1]),a=(0,I.t)(a,[-1,1]),[(0,$.N)((0,it.S)([o,1],r.dtype),r),(0,$.N)(a,(0,it.S)([1,s],a.dtype))]):(r=(0,I.t)(r,[-1,1]),a=(0,I.t)(a,[1,-1]),[(0,$.N)(r,(0,it.S)([1,o],r.dtype)),(0,$.N)((0,it.S)([s,1],a.dtype),a)])}var ct=n(1465),dt=n(6561),pt=n(4252),ht=n(3617),ft=n(9235),mt=n(7738),gt=n(7951);const yt=(0,p.op)({moments_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];e=(0,c.YT)(e,"x","moments");const r=(0,d.Y6)(t,e.shape),a=(0,ot.i)(e,r,n);let s=a.shape;n||(s=(0,ft.SM)(a.shape,r));const o=(0,mt.E)((0,gt.j)((0,T.w)(e,"float32"),(0,I.t)(a,s)));return{mean:a,variance:(0,ot.i)(o,r,n)}}});const bt=(0,p.op)({multiRNNCell_:function(e,t,n,r){const a=(0,c.YT)(t,"data","multiRNNCell"),s=(0,c.j1)(n,"c","multiRNNCell"),o=(0,c.j1)(r,"h","multiRNNCell");let i=a;const l=[];for(let c=0;c<e.length;c++){const t=e[c](i,s[c],o[c]);l.push(t[0]),l.push(t[1]),i=t[1]}const u=[],d=[];for(let c=0;c<l.length;c+=2)u.push(l[c]),d.push(l[c+1]);return[u,d]}});const vt=(0,p.op)({multinomial_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const a=(0,c.YT)(e,"logits","multinomial"),s=a.size,o=a.rank;if(s<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${s}.`);if(o>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${o}`);n=n||Math.random();const i={logits:1===o?(0,I.t)(a,[1,-1]):a},d={numSamples:t,seed:n,normalized:r},p=l.T2.runKernel(u.WT3,i,d);return 1===o?(0,I.t)(p,[p.size]):p}});var xt=n(1011),kt=n(135),wt=n(6865),St=n(4100);const Tt=(0,p.op)({outerProduct_:function(e,t){const n=(0,c.YT)(e,"v1","outerProduct"),r=(0,c.YT)(t,"v2","outerProduct");d.vA(1===n.rank&&1===r.rank,(()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`));const a=(0,I.t)(n,[-1,1]),s=(0,I.t)(r,[1,-1]);return(0,$.N)(a,s)}});var Nt=n(5048);const It=(0,p.op)({pad1d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return(0,d.vA)(2===t.length,(()=>"Invalid number of paddings. Must be length of 2.")),(0,Nt.e)(e,[t],n)}});const Ct=(0,p.op)({pad2d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return(0,d.vA)(2===t.length&&2===t[0].length&&2===t[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),(0,Nt.e)(e,t,n)}});const Et=(0,p.op)({pad3d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return(0,d.vA)(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),(0,Nt.e)(e,t,n)}});const $t=(0,p.op)({pad4d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return(0,d.vA)(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),(0,Nt.e)(e,t,n)}});var At=n(7751),_t=n(7587),Rt=n(9855),Ft=n(6574),Ot=n(9556);const Dt=(0,p.op)({raggedGather_:function(e,t,n,r){const a={paramsNestedSplits:e.map(((e,t)=>(0,c.YT)(e,`tensors${t}`,"raggedGather","int32"))),paramsDenseValues:(0,c.YT)(t,"paramsDenseValues","raggedGather"),indices:(0,c.YT)(n,"indices","raggedGather","int32")},s={outputRaggedRank:r},o=l.T2.runKernel(u.oJ2,a,s);return{outputNestedSplits:o.slice(0,o.length-1),outputDenseValues:o[o.length-1]}}});const Mt=(0,p.op)({raggedRange_:function(e,t,n){const r=(0,c.YT)(e,"starts","raggedRange"),a={starts:r,limits:(0,c.YT)(t,"limits","raggedRange",r.dtype),deltas:(0,c.YT)(n,"deltas","raggedRange",r.dtype)},s=l.T2.runKernel(u.CQC,a);return{rtNestedSplits:s[0],rtDenseValues:s[1]}}});const Pt=(0,p.op)({raggedTensorToTensor_:function(e,t,n,r,a){const s=(0,c.YT)(e,"shape","raggedTensorToTensor","int32"),o=(0,c.YT)(t,"values","raggedTensorToTensor"),i={shape:s,values:o,defaultValue:(0,c.YT)(n,"defaultValue","raggedTensorToTensor",o.dtype),rowPartitionTensors:r.map(((e,t)=>(0,c.YT)(e,`tensors${t}`,"raggedTensorToTensor","int32")))},d={rowPartitionTypes:a};return l.T2.runKernel(u.mH5,i,d)}});const Lt=(0,p.op)({rand_:function(e,t,n){(0,d.SA)(e);const r=(0,d.Ze)(e);let a=null;if(null==n||"float32"===n)a=new Float32Array(r);else if("int32"===n)a=new Int32Array(r);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);a=new Uint8Array(r)}for(let s=0;s<r;s++)a[s]=t();return l.T2.makeTensor(a,e,n)}});var zt=n(4334);class Bt{constructor(e,t,n,r,a){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const s=a||Math.random();this.random=zt.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,a,s;do{r=2*this.random()-1,a=2*this.random()-1,s=r*r+a*a}while(s>=1||0===s);const o=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*r*o,t=this.mean+this.stdDev*a*o,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class Vt{constructor(e,t,n,r){this.alpha=e,this.beta=1/t,this.dtype=n;const a=r||Math.random();this.randu=zt.alea(a.toString()),this.randn=new Bt(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,a,s;for(;;){do{r=this.randn.nextValue(),s=1+this.c*r}while(s<=0);if(s*=s*s,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-s+Math.log(s)),a=this.randu(),a<t||Math.log(a)<n)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class Wt{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0;if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"===typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=zt.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const Ut=(0,p.op)({randomGamma_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32",a=arguments.length>4?arguments[4]:void 0;if((0,d.SA)(e),null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error(`Unsupported data type ${r}`);const s=new Vt(t,n,r,a),o=(0,G.r)(e,r);for(let i=0;i<o.values.length;i++)o.values[i]=s.nextValue();return o.toTensor()}});const Gt=(0,p.op)({randomNormal_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3?arguments[3]:void 0,a=arguments.length>4?arguments[4]:void 0;if((0,d.SA)(e),null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const s=new Bt(t,n,r,!1,a),o=(0,G.r)(e,r);for(let i=0;i<o.values.length;i++)o.values[i]=s.nextValue();return o.toTensor()}});const jt=(0,p.op)({randomStandardNormal_:function(e,t,n){if(null!=t&&"bool"===t)throw new Error(`Unsupported data type ${t}`);return Gt(e,0,1,t,n)}});const Ht=(0,p.op)({randomUniform_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32",a=arguments.length>4?arguments[4]:void 0;(0,d.SA)(e);const s=(0,G.r)(e,r),o=new Wt(t,n,null,a);for(let i=0;i<s.values.length;i++)s.values[i]=o.nextValue();return s.toTensor()}});const Yt=(0,p.op)({randomUniformInt_:function(e,t,n,r){return Ht(e,t,n,"int32",r)}});function qt(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32";if(0===n)throw new Error("Cannot have a step of zero");const a={start:e,stop:t,step:n,dtype:r};return l.T2.runKernel(u.Q6t,{},a)}var Kt=n(9477),Xt=n(6309),Zt=n(5251),Qt=n(9721),Jt=n(7419);const en=(0,p.op)({reverse1d_:function(e){const t=(0,c.YT)(e,"x","reverse");return d.vA(1===t.rank,(()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`)),(0,Jt.B)(t,0)}});const tn=(0,p.op)({reverse2d_:function(e,t){const n=(0,c.YT)(e,"x","reverse");return d.vA(2===n.rank,(()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`)),(0,Jt.B)(n,t)}});const nn=(0,p.op)({reverse3d_:function(e,t){const n=(0,c.YT)(e,"x","reverse");return d.vA(3===n.rank,(()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`)),(0,Jt.B)(n,t)}});const rn=(0,p.op)({reverse4d_:function(e,t){const n=(0,c.YT)(e,"x","reverse");return d.vA(4===n.rank,(()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`)),(0,Jt.B)(n,t)}});var an=n(6509),sn=n(6777),on=n(1997),ln=n(2022),un=n(3117);const cn=async function(e,t){const n=(0,c.YT)(e,"x","setdiff1d"),r=(0,c.YT)(t,"y","setdiff1d");d.vA(n.dtype===r.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`)),d.vA(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),d.vA(1===r.rank,(()=>`y should be 1D tensor, but got y (${r.shape}).`));const a=await n.data(),s=await r.data(),o=new Set(s);let i=0;for(let c=0;c<a.length;c++)o.has(a[c])||i++;const l=new lt.yl([i],n.dtype),u=new lt.yl([i],"int32");for(let c=0,d=0;c<a.length;c++)o.has(a[c])||(l.values[d]=a[c],u.values[d]=c,d++);return[l.toTensor(),u.toTensor()]};var dn=n(5740),pn=n(9519),hn=n(8143);const fn=(0,p.op)({slice1d_:function(e,t,n){const r=(0,c.YT)(e,"x","slice1d");return d.vA(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),(0,R.d)(r,[t],[n])}});const mn=(0,p.op)({slice2d_:function(e,t,n){const r=(0,c.YT)(e,"x","slice2d");return d.vA(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),(0,R.d)(r,t,n)}});const gn=(0,p.op)({slice3d_:function(e,t,n){const r=(0,c.YT)(e,"x","slice3d");return d.vA(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),(0,R.d)(r,t,n)}});const yn=(0,p.op)({slice4d_:function(e,t,n){const r=(0,c.YT)(e,"x","slice4d");return d.vA(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),(0,R.d)(r,t,n)}});var bn=n(6719),vn=n(9973),xn=n(3585),kn=n(3062),wn=n(1405),Sn=n(7307),Tn=n(9486),Nn=n(5181),In=n(191),Cn=n(208),En=n(613),$n=n(901),An=n(319),_n=n(1231),Rn=n(7382),Fn=n(4894),On=n(8032),Dn=n(9914);function Mn(e,t){(0,d.HO)(e);const n=(0,c.MZ)(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return(0,Dn.Q)(e,null,n,t)}function Pn(e,t,n){if((0,d.HO)(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=(0,c.MZ)(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return(0,Dn.Q)(e,t,r,n)}var Ln=n(5395);function zn(e,t,n){if((0,d.HO)(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const r=(0,c.MZ)(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return(0,Dn.Q)(e,t,r,n)}function Bn(e,t,n){if((0,d.HO)(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const r=(0,c.MZ)(e,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return(0,Dn.Q)(e,t,r,n)}function Vn(e,t,n){if((0,d.HO)(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const r=(0,c.MZ)(e,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||r,(0,Dn.Q)(e,t,r,n)}var Wn=n(4083);const Un=(0,p.op)({tensorScatterUpdate_:function(e,t,n){const r=(0,c.YT)(e,"tensor","tensorScatterupdate"),a=(0,c.YT)(t,"indices","tensorScatterupdate","int32"),s=(0,c.YT)(n,"updates","tensorScatterupdate");if(Wn.validateInput(s,a,r.shape),r.dtype!==s.dtype)throw new Error(`tensor and updates must have the same dtype, instead they are ${r.dtype} and ${s.dtype}.`);const o={tensor:r,indices:a,updates:s};return l.T2.runKernel(u.X4r,o,{})}});var Gn=n(2765);const jn=(0,p.op)({truncatedNormal_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3?arguments[3]:void 0,a=arguments.length>4?arguments[4]:void 0;if((0,d.SA)(e),null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const s=new Bt(t,n,r,!0,a),o=(0,G.r)(e,r);for(let i=0;i<o.values.length;i++)o.values[i]=s.nextValue();return o.toTensor()}});var Hn=n(9694),Yn=n(5149),qn=n(3984);function Kn(e,t){return Je(e,t,"right")}function Xn(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0;return l.T2.makeVariable(e,t,n,r)}var Zn=n(3986),Qn=n(9286);const Jn=async function(e){const t=(0,c.YT)(e,"condition","whereAsync","bool"),n=await t.data(),r=(0,Qn.Y)(t.shape,n);return e!==t&&t.dispose(),r};var er=n(4218),tr=n(3290);const nr=async function(e,t,n){const r=(0,c.YT)(e,"tensor","boolMask"),a=(0,c.YT)(t,"mask","boolMask","bool"),s=null==n?0:n,o=a.rank,i=r.shape;d.vA(o>0,(()=>"mask cannot be scalar")),d.O3(i.slice(s,s+o),a.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let c=s;c<s+o;c++)l*=i[c];const u=i.slice(0,s).concat([l],i.slice(s+o)),p=(0,I.t)(r,u),h=(0,I.t)(a,[-1]),f=await Jn(h),m=(0,En.r)(f,[1]),g=(0,_e.k)(p,m,s);return e!==r&&r.dispose(),t!==a&&a.dispose(),m.dispose(),p.dispose(),h.dispose(),f.dispose(),g};var rr=n(2154),ar=n(2155),sr=n(8804);const or=(0,p.op)({movingAverage_:function(e,t,n,r){let a=!(arguments.length>4&&void 0!==arguments[4])||arguments[4];const s=(0,c.YT)(e,"v","movingAverage"),o=(0,c.YT)(t,"x","movingAverage"),l=(0,c.YT)(n,"decay","movingAverage");(0,sr.assertTypesMatch)(s,o),d.vA(d.r1(s.shape,o.shape),(()=>"Shape mismatch in v and x"));const u=(0,on.d)(1),p=(0,gt.j)(u,l);let h=(0,A.l)((0,gt.j)(o,s),p);if(a){d.vA(null!=r,(()=>"When using zeroDebias: true, step is required."));const e=(0,c.YT)(r,"step","movingAverage");h=(0,fe.y)(h,(0,gt.j)(u,(0,_t.n)(l,e)))}return(0,i.W)(s,h)}});const ir=(0,p.op)({scatterND_:function(e,t,n){(0,d.SA)(n);const r=(0,c.YT)(e,"indices","scatterND","int32"),a=(0,c.YT)(t,"updates","scatterND");Wn.validateInput(a,r,n);const s={indices:r,updates:a},o={shape:n};return l.T2.runKernel(u.pJc,s,o)}});const lr=(0,p.op)({sparseToDense_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;(0,d.SA)(n);const a=(0,c.YT)(e,"sparseIndices","sparseToDense","int32"),s=(0,c.YT)(t,"sparseValues","sparseToDense","string_or_numeric"),o=(0,c.YT)(r,"defaultValue","sparseToDense",s.dtype);!function(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const a=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(n.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${s}.`);const o=t.size;if(0!==t.rank&&(1!==t.rank||o!==a))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${a}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(a,s,n,o);const i={sparseIndices:a,sparseValues:s,defaultValue:o},p={outputShape:n};return l.T2.runKernel(u.jgd,i,p)}});const ur=(0,p.op)({gatherND_:function(e,t){const n=(0,c.YT)(t,"indices","gatherND","int32"),r={params:(0,c.YT)(e,"x","gatherND","string_or_numeric"),indices:n};return l.T2.runKernel(u.O4G,r)}});const cr=(0,p.op)({dropout_:function(e,t,n,r){const a=(0,c.YT)(e,"x","dropout");if(d.vA("float32"===a.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${a.dtype} tensor instead.`)),d.vA(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof lt.qY?a.clone():a;const s=function(e,t){if(null==t)return e.shape.slice();if(d.r1(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(a,n),o=1-t,l=(0,fe.y)((0,$e.R)((0,i.W)(Ht(s,0,1,"float32",r),o)),o);return(0,A.l)(a,l)}});function dr(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function pr(e,t,n){const r=1-e%2,a=new Float32Array(e);for(let s=0;s<e;++s){const o=2*Math.PI*s/(e+r-1);a[s]=t-n*Math.cos(o)}return Mn(a,"float32")}const hr=async function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;const r=(0,c.YT)(e,"predictions","inTopK"),a=(0,c.YT)(t,"targets","inTopK");(0,d.vA)(r.rank>1,(()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`)),(0,d.vA)(r.rank-1===a.rank,(()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${a.rank}`)),(0,d.O3)(r.shape.slice(0,r.shape.length-1),a.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const s=r.shape[r.shape.length-1];(0,d.vA)(n>0&&n<=s,(()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${n}`));const o=await r.data(),i=await a.data(),[l,u]=[o.length/s,s],p=(0,d.ce)("bool",l);for(let c=0;c<l;c++){const e=c*u,t=o.subarray(e,e+u),r=[];for(let n=0;n<t.length;n++)r.push({value:t[n],index:n});r.sort(((e,t)=>t.value-e.value)),p[c]=0;for(let a=0;a<n;a++)if(r[a].index===i[c]){p[c]=1;break}}return e!==r&&r.dispose(),t!==a&&a.dispose(),(0,On.O)(p,a.shape,"bool")};var fr=n(1839),mr=n(8805),gr=n(6927),yr=n(1565),br=n(7905);const vr=(0,p.op)({fusedConv2d_:function(e){let{x:t,filter:n,strides:r,pad:a,dataFormat:s="NHWC",dilations:o=[1,1],dimRoundingMode:p,bias:h,activation:f="linear",preluActivationWeights:m,leakyreluAlpha:g}=e;if(f=f||"linear",!1===(0,br.zE)(l.T2.state.gradientDepth,f)){d.vA("NHWC"===s,(()=>`Error in fused conv2d: got dataFormat of ${s} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`));let e=(0,ee.X)(t,n,r,a,s,o,p);return null!=h&&(e=(0,i.W)(e,h)),(0,br.f2)(e,f,m,g)}const y=(0,c.YT)(t,"x","conv2d","float32"),b=(0,c.YT)(n,"filter","conv2d","float32");let v=y,x=!1;3===y.rank&&(x=!0,v=(0,I.t)(y,[1,y.shape[0],y.shape[1],y.shape[2]])),d.vA(4===v.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${v.rank}.`)),d.vA(4===b.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${b.rank}.`)),N.s_("fused conv2d",a,p);const k="NHWC"===s?v.shape[3]:v.shape[1];d.vA(b.shape[2]===k,(()=>`Error in conv2d: depth of input (${k}) must match input depth for filter ${b.shape[2]}.`)),d.vA(N.G0(r,o),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${r} and dilations '${o}'`));const w=N.uf(v.shape,b.shape,r,o,a,p);let S,T;if(null!=h&&(S=(0,c.YT)(h,"bias","fused conv2d"),[S]=(0,sr.makeTypesMatch)(S,y),"NHWC"===s?mr.assertAndGetBroadcastShape(w.outShape,S.shape):(d.vA(S.shape.length<=1,(()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${S.shape.length}.`)),d.vA(0===S.shape.length||S.shape[0]===w.outChannels||1===S.shape[0],(()=>`Error in fused conv2d: bias shape (${S.shape}) is not compatible with the number of output channels (${w.outChannels})`)))),null!=m){const e=m.shape;if(d.vA(e.length<=1||3===e.length,(()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${e.length}.`)),1===e.length)d.vA(1===e[0]||e[0]===w.outChannels,(()=>`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the number of output channels (${w.outChannels}).`));else if(3===e.length)try{mr.assertAndGetBroadcastShape(e,w.outShape)}catch(A){const t=`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the output shape of the conv2d (${w.outShape}).`;throw Error(t)}T=(0,c.YT)(m,"prelu weights","fused conv2d")}const C=(e,t)=>{d.vA("NHWC"===s,(()=>`Error in gradient of fused conv2D: got dataFormat of ${s} but only NHWC is currently supported.`));const[n,i,l,u]=t,c=(0,br.XB)(e,l,f);d.vA(N.Dh(o),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${o}'`));const p=[(0,yr.v)(i.shape,c,n,r,a),(0,gr.H)(i,c,n.shape,r,a)];if(null!=u){const e=(0,br.Do)(u,c);p.push(e)}return p},E={x:v,filter:b,bias:S,preluActivationWeights:T},$={strides:r,pad:a,dataFormat:s,dilations:o,dimRoundingMode:p,activation:f,leakyreluAlpha:g};if(null==h){const e=(0,fr._X)(((e,t,n)=>{let r=l.T2.runKernel(u.aAr,E,$);return n([t,e,r]),x&&(r=(0,I.t)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:C}}));return e(v,b)}{const e=(0,fr._X)(((e,t,n,r)=>{let a=l.T2.runKernel(u.aAr,E,$);return r([t,e,a,n]),x&&(a=(0,I.t)(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:C}}));return e(v,b,S)}}});var xr=n(7399),kr=n(261);const wr=(0,p.op)({fusedDepthwiseConv2d_:function(e){let{x:t,filter:n,strides:r,pad:a,dataFormat:s="NHWC",dilations:o=[1,1],dimRoundingMode:p,bias:h,activation:f="linear",preluActivationWeights:m,leakyreluAlpha:g}=e;if(!1===(0,br.zE)(l.T2.state.gradientDepth,f)){let e=(0,de.G)(t,n,r,a,s,o,p);return null!=h&&(e=(0,i.W)(e,h)),(0,br.f2)(e,f,m,g)}const y=(0,c.YT)(t,"x","depthwiseConv2d","float32"),b=(0,c.YT)(n,"filter","depthwiseConv2d","float32");let v=y,x=!1;3===y.rank&&(x=!0,v=(0,I.t)(y,[1,y.shape[0],y.shape[1],y.shape[2]])),d.vA(4===v.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${v.rank}.`)),d.vA(4===b.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${b.rank}.`)),d.vA(v.shape[3]===b.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${v.shape[3]}) must match the inChannels dimension in filter ${b.shape[2]}.`)),null==o&&(o=[1,1]),d.vA(N.G0(r,o),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${r} and dilations '${o}'`)),N.s_("fused depthwiseConv2d",a,p);const k=N.uf(v.shape,b.shape,r,o,a,p,!0);let w,S;null!=h&&(w=(0,c.YT)(h,"bias","fused conv2d"),[w]=(0,sr.makeTypesMatch)(w,y),mr.assertAndGetBroadcastShape(k.outShape,w.shape)),null!=m&&(S=(0,c.YT)(m,"prelu weights","fused depthwiseConv2d"));const T=(e,t)=>{d.vA(N.Dh(o),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[n,s,i,l]=t,u=(0,br.XB)(e,i,f),c=(0,kr.l)(s.shape,u,n,r,a,o,p),h=(0,xr.x)(s,u,n.shape,r,a,o,p);if(null!=l){return[c,h,(0,br.Do)(w,u)]}return[c,h]},C={x:v,filter:b,bias:w,preluActivationWeights:S},E={strides:r,pad:a,dataFormat:s,dilations:o,dimRoundingMode:p,activation:f,leakyreluAlpha:g};if(null==h){const e=(0,fr._X)(((e,t,n)=>{let r=l.T2.runKernel(u.T7M,C,E);return n([t,e,r]),x&&(r=(0,I.t)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:T}}));return e(v,b)}{const e=(0,fr._X)(((e,t,n,r)=>{let a=l.T2.runKernel(u.T7M,C,E);return r([t,e,a,n]),x&&(a=(0,I.t)(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:T}}));return e(v,b,w)}}});const Sr=(0,p.op)({fusedMatMul_:function(e){let{a:t,b:n,transposeA:r=!1,transposeB:a=!1,bias:s,activation:o="linear",preluActivationWeights:p,leakyreluAlpha:h=.2}=e;if(!1===(0,br.zE)(l.T2.state.gradientDepth,o)){let e=(0,$.N)(t,n,r,a);return null!=s&&(e=(0,i.W)(e,s)),(0,br.f2)(e,o,p,h)}let f=(0,c.YT)(t,"a","fused matMul"),m=(0,c.YT)(n,"b","fused matMul");[f,m]=(0,sr.makeTypesMatch)(f,m);const g=r?f.shape[f.rank-2]:f.shape[f.rank-1],y=a?m.shape[m.rank-1]:m.shape[m.rank-2],b=r?f.shape[f.rank-1]:f.shape[f.rank-2],v=a?m.shape[m.rank-2]:m.shape[m.rank-1],x=f.shape.slice(0,-2),k=m.shape.slice(0,-2),w=d.Ze(x),S=d.Ze(k);d.vA(g===y,(()=>`Error in fused matMul: inner shapes (${g}) and (${y}) of Tensors with shapes ${f.shape} and ${m.shape} and transposeA=${r} and transposeB=${a} must match.`));const T=mr.assertAndGetBroadcastShape(f.shape.slice(0,-2),m.shape.slice(0,-2)).concat([b,v]),N=r?(0,I.t)(f,[w,g,b]):(0,I.t)(f,[w,b,g]),C=a?(0,I.t)(m,[S,v,y]):(0,I.t)(m,[S,y,v]);let E,A;null!=s&&(E=(0,c.YT)(s,"bias","fused matMul"),[E]=(0,sr.makeTypesMatch)(E,f),mr.assertAndGetBroadcastShape(T,E.shape)),null!=p&&(A=(0,c.YT)(p,"prelu weights","fused matMul"));const _=(e,t)=>{const[n,i,l,u]=t,c=(0,br.XB)((0,I.t)(e,l.shape),l,o);let d,p;if(r||a?!r&&a?(d=(0,$.N)(c,i,!1,!1),p=(0,$.N)(c,n,!0,!1)):r&&!a?(d=(0,$.N)(i,c,!1,!0),p=(0,$.N)(n,c,!1,!1)):(d=(0,$.N)(i,c,!0,!0),p=(0,$.N)(c,n,!0,!0)):(d=(0,$.N)(c,i,!1,!0),p=(0,$.N)(n,c,!0,!1)),null!=s){return[d,p,(0,br.Do)(u,c)]}return[d,p]},R={a:N,b:C,bias:E,preluActivationWeights:A},F={transposeA:r,transposeB:a,activation:o,leakyreluAlpha:h};if(null==s){const e=(0,fr._X)(((e,t,n)=>{const r=l.T2.runKernel(u.Dr,R,F);return n([e,t,r]),{value:(0,I.t)(r,T),gradFunc:_}}));return e(N,C)}{const e=(0,fr._X)(((e,t,n,r)=>{const a=l.T2.runKernel(u.Dr,R,F);return r([e,t,a,n]),{value:(0,I.t)(a,T),gradFunc:_}}));return e(N,C,E)}}});const Tr=(0,p.op)({hammingWindow_:function(e){return pr(e,.54,.46)}});const Nr=(0,p.op)({hannWindow_:function(e){return pr(e,.5,.5)}});const Ir=(0,p.op)({frame_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,s=0;const o=[];for(;s+t<=e.size;)o.push((0,R.d)(e,s,t)),s+=n;if(r)for(;s<e.size;){const r=s+t-e.size,i=(0,E.x)([(0,R.d)(e,s,t-r),(0,Ee.G)([r],a)]);o.push(i),s+=n}return 0===o.length?Pn([],[0,t]):(0,I.t)((0,E.x)(o),[o.length,t])}});const Cr=(0,p.op)({stft_:function(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Nr;null==r&&(r=dr(t));const s=Ir(e,t,n),o=(0,A.l)(s,a(t));return(0,Tn.z)(o,r)}});const Er=(0,p.op)({cropAndResize_:function(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"bilinear",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const o=(0,c.YT)(e,"image","cropAndResize"),i=(0,c.YT)(t,"boxes","cropAndResize","float32"),p=(0,c.YT)(n,"boxInd","cropAndResize","int32"),h=i.shape[0];d.vA(4===o.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${o.rank}.`)),d.vA(2===i.rank&&4===i.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${h},4] but had shape ${i.shape}.`)),d.vA(1===p.rank&&p.shape[0]===h,(()=>`Error in cropAndResize: boxInd must be have size [${h}] but had shape ${i.shape}.`)),d.vA(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),d.vA(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),d.vA("bilinear"===a||"nearest"===a,(()=>`method must be bilinear or nearest, but was ${a}`));const f={image:o,boxes:i,boxInd:p},m={method:a,extrapolationValue:s,cropSize:r};return l.T2.runKernel(u.MRQ,f,m)}});const $r=(0,p.op)({flipLeftRight_:function(e){const t=(0,c.YT)(e,"image","flipLeftRight","float32");d.vA(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return l.T2.runKernel(u.BxF,n,{})}});const Ar=(0,p.op)({grayscaleToRGB_:function(e){const t=(0,c.YT)(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];d.vA(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),d.vA(1===r,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`));const a=new Array(t.rank);return a.fill(1,0,n),a[n]=3,(0,Ie.V)(t,a)}});const _r=(0,p.op)({rgbToGrayscale_:function(e){const t=(0,c.YT)(e,"image","RGBToGrayscale"),n=t.rank-1,r=t.shape[n];d.vA(t.rank>=2,(()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${t.rank}.`)),d.vA(3===r,(()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${r}.`));const a=t.dtype,s=(0,T.w)(t,"float32"),o=Mn([.2989,.587,.114]);let i;switch(t.rank){case 2:i=ye("ij,j->i",s,o);break;case 3:i=ye("ijk,k->ij",s,o);break;case 4:i=ye("ijkl,l->ijk",s,o);break;case 5:i=ye("ijklm,m->ijkl",s,o);break;case 6:i=ye("ijklmn,n->ijklm",s,o);break;default:throw new Error("Not a valid tensor rank.")}return i=(0,Te.U)(i,-1),(0,T.w)(i,a)}});const Rr=(0,p.op)({rotateWithOffset_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5;const a=(0,c.YT)(e,"image","rotateWithOffset","float32");d.vA(4===a.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`));const s={image:a},o={radians:t,fillValue:n,center:r};return l.T2.runKernel(u.BK4,s,o)}});function Fr(e,t,n,r,a,s){null==r&&(r=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==s&&(s=0);const o=e.shape[0];return n=Math.min(n,o),d.vA(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),d.vA(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),d.vA(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),d.vA(1===t.rank,(()=>"scores must be a 1D tensor")),d.vA(t.shape[0]===o,(()=>`scores has incompatible shape with boxes. Expected ${o}, but was ${t.shape[0]}`)),d.vA(0<=s&&s<=1,(()=>`softNmsSigma must be in [0, 1], but was '${s}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s}}const Or=(0,p.op)({nonMaxSuppression_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY;const s=(0,c.YT)(e,"boxes","nonMaxSuppression","float32"),o=(0,c.YT)(t,"scores","nonMaxSuppression","float32"),i=Fr(s,o,n,r,a);n=i.maxOutputSize,r=i.iouThreshold,a=i.scoreThreshold;const d={maxOutputSize:n,iouThreshold:r,scoreThreshold:a};return l.T2.runKernel(u.SDM,{boxes:s,scores:o},d)}});var Dr=n(6692);const Mr=async function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY;const s=(0,c.YT)(e,"boxes","nonMaxSuppressionAsync"),o=(0,c.YT)(t,"scores","nonMaxSuppressionAsync"),i=Fr(s,o,n,r,a);n=i.maxOutputSize,r=i.iouThreshold,a=i.scoreThreshold;const l=await Promise.all([s.data(),o.data()]),u=l[0],d=l[1],{selectedIndices:p}=(0,Dr.c7)(u,d,n,r,a);return s!==e&&s.dispose(),o!==t&&o.dispose(),Mn(p,"int32")};const Pr=(0,p.op)({nonMaxSuppressionWithScore_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const o=(0,c.YT)(e,"boxes","nonMaxSuppression"),i=(0,c.YT)(t,"scores","nonMaxSuppression"),d=Fr(o,i,n,r,a,s);n=d.maxOutputSize,r=d.iouThreshold,a=d.scoreThreshold,s=d.softNmsSigma;const p={boxes:o,scores:i},h={maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s},f=l.T2.runKernel(u.e0f,p,h);return{selectedIndices:f[0],selectedScores:f[1]}}});const Lr=async function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const o=(0,c.YT)(e,"boxes","nonMaxSuppressionAsync"),i=(0,c.YT)(t,"scores","nonMaxSuppressionAsync"),l=Fr(o,i,n,r,a,s);n=l.maxOutputSize,r=l.iouThreshold,a=l.scoreThreshold,s=l.softNmsSigma;const u=await Promise.all([o.data(),i.data()]),d=u[0],p=u[1],{selectedIndices:h,selectedScores:f}=(0,Dr.ut)(d,p,n,r,a,s);return o!==e&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:Mn(h,"int32"),selectedScores:Mn(f)}};const zr=(0,p.op)({nonMaxSuppressionPadded_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const o=(0,c.YT)(e,"boxes","nonMaxSuppression"),i=(0,c.YT)(t,"scores","nonMaxSuppression"),d=Fr(o,i,n,r,a,null),p={boxes:o,scores:i},h={maxOutputSize:d.maxOutputSize,iouThreshold:d.iouThreshold,scoreThreshold:d.scoreThreshold,padToMaxOutputSize:s},f=l.T2.runKernel(u.Zl4,p,h);return{selectedIndices:f[0],validOutputs:f[1]}}});const Br=async function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const o=(0,c.YT)(e,"boxes","nonMaxSuppressionAsync"),i=(0,c.YT)(t,"scores","nonMaxSuppressionAsync"),l=Fr(o,i,n,r,a,null),u=l.maxOutputSize,d=l.iouThreshold,p=l.scoreThreshold,[h,f]=await Promise.all([o.data(),i.data()]),{selectedIndices:m,validOutputs:g}=(0,Dr.ZS)(h,f,u,d,p,s);return o!==e&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:Mn(m,"int32"),validOutputs:(0,on.d)(g,"int32")}};var Vr=n(2214),Wr=n(2823);const Ur=(0,p.op)({threshold_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"binary",n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5;const a=(0,c.YT)(e,"image","threshold"),s=a.shape[0]*a.shape[1];let o,l,u,p,h=(0,A.l)(Mn([r]),255);if(d.vA(3===a.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${a.rank}.`)),d.vA(3===a.shape[2]||1===a.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${a.shape[2]}.`)),d.vA("int32"===a.dtype||"float32"===a.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${a.dtype}.`)),d.vA("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===a.shape[2]){[o,l,u]=(0,Nn.l)(a,[1,1,1],-1);const e=(0,A.l)(o,.2989),t=(0,A.l)(l,.587),n=(0,A.l)(u,.114);p=(0,i.W)((0,i.W)(e,t),n)}else p=e;if("otsu"===t){h=function(e,t){let n,r,a,s,o,l,u=Mn([-1]),c=Mn([0]),d=Mn([0]);for(let p=0;p<e.size-1;p++){n=(0,R.d)(e,0,p+1),r=(0,R.d)(e,p+1),o=(0,fe.y)((0,Rn.c)(n),t),l=(0,fe.y)((0,Rn.c)(r),t);const h=(0,Rn.c)((0,A.l)(n,qt(0,n.size)));a=(0,fe.y)(h,(0,Rn.c)(n));const f=(0,Ee.G)(r.shape,n.size),m=(0,i.W)(qt(0,r.size),f),g=(0,A.l)(r,m);s=(0,fe.y)((0,Rn.c)(g),(0,Rn.c)(r));const y=(0,gt.j)(a,s),b=(0,gt.j)(a,s),v=(0,A.l)(o,l);d=(0,A.l)((0,A.l)(v,y),b);const x=(0,Re.r)(d,c);c=(0,Zn._)(x,d,c),u=(0,Zn._)(x,Mn([p]),u)}return u}(B((0,T.w)((0,an.L)(p),"int32"),(0,On.O)([]),256),s)}const f=n?(0,Be.I)(p,h):(0,Re.r)(p,h);return(0,T.w)((0,A.l)(f,255),"int32")}});const Gr=(0,p.op)({transform_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"nearest",r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"constant",a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,s=arguments.length>5?arguments[5]:void 0;const o=(0,c.YT)(e,"image","transform","float32"),i=(0,c.YT)(t,"transforms","transform","float32");d.vA(4===o.rank,(()=>`Error in transform: image must be rank 4,but got rank ${o.rank}.`)),d.vA(2===i.rank&&(i.shape[0]===o.shape[0]||1===i.shape[0])&&8===i.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),d.vA(null==s||2===s.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`));const p={image:o,transforms:i},h={interpolation:n,fillMode:r,fillValue:a,outputShape:s};return l.T2.runKernel(u.dLy,p,h)}});const jr=(0,p.op)({bandPart_:function(e,t,n){const r=(0,c.YT)(e,"a","bandPart");(0,d.vA)(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const a=r.shape,[s,o]=r.shape.slice(-2);let i,l;"number"===typeof t?((0,d.vA)(t%1===0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),(0,d.vA)(t<=s,(()=>`bandPart(): numLower (${t}) must not be greater than the number of rows (${s}).`)),i=(0,c.YT)(t<0?s:t,"numLower","bandPart")):((0,d.vA)("int32"===t.dtype,(()=>"bandPart(): numLower's dtype must be an int32.")),i=(0,Zn._)((0,ze.M)(t,0),s,(0,dt.B)(t,s))),"number"===typeof n?((0,d.vA)(n%1===0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`)),(0,d.vA)(n<=o,(()=>`bandPart(): numUpper (${n}) must not be greater than the number of columns (${o}).`)),l=(0,c.YT)(n<0?o:n,"numUpper","bandPart")):((0,d.vA)("int32"===n.dtype,(()=>"bandPart(): numUpper's dtype must be an int32.")),l=(0,Zn._)((0,ze.M)(n,0),o,(0,dt.B)(n,o)));const u=(0,I.t)(qt(0,s,1,"int32"),[-1,1]),p=qt(0,o,1,"int32"),h=(0,gt.j)(u,p),f=(0,qe.n)((0,Be.I)(h,i),(0,Fe.D)(h,(0,xt.H)(l))),m=(0,er.U)([s,o],r.dtype);return(0,I.t)((0,$n.t)((0,qn.K)((0,I.t)(r,[-1,s,o])).map((e=>(0,Zn._)(f,e,m)))),a)}});const Hr=(0,p.op)({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,(0,d.vA)(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)(0,d.vA)(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=(0,Nn.l)(e,e.shape[0],0).map((e=>(0,En.r)(e,[0])));(0,d.vA)(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],r=e;for(let a=0;a<e.length;++a)n.push(l.T2.tidy((()=>{let e=r[a];if(a>0)for(let t=0;t<a;++t){const r=(0,A.l)((0,Rn.c)((0,A.l)(n[t],e)),n[t]);e=(0,gt.j)(e,r)}return(0,fe.y)(e,(0,ar.x)(e,"euclidean"))})));return t?(0,$n.t)(n,0):n}});var Yr=n(8046);function qr(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return l.T2.tidy((()=>{(0,d.vA)(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],r=e.shape[1];let a=Ce(n),s=(0,Y.o)(e);const o=Pn([[1]],[1,1]);let i=(0,Y.o)(o);const u=n>=r?r:n;for(let e=0;e<u;++e){const t=s,u=i,c=a;[i,s,a]=l.T2.tidy((()=>{const t=(0,R.d)(s,[e,e],[n-e,1]),l=(0,ar.x)(t),u=(0,R.d)(s,[e,e],[1,1]),c=(0,Zn._)((0,Re.r)(u,0),Pn([[-1]]),Pn([[1]])),d=(0,gt.j)(u,(0,A.l)(c,l)),p=(0,fe.y)(t,d);i=1===p.shape[0]?(0,Y.o)(o):(0,E.x)([o,(0,R.d)(p,[1,0],[p.shape[0]-1,p.shape[1]])],0);const h=(0,xt.H)((0,fe.y)((0,$.N)(c,d),l)),f=(0,R.d)(s,[e,0],[n-e,r]),m=(0,A.l)(h,i),g=(0,rr.m)(i);if(0===e)s=(0,gt.j)(f,(0,$.N)(m,(0,$.N)(g,f)));else{const t=(0,gt.j)(f,(0,$.N)(m,(0,$.N)(g,f)));s=(0,E.x)([(0,R.d)(s,[0,0],[e,r]),t],0)}const y=(0,rr.m)(m),b=(0,R.d)(a,[0,e],[n,a.shape[1]-e]);if(0===e)a=(0,gt.j)(b,(0,$.N)((0,$.N)(b,i),y));else{const t=(0,gt.j)(b,(0,$.N)((0,$.N)(b,i),y));a=(0,E.x)([(0,R.d)(a,[0,0],[n,e]),t],1)}return[i,s,a]})),(0,Yr.AS)([t,u,c])}return!t&&n>r&&(a=(0,R.d)(a,[0,0],[n,r]),s=(0,R.d)(s,[0,0],[r,r])),[a,s]}))}const Kr=(0,p.op)({qr_:function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if((0,d.vA)(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return qr(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=(0,qn.K)((0,I.t)(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],s=[];r.forEach((e=>{const[n,r]=qr(e,t);a.push(n),s.push(r)}));return[(0,I.t)((0,$n.t)(a,0),e.shape),(0,I.t)((0,$n.t)(s,0),e.shape)]}}});var Xr=n(1667);const Zr=(0,p.op)({computeWeightedLoss_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Xr.i.SUM_BY_NONZERO_WEIGHTS;const r=(0,c.YT)(e,"losses","computeWeightedLoss");let a=null;null!=t&&(a=(0,c.YT)(t,"weights","computeWeightedLoss"));const s=null==a?r:(0,A.l)(r,a);if(n===Xr.i.NONE)return s;if(n===Xr.i.SUM)return(0,Rn.c)(s);if(n===Xr.i.MEAN){if(null==a)return(0,ot.i)(s);{const e=r.size/a.size,t=(0,fe.y)((0,Rn.c)(s),(0,Rn.c)(a));return e>1?(0,fe.y)(t,(0,on.d)(e)):t}}if(n===Xr.i.SUM_BY_NONZERO_WEIGHTS){if(null==a)return(0,fe.y)((0,Rn.c)(s),(0,on.d)(r.size));{const e=(0,A.l)(a,(0,it.S)(r.shape)),t=(0,T.w)((0,Rn.c)((0,kt.E)(e,(0,on.d)(0))),"float32");return(0,fe.y)((0,Rn.c)(s),t)}}throw Error(`Unknown reduction: ${n}`)}});const Qr=(0,p.op)({absoluteDifference_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Xr.i.SUM_BY_NONZERO_WEIGHTS;const s=(0,c.YT)(e,"labels","absoluteDifference"),o=(0,c.YT)(t,"predictions","absoluteDifference");let i=null;null!=n&&(i=(0,c.YT)(n,"weights","absoluteDifference")),(0,d.O3)(s.shape,o.shape,"Error in absoluteDifference: ");const l=(0,a.t)((0,gt.j)(s,o));return Zr(l,i,r)}});const Jr=(0,p.op)({cosineDistance_:function(e,t,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Xr.i.SUM_BY_NONZERO_WEIGHTS;const s=(0,c.YT)(e,"labels","cosineDistance"),o=(0,c.YT)(t,"predictions","cosineDistance");let i=null;null!=r&&(i=(0,c.YT)(r,"weights","cosineDistance")),(0,d.O3)(s.shape,o.shape,"Error in cosineDistance: ");const l=(0,on.d)(1),u=(0,gt.j)(l,(0,Rn.c)((0,A.l)(s,o),n,!0));return Zr(u,i,a)}});const ea=(0,p.op)({hingeLoss_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Xr.i.SUM_BY_NONZERO_WEIGHTS,a=(0,c.YT)(e,"labels","hingeLoss");const s=(0,c.YT)(t,"predictions","hingeLoss");let o=null;null!=n&&(o=(0,c.YT)(n,"weights","hingeLoss")),(0,d.O3)(a.shape,s.shape,"Error in hingeLoss: ");const i=(0,on.d)(1);a=(0,gt.j)((0,A.l)((0,on.d)(2),a),i);const l=(0,Zt.V)((0,gt.j)(i,(0,A.l)(a,s)));return Zr(l,o,r)}});const ta=(0,p.op)({huberLoss_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Xr.i.SUM_BY_NONZERO_WEIGHTS;const o=(0,c.YT)(e,"labels","huberLoss"),l=(0,c.YT)(t,"predictions","huberLoss");let u=null;null!=n&&(u=(0,c.YT)(n,"weights","huberLoss")),(0,d.O3)(o.shape,l.shape,"Error in huberLoss: ");const p=(0,on.d)(r),h=(0,a.t)((0,gt.j)(l,o)),f=(0,dt.B)(h,p),m=(0,gt.j)(h,f),g=(0,i.W)((0,A.l)((0,on.d)(.5),(0,mt.E)(f)),(0,A.l)(p,m));return Zr(g,u,s)}});const na=(0,p.op)({logLoss_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1e-7,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Xr.i.SUM_BY_NONZERO_WEIGHTS;const s=(0,c.YT)(e,"labels","logLoss"),o=(0,c.YT)(t,"predictions","logLoss");let l=null;null!=n&&(l=(0,c.YT)(n,"weights","logLoss")),(0,d.O3)(s.shape,o.shape,"Error in logLoss: ");const u=(0,on.d)(1),p=(0,on.d)(r),h=(0,xt.H)((0,A.l)(s,(0,Ue.R)((0,i.W)(o,p)))),f=(0,A.l)((0,gt.j)(u,s),(0,Ue.R)((0,i.W)((0,gt.j)(u,o),p))),m=(0,gt.j)(h,f);return Zr(m,l,a)}});const ra=(0,p.op)({meanSquaredError_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Xr.i.SUM_BY_NONZERO_WEIGHTS;const a=(0,c.YT)(e,"labels","meanSquaredError"),s=(0,c.YT)(t,"predictions","meanSquaredError");let o=null;null!=n&&(o=(0,c.YT)(n,"weights","meanSquaredError")),(0,d.O3)(a.shape,s.shape,"Error in meanSquaredError: ");const i=(0,Cn.P)(a,s);return Zr(i,o,r)}});const aa=(0,p.op)({sigmoidCrossEntropy_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Xr.i.SUM_BY_NONZERO_WEIGHTS,o=(0,c.YT)(e,"multiClassLabels","sigmoidCrossEntropy");const l=(0,c.YT)(t,"logits","sigmoidCrossEntropy");let u=null;if(null!=n&&(u=(0,c.YT)(n,"weights","sigmoidCrossEntropy")),(0,d.O3)(o.shape,l.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=(0,on.d)(r),t=(0,on.d)(1),n=(0,on.d)(.5);o=(0,i.W)((0,A.l)(o,(0,gt.j)(t,e)),(0,A.l)(n,e))}const p=function(e,t){const n=(0,c.YT)(e,"labels","sigmoidCrossEntropyWithLogits"),r=(0,c.YT)(t,"logits","sigmoidCrossEntropyWithLogits");(0,d.O3)(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=(0,Zt.V)(r),o=(0,A.l)(r,n),l=(0,Ge.K)((0,Se.o)((0,xt.H)((0,a.t)(r))));return(0,i.W)((0,gt.j)(s,o),l)}(o,l);return Zr(p,u,s)}});const sa=(0,p.op)({softmaxCrossEntropy_:function(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Xr.i.SUM_BY_NONZERO_WEIGHTS,s=(0,c.YT)(e,"onehotLabels","softmaxCrossEntropy");const o=(0,c.YT)(t,"logits","softmaxCrossEntropy");let l=null;if(null!=n&&(l=(0,c.YT)(n,"weights","softmaxCrossEntropy")),(0,d.O3)(s.shape,o.shape,"Error in softmaxCrossEntropy: "),r>0){const e=(0,on.d)(r),t=(0,on.d)(1),n=(0,on.d)(s.shape[1]);s=(0,i.W)((0,A.l)(s,(0,gt.j)(t,e)),(0,fe.y)(e,n))}const u=function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1;if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);const r=(0,fr._X)(((e,t,r)=>{const a=(0,Ye.V)(t,[n],!0),s=(0,gt.j)((0,T.w)(t,"float32"),a);r([e,s]);const o=(0,xt.H)((0,A.l)(s,e));return{value:(0,Rn.c)(o,[n]),gradFunc:(e,t)=>{const[r,a]=t,s=(0,ft.SM)(e.shape,[n]);return[(0,A.l)((0,I.t)(e,s),(0,gt.j)((0,T.w)(r,"float32"),(0,Se.o)(a))),(0,A.l)((0,I.t)(e,s),(0,gt.j)((0,Se.o)(a),(0,T.w)(r,"float32")))]}}}));return r(e,t)}(s,o);return Zr(u,l,a)}});const oa=(0,p.op)({sparseFillEmptyRows_:function(e,t,n,r){const a=(0,c.YT)(e,"indices","sparseFillEmptyRows","int32"),s=(0,c.YT)(t,"values","sparseFillEmptyRows"),o=(0,c.YT)(n,"denseShape","sparseFillEmptyRows","int32"),i=(0,c.YT)(r,"defaultValue","sparseFillEmptyRows",s.dtype);if(2!==a.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${a.shape}`);if(1!==s.rank)throw new Error(`Values should be Tensor1D but received shape ${s.shape}`);if(1!==o.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${o.shape}`);if(0!==i.rank)throw new Error(`Default value should be a scalar but received shape ${i.shape}`);const d={indices:a,values:s,denseShape:o,defaultValue:i},p=l.T2.runKernel(u.C8s,d);return{outputIndices:p[0],outputValues:p[1],emptyRowIndicator:p[2],reverseIndexMap:p[3]}}});const ia=(0,p.op)({sparseReshape_:function(e,t,n){const r=(0,c.YT)(e,"inputIndices","sparseReshape","int32"),a=(0,c.YT)(t,"inputShape","sparseReshape","int32"),s=(0,c.YT)(n,"newShape","sparseReshape","int32");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==a.rank)throw new Error(`Input shape should be Tensor1D but received shape ${a.shape}`);if(1!==s.rank)throw new Error(`New shape should be Tensor1D but received shape ${s.shape}`);const o={inputIndices:r,inputShape:a,newShape:s},i=l.T2.runKernel(u.BoJ,o);return{outputIndices:i[0],outputShape:i[1]}}});const la=(0,p.op)({sparseSegmentMean_:function(e,t,n){const r=(0,c.YT)(e,"data","sparseSegmentMean"),a=(0,c.YT)(t,"indices","sparseSegmentMean","int32"),s=(0,c.YT)(n,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${a.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${s.shape}`);const o={data:r,indices:a,segmentIds:s};return l.T2.runKernel(u.L6G,o)}});const ua=(0,p.op)({sparseSegmentSum_:function(e,t,n){const r=(0,c.YT)(e,"data","sparseSegmentSum"),a=(0,c.YT)(t,"indices","sparseSegmentSum","int32"),s=(0,c.YT)(n,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${a.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${s.shape}`);const o={data:r,indices:a,segmentIds:s};return l.T2.runKernel(u.DvZ,o)}});const ca=(0,p.op)({stringNGrams_:function(e,t,n,r,a,s,o,i){const d=(0,c.YT)(e,"data","stringNGrams","string");if("string"!==d.dtype)throw new Error("Data must be of datatype string");if(1!==d.shape.length)throw new Error(`Data must be a vector, saw: ${d.shape}`);const p=(0,c.YT)(t,"dataSplits","stringNGrams");if("int32"!==p.dtype)throw new Error("Data splits must be of datatype int32");const h={separator:n,nGramWidths:r,leftPad:a,rightPad:s,padWidth:o,preserveShortSequences:i},f={data:d,dataSplits:p},m=l.T2.runKernel(u.YAb,f,h);return{nGrams:m[0],nGramsSplits:m[1]}}});const da=(0,p.op)({stringSplit_:function(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const r=(0,c.YT)(e,"input","stringSplit","string"),a=(0,c.YT)(t,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(0!==a.rank)throw new Error(`Delimiter should be a scalar but received shape ${a.shape}`);const s={skipEmpty:n},o={input:r,delimiter:a},i=l.T2.runKernel(u.iW0,o,s);return{indices:i[0],values:i[1],shape:i[2]}}});const pa=(0,p.op)({stringToHashBucketFast_:function(e,t){const n=(0,c.YT)(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const a={input:n};return l.T2.runKernel(u.$jE,a,r)}});const ha=(0,p.op)({staticRegexReplace_:function(e,t,n){let r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const a=(0,c.YT)(e,"input","staticRegexReplace","string"),s={pattern:t,rewrite:n,replaceGlobal:r};return l.T2.runKernel(u.GZp,{x:a},s)}}),fa={fft:kn.h,ifft:wn.K,rfft:Tn.z,irfft:Sn.g},ma={hammingWindow:Tr,hannWindow:Nr,frame:Ir,stft:Cr},ga={flipLeftRight:$r,grayscaleToRGB:Ar,resizeNearestNeighbor:Wr.b,resizeBilinear:Vr.v,rgbToGrayscale:_r,rotateWithOffset:Rr,cropAndResize:Er,nonMaxSuppression:Or,nonMaxSuppressionAsync:Mr,nonMaxSuppressionWithScore:Pr,nonMaxSuppressionWithScoreAsync:Lr,nonMaxSuppressionPadded:zr,nonMaxSuppressionPaddedAsync:Br,threshold:Ur,transform:Gr},ya={bandPart:jr,gramSchmidt:Hr,qr:Kr},ba={absoluteDifference:Qr,computeWeightedLoss:Zr,cosineDistance:Jr,hingeLoss:ea,huberLoss:ta,logLoss:na,meanSquaredError:ra,sigmoidCrossEntropy:aa,softmaxCrossEntropy:sa},va={sparseFillEmptyRows:oa,sparseReshape:ia,sparseSegmentMean:la,sparseSegmentSum:ua},xa={stringNGrams:ca,stringSplit:da,stringToHashBucketFast:pa,staticRegexReplace:ha}},9286:(e,t,n)=>{"use strict";n.d(t,{Y:()=>a});var r=n(259);function a(e,t){const n=[];for(let r=0;r<t.length;r++)t[r]&&n.push(r);const a=(0,r.r)(e,"int32"),s=(0,r.r)([n.length,e.length],"int32");for(let r=0;r<n.length;r++){const t=a.indexToLoc(n[r]),o=r*e.length;s.values.set(t,o)}return s.toTensor()}},9475:(e,t,n)=>{"use strict";n.d(t,{LY:()=>l,f6:()=>o});var r=n(5743),a=n(2312),s=n(5101);const o=(0,a.Z)(((e,t)=>e&t)),i=(0,s.j)(r.BitwiseAnd,o),l={kernelName:r.BitwiseAnd,backendName:"cpu",kernelFunc:i}},9477:(e,t,n)=>{"use strict";n.d(t,{x:()=>o});var r=n(2164),a=n(9554),s=n(4148);const o=(0,n(7892).op)({real_:function(e){const t={input:(0,s.YT)(e,"input","real")};return r.T2.runKernel(a.LRy,t)}})},9486:(e,t,n)=>{"use strict";n.d(t,{z:()=>m});var r=n(1426),a=n(6149),s=n(4429),o=n(1047),i=n(7892),l=n(9477),u=n(5583),c=n(463),d=n(5181),p=n(4218),h=n(3290),f=n(3062);const m=(0,i.op)({rfft_:function(e,t){(0,r.vA)("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const i=e.size/n;let m;if(null!=t&&t<n){const r=e.shape.map((e=>0)),a=e.shape.map((e=>e));a[e.shape.length-1]=t,m=(0,c.d)(e,r,a),n=t}else if(null!=t&&t>n){const r=e.shape.map((e=>e));r[e.shape.length-1]=t-n,m=(0,s.x)([e,(0,p.U)(r)],e.shape.length-1),n=t}else m=e;const g=(0,h.P)(m),y=(0,u.t)((0,a.f)(m,g),[i,n]),b=(0,f.h)(y),v=Math.floor(n/2)+1,x=(0,l.x)(b),k=(0,o.n)(b),w=(0,d.l)(x,[v,n-v],x.shape.length-1),S=(0,d.l)(k,[v,n-v],k.shape.length-1),T=m.shape.slice();return T[m.shape.length-1]=v,(0,u.t)((0,a.f)(w[0],S[0]),T)}})},9494:(e,t,n)=>{"use strict";n.d(t,{qY:()=>b,yl:()=>d,rT:()=>x,tp:()=>v,B4:()=>y,Q5:()=>g,qP:()=>m});var r=n(7926),a=n(1426);function s(e,t,n,r){const s=(0,a.Ur)(t),i=function(e,t,n,r){const s=(0,a.Ze)(t),i=r[r.length-1],l=new Array(i).fill(0),c=t.length,d="complex64"===n?u(e):e;if(c>1)for(let a=0;a<s/i;a++){const e=a*i;for(let t=0;t<i;t++)l[t]=Math.max(l[t],o(d[e+t],0,n).length)}return l}(e,t,n,s),c=t.length,d=l(e,t,n,s,i),p=["Tensor"];return r&&(p.push(`  dtype: ${n}`),p.push(`  rank: ${c}`),p.push(`  shape: [${t}]`),p.push("  values:")),p.push(d.map((e=>"    "+e)).join("\n")),p.join("\n")}function o(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:(0,a.Kg)(e)?`'${e}'`:"bool"===n?i(e):parseFloat(e.toFixed(7)).toString(),(0,a.av)(r,t)}function i(e){return 0===e?"false":"true"}function l(e,t,n,r,a){let s=!(arguments.length>5&&void 0!==arguments[5])||arguments[5];const c="complex64"===n?2:1,d=t[0],p=t.length;if(0===p){if("complex64"===n){return[o(u(e)[0],0,n)]}return"bool"===n?[i(e[0])]:[e[0].toString()]}if(1===p){if(d>20){const t=3*c;let r=Array.from(e.slice(0,t)),s=Array.from(e.slice((d-3)*c,d*c));return"complex64"===n&&(r=u(r),s=u(s)),["["+r.map(((e,t)=>o(e,a[t],n))).join(", ")+", ..., "+s.map(((e,t)=>o(e,a[d-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?u(e):Array.from(e)).map(((e,t)=>o(e,a[t],n))).join(", ")+"]"]}const h=t.slice(1),f=r.slice(1),m=r[0]*c,g=[];if(d>20){for(let t=0;t<3;t++){const r=t*m,s=r+m;g.push(...l(e.slice(r,s),h,n,f,a,!1))}g.push("...");for(let t=d-3;t<d;t++){const r=t*m,s=r+m;g.push(...l(e.slice(r,s),h,n,f,a,t===d-1))}}else for(let o=0;o<d;o++){const t=o*m,r=t+m;g.push(...l(e.slice(t,r),h,n,f,a,o===d-1))}const y=2===p?",":"";g[0]="["+(d>0?g[0]+y:"");for(let o=1;o<g.length-1;o++)g[o]=" "+g[o]+y;let b=",\n";for(let o=2;o<p;o++)b+="\n";return g[g.length-1]=" "+g[g.length-1]+"]"+(s?"":b),g}function u(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var c=n(8977);class d{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=a.Ze(e),null!=n){const e=n.length;a.vA(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||a.Ab(t,this.size),this.strides=(0,a.Ur)(e)}set(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];0===n.length&&(n=[0]),a.vA(n.length===this.rank,(()=>`The number of provided coordinates (${n.length}) must match the rank (${this.rank})`));const s=this.locToIndex(n);this.values[s]=e}get(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];0===t.length&&(t=[0]);let r=0;for(const s of t){if(s<0||s>=this.shape[r]){const e=`Requested out of range element at ${t}.   Buffer shape=${this.shape}`;throw new Error(e)}r++}let a=t[t.length-1];for(let s=0;s<t.length-1;++s)a+=this.strides[s]*t[s];return this.values[a]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return p().makeTensor(this.values,this.shape,this.dtype)}}let p=null,h=null,f=null;function m(e){p=e}function g(e){h=e}function y(e){f=e}class b{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=a.Ze(e),this.strides=(0,a.Ur)(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return h.buffer(this.shape,this.dtype,e)}bufferSync(){return h.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return(0,a.yw)(this.shape,e,"complex64"===this.dtype)}arraySync(){return(0,a.yw)(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=p().read(this.dataId);if("string"===this.dtype){const n=await e;try{return n.map((e=>c.decodeString(e)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),p().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=p().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>c.decodeString(e)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await p().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),p().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return h.print(this,e)}clone(){return this.throwIfDisposed(),h.clone(this)}toString(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return s(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),h.cast(this,e)}variable(){let e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],t=arguments.length>1?arguments[1]:void 0,n=arguments.length>2?arguments[2]:void 0;return this.throwIfDisposed(),p().makeVariable(this,e,t,n)}}function v(){return(0,r.m)("Tensor",(()=>b))}Object.defineProperty(b,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),v();class x extends b{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!a.r1(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);p().disposeTensor(this),this.dataId=e.dataId,p().incRef(this,null)}dispose(){p().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(x,Symbol.hasInstance,{value:e=>e instanceof b&&null!=e.assign&&e.assign instanceof Function})},9519:(e,t,n)=>{"use strict";n.d(t,{F:()=>o});var r=n(2164),a=n(9554),s=n(4148);const o=(0,n(7892).op)({sin_:function(e){const t={x:(0,s.YT)(e,"x","sin","float32")};return r.T2.runKernel(a.hql,t)}})},9538:function(e,t,n){var r;!function(e,a){function s(e){var t=this;t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],n=(e^=e>>>7)^e<<24,n^=(e=r[a+1&7])^e>>>10,n^=(e=r[a+3&7])^e>>>3,n^=(e=r[a+4&7])^e<<7,e=r[a+7&7],n^=(e^=e<<13)^e<<9,r[a]=n,t.i=a+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function o(e,t){return t.x=e.x.slice(),t.i=e.i,t}function i(e,t){null==e&&(e=+new Date);var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.x&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=i:n.amdD&&n.amdO?void 0===(r=function(){return i}.call(t,n,t,a))||(a.exports=r):this.xorshift7=i}(0,e=n.nmd(e),n.amdD)},9554:(e,t,n)=>{"use strict";n.d(t,{$dB:()=>R,$jE:()=>nn,$zE:()=>_,A1h:()=>M,A8B:()=>Wt,BK4:()=>bn,BLA:()=>Ze,BRl:()=>se,Blb:()=>Ut,BoJ:()=>Ht,BxF:()=>de,C8s:()=>jt,CQC:()=>ft,Cg$:()=>Ae,CwD:()=>Ce,D7i:()=>It,Ddj:()=>Xt,Dr:()=>vn,DvZ:()=>qt,E3$:()=>Se,EkD:()=>i,ElG:()=>he,EwU:()=>dn,FAs:()=>on,FCQ:()=>Tt,FSt:()=>u,Fin:()=>zt,GZp:()=>Qt,HNs:()=>T,Ik2:()=>w,J3C:()=>Mt,JiE:()=>Ot,Jp_:()=>c,KXH:()=>C,L6G:()=>Yt,LB5:()=>N,LDN:()=>Ve,LG0:()=>Ke,LRy:()=>yt,LWX:()=>st,LXA:()=>Fe,M6A:()=>Zt,MRQ:()=>U,Mn0:()=>z,MnK:()=>B,N4F:()=>S,Ncv:()=>dt,O4G:()=>ge,OAQ:()=>xe,ODT:()=>lt,OMN:()=>o,ORI:()=>K,PH8:()=>s,P_L:()=>Nt,Pah:()=>ne,PbM:()=>rn,Q6t:()=>gt,QDP:()=>E,QKF:()=>p,Qgm:()=>te,R23:()=>xt,RMm:()=>fn,RUm:()=>_e,RW8:()=>Oe,RXX:()=>Ue,SDM:()=>nt,SQl:()=>ce,T7M:()=>kn,TBb:()=>ln,TL8:()=>He,TMz:()=>j,TOR:()=>Et,ToN:()=>Le,TyE:()=>f,UcO:()=>Jt,VAI:()=>Be,VCH:()=>b,Vvy:()=>a,WRv:()=>ze,WT3:()=>Qe,WuN:()=>Vt,X$8:()=>Y,X0$:()=>Ne,X4r:()=>At,XQy:()=>wt,XhZ:()=>ye,XmO:()=>J,YAb:()=>en,YVe:()=>Pt,ZgB:()=>pe,Zl4:()=>rt,_s9:()=>ae,aAr:()=>xn,awo:()=>yn,bCz:()=>ut,bP9:()=>Z,cHb:()=>je,cS:()=>v,dFH:()=>Bt,dLy:()=>un,dXR:()=>pn,dv8:()=>ke,e0f:()=>at,epO:()=>h,fUj:()=>vt,g5A:()=>Ye,gC7:()=>L,gIW:()=>we,hVg:()=>Ct,hgw:()=>St,ho8:()=>y,hql:()=>Dt,huO:()=>bt,i5R:()=>fe,iGz:()=>P,iPs:()=>Te,iW0:()=>tn,iuW:()=>sn,jAQ:()=>k,jM4:()=>Pe,jOE:()=>kt,jfg:()=>D,jgd:()=>Kt,jj_:()=>V,jxD:()=>X,kdj:()=>pt,l0G:()=>et,l6P:()=>Rt,lLS:()=>be,lNG:()=>qe,ljI:()=>r,lxb:()=>g,lzr:()=>ve,mH5:()=>mt,mIA:()=>Ie,mM$:()=>it,mnI:()=>Ee,mxL:()=>me,nVu:()=>q,nY8:()=>W,nZd:()=>Re,oFs:()=>an,oJ2:()=>ht,ox3:()=>oe,p2J:()=>F,pJc:()=>$t,pPe:()=>hn,p_m:()=>d,pk0:()=>Q,pnw:()=>gn,pr3:()=>A,pyJ:()=>ct,rFG:()=>Gt,rFm:()=>O,rGP:()=>ue,rsH:()=>re,sDr:()=>ee,t3d:()=>We,tG8:()=>$e,tGH:()=>H,u$b:()=>Ft,u8Z:()=>l,uWl:()=>_t,urI:()=>ot,vI1:()=>Lt,vaV:()=>$,vj7:()=>I,wNW:()=>G,wwC:()=>x,wx0:()=>cn,x7F:()=>Xe,xJ3:()=>mn,xu7:()=>Je,yPW:()=>Me,ySp:()=>Ge,ybN:()=>ie,ybj:()=>le,ylV:()=>tt,zP9:()=>m,zfU:()=>De});const r="Abs",a="Acos",s="Acosh",o="Add",i="AddN",l="All",u="Any",c="ArgMax",d="ArgMin",p="Asin",h="Asinh",f="Atan",m="Atanh",g="Atan2",y="AvgPool",b="AvgPoolGrad",v="AvgPool3D",x="AvgPool3DGrad",k="BatchMatMul",w="BatchToSpaceND",S="Bincount",T="BitwiseAnd",N="BroadcastTo",I="BroadcastArgs",C="Cast",E="Ceil",$="ClipByValue",A="Complex",_="ComplexAbs",R="Concat",F="Conv2D",O="Conv2DBackpropFilter",D="Conv2DBackpropInput",M="Conv3D",P="Conv3DBackpropFilterV2",L="Conv3DBackpropInputV2",z="Cos",B="Cosh",V="Cumprod",W="Cumsum",U="CropAndResize",G="DenseBincount",j="DepthToSpace",H="DepthwiseConv2dNative",Y="DepthwiseConv2dNativeBackpropFilter",q="DepthwiseConv2dNativeBackpropInput",K="Diag",X="Dilation2D",Z="Dilation2DBackpropInput",Q="Dilation2DBackpropFilter",J="Draw",ee="RealDiv",te="Einsum",ne="Elu",re="EluGrad",ae="Erf",se="Equal",oe="Exp",ie="ExpandDims",le="Expm1",ue="FFT",ce="Fill",de="FlipLeftRight",pe="Floor",he="FloorDiv",fe="FusedBatchNorm",me="GatherV2",ge="GatherNd",ye="Greater",be="GreaterEqual",ve="Identity",xe="IFFT",ke="Imag",we="IsFinite",Se="IsInf",Te="IsNan",Ne="LeakyRelu",Ie="Less",Ce="LessEqual",Ee="LinSpace",$e="Log",Ae="Log1p",_e="LogicalAnd",Re="LogicalNot",Fe="LogicalOr",Oe="LogicalXor",De="LogSoftmax",Me="LowerBound",Pe="LRN",Le="LRNGrad",ze="MatrixBandPart",Be="Max",Ve="Maximum",We="MaxPool",Ue="MaxPoolGrad",Ge="MaxPool3D",je="MaxPool3DGrad",He="MaxPoolWithArgmax",Ye="Mean",qe="Min",Ke="Minimum",Xe="MirrorPad",Ze="Mod",Qe="Multinomial",Je="Multiply",et="Neg",tt="NotEqual",nt="NonMaxSuppressionV3",rt="NonMaxSuppressionV4",at="NonMaxSuppressionV5",st="OnesLike",ot="OneHot",it="Pack",lt="PadV2",ut="Pool",ct="Pow",dt="Prelu",pt="Prod",ht="RaggedGather",ft="RaggedRange",mt="RaggedTensorToTensor",gt="Range",yt="Real",bt="Reciprocal",vt="Relu",xt="Reshape",kt="ResizeNearestNeighbor",wt="ResizeNearestNeighborGrad",St="ResizeBilinear",Tt="ResizeBilinearGrad",Nt="Relu6",It="Reverse",Ct="Round",Et="Rsqrt",$t="ScatterNd",At="TensorScatterUpdate",_t="SearchSorted",Rt="Select",Ft="Selu",Ot="Slice",Dt="Sin",Mt="Sinh",Pt="Sign",Lt="Sigmoid",zt="Softplus",Bt="Sqrt",Vt="Sum",Wt="SpaceToBatchND",Ut="SplitV",Gt="Softmax",jt="SparseFillEmptyRows",Ht="SparseReshape",Yt="SparseSegmentMean",qt="SparseSegmentSum",Kt="SparseToDense",Xt="SquaredDifference",Zt="Square",Qt="StaticRegexReplace",Jt="StridedSlice",en="StringNGrams",tn="StringSplit",nn="StringToHashBucketFast",rn="Sub",an="Tan",sn="Tanh",on="Tile",ln="TopK",un="Transform",cn="Transpose",dn="Unique",pn="Unpack",hn="UnsortedSegmentSum",fn="UpperBound",mn="ZerosLike",gn="Step",yn="FromPixels",bn="RotateWithOffset",vn="_FusedMatMul",xn="FusedConv2D",kn="FusedDepthwiseConv2D"},9556:(e,t,n)=>{"use strict";n.d(t,{_:()=>i});var r=n(2164),a=n(9554),s=n(4148),o=n(7794);const i=(0,n(7892).op)({prod_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=(0,s.YT)(e,"x","prod");"bool"===i.dtype&&(i=(0,o.w)(i,"int32"));const l={x:i},u={axis:t,keepDims:n};return r.T2.runKernel(a.kdj,l,u)}})},9634:(e,t,n)=>{"use strict";n.d(t,{C1:()=>o,Uc:()=>l});var r=n(5743),a=n(2312),s=n(5101);const o=(0,a.Z)(((e,t)=>Math.floor(e/t))),i=(0,s.j)(r.FloorDiv,o,null,"int32"),l={kernelName:r.FloorDiv,backendName:"cpu",kernelFunc:i}},9694:(e,t,n)=>{"use strict";n.d(t,{A:()=>i});var r=n(2164),a=n(9554),s=n(4148),o=n(1426);const i=(0,n(7892).op)({unique_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=(0,s.YT)(e,"x","unique","string_or_numeric");(0,o.vA)(n.rank>0,(()=>"The input tensor must be at least 1D"));const i={x:n},l={axis:t},[u,c]=r.T2.runKernel(a.EwU,i,l);return{values:u,indices:c}}})},9721:(e,t,n)=>{"use strict";n.d(t,{j:()=>o});var r=n(2164),a=n(9554),s=n(4148);const o=(0,n(7892).op)({relu6_:function(e){const t={x:(0,s.YT)(e,"x","relu6")};return r.T2.runKernel(a.P_L,t)}})},9820:(e,t,n)=>{"use strict";n.d(t,{o:()=>o});var r=n(2164),a=n(9554),s=n(4148);const o=(0,n(7892).op)({clone_:function(e){const t={x:(0,s.YT)(e,"x","clone","string_or_numeric")};return r.T2.runKernel(a.lzr,t)}})},9855:(e,t,n)=>{"use strict";n.d(t,{N:()=>o});var r=n(2164),a=n(9554),s=n(4148);const o=(0,n(7892).op)({prelu_:function(e,t){const n={x:(0,s.YT)(e,"x","prelu"),alpha:(0,s.YT)(t,"alpha","prelu")};return r.T2.runKernel(a.Ncv,n)}})},9864:(e,t,n)=>{"use strict";n.d(t,{UK:()=>u,WQ:()=>l,mx:()=>o});var r=n(5743),a=n(2312),s=n(5101);const o=(0,a.Z)(((e,t)=>e+t)),i=(0,s.B)(((e,t,n,r)=>({real:e+n,imag:t+r}))),l=(0,s.j)(r.Add,o,i),u={kernelName:r.Add,backendName:"cpu",kernelFunc:l}},9868:(e,t,n)=>{"use strict";n.d(t,{W:()=>i,m:()=>o});var r=n(5743),a=n(3143),s=n(2137);function o(e){const{inputs:t,attrs:n,backend:r}=e,{x:o}=t,{perm:i}=n;(0,a.C)(o,"transpose");const l=o.shape.length,u=new Array(l);for(let a=0;a<u.length;a++)u[a]=o.shape[i[a]];const c=r.data.get(o.dataId).values,d=(0,s._)(c,o.shape,o.dtype,i,u);return{dataId:r.write(d,u,o.dtype),shape:u,dtype:o.dtype}}const i={kernelName:r.Transpose,backendName:"cpu",kernelFunc:o}},9870:(e,t,n)=>{"use strict";n.d(t,{k:()=>u});var r=n(4148),a=n(1426),s=n(4969),o=n(7538),i=n(7892),l=n(5583);const u=(0,i.op)({conv1d_:function(e,t,n,i){let u=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NWC",c=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,d=arguments.length>6?arguments[6]:void 0;const p=(0,r.YT)(e,"x","conv1d"),h=(0,r.YT)(t,"filter","conv1d");let f=p,m=!1;2===p.rank&&(m=!0,f=(0,l.t)(p,[1,p.shape[0],p.shape[1]])),a.vA(3===f.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${f.rank}.`)),a.vA(3===h.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${h.rank}.`)),o.s_("conv1d",i,d),a.vA(f.shape[2]===h.shape[1],(()=>`Error in conv1d: depth of input (${f.shape[2]}) must match input depth for filter ${h.shape[1]}.`)),a.vA(o.G0(n,c),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${c}'`)),a.vA(o.qk(c),(()=>"Error in conv1D: Dilated rates should be larger than 0.")),a.vA(o.qk(n),(()=>"Error in conv1D: Stride should be larger than 0.")),a.vA("NWC"===u,(()=>`Error in conv1d: got dataFormat of ${u} but only NWC is currently supported.`));const g=(0,l.t)(h,[1,h.shape[0],h.shape[1],h.shape[2]]),y=(0,l.t)(f,[f.shape[0],1,f.shape[1],f.shape[2]]),b=[1,n],v=[1,c],x=(0,s.X)(y,g,b,i,"NHWC",v,d);return m?(0,l.t)(x,[x.shape[2],x.shape[3]]):(0,l.t)(x,[x.shape[0],x.shape[2],x.shape[3]])}})},9899:(e,t,n)=>{"use strict";n.d(t,{G:()=>c});var r=n(2164),a=n(9554),s=n(4148),o=n(1426),i=n(7538),l=n(7892),u=n(5583);const c=(0,l.op)({depthwiseConv2d_:function(e,t,n,l){let c=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",d=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],p=arguments.length>6?arguments[6]:void 0;const h=(0,s.YT)(e,"x","depthwiseConv2d","float32"),f=(0,s.YT)(t,"filter","depthwiseConv2d","float32");let m=h,g=!1;3===h.rank&&(g=!0,m=(0,u.t)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),o.vA(4===m.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${m.rank}.`)),o.vA(4===f.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${f.rank}.`));const y="NHWC"===c?m.shape[3]:m.shape[1];o.vA(y===f.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${y}) must match the inChannels dimension in filter ${f.shape[2]}.`)),i.s_("depthwiseConv2d",l,p);const b={x:m,filter:f},v={strides:n,pad:l,dataFormat:c,dilations:d,dimRoundingMode:p},x=r.T2.runKernel(a.tGH,b,v);return g?(0,u.t)(x,[x.shape[1],x.shape[2],x.shape[3]]):x}})},9914:(e,t,n)=>{"use strict";n.d(t,{Q:()=>i});var r=n(2164),a=n(8075),s=n(1426),o=n(8977);function i(e,t,n,i){if(null==i)i=(0,s.X$)(e);else if("complex64"===i)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if((0,a.Nw)(e)||(0,a.Oj)(e)){if("float32"!==i&&"int32"!==i)throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${i}.`);return r.T2.backend.createTensorFromGPUData(e,t||n,i)}if(!(0,o.isTypedArray)(e)&&!Array.isArray(e)&&"number"!==typeof e&&"boolean"!==typeof e&&"string"!==typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){(0,s.SA)(t);const e=(0,s.Ze)(t),r=(0,s.Ze)(n);(0,s.vA)(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let a=0;a<n.length;++a){const e=n[a],r=a!==n.length-1||e!==(0,s.Ze)(t.slice(a));(0,s.vA)(n[a]===t[a]||!r,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return(0,o.isTypedArray)(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==i?(0,o.toTypedArray)(e,i):(0,o.flatten)(e,[],!0),r.T2.makeTensor(e,t,i)}},9973:(e,t,n)=>{"use strict";n.d(t,{l:()=>o});var r=n(2164),a=n(9554),s=n(4148);const o=(0,n(7892).op)({softplus_:function(e){const t={x:(0,s.YT)(e,"x","softplus")};return r.T2.runKernel(a.Fin,t)}})},9996:(e,t,n)=>{"use strict";n.d(t,{D:()=>l});var r=n(2164),a=n(9554),s=n(8804),o=n(4148),i=n(8805);const l=(0,n(7892).op)({greaterEqual_:function(e,t){let n=(0,o.YT)(e,"a","greaterEqual","string_or_numeric"),l=(0,o.YT)(t,"b","greaterEqual","string_or_numeric");[n,l]=(0,s.makeTypesMatch)(n,l),(0,i.assertAndGetBroadcastShape)(n.shape,l.shape);const u={a:n,b:l};return r.T2.runKernel(a.lLS,u)}})}},t={};function n(r){var a=t[r];if(void 0!==a)return a.exports;var s=t[r]={id:r,loaded:!1,exports:{}};return e[r].call(s.exports,s,s.exports,n),s.loaded=!0,s.exports}n.m=e,n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.f={},n.e=e=>Promise.all(Object.keys(n.f).reduce(((t,r)=>(n.f[r](e,t),t)),[])),n.u=e=>"static/js/"+e+"."+{453:"6c8d5847",773:"00c87c83",779:"d7182871"}[e]+".chunk.js",n.miniCssF=e=>{},n.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"===typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e={},t="webai-demo:";n.l=(r,a,s,o)=>{if(e[r])e[r].push(a);else{var i,l;if(void 0!==s)for(var u=document.getElementsByTagName("script"),c=0;c<u.length;c++){var d=u[c];if(d.getAttribute("src")==r||d.getAttribute("data-webpack")==t+s){i=d;break}}i||(l=!0,(i=document.createElement("script")).charset="utf-8",i.timeout=120,n.nc&&i.setAttribute("nonce",n.nc),i.setAttribute("data-webpack",t+s),i.src=r),e[r]=[a];var p=(t,n)=>{i.onerror=i.onload=null,clearTimeout(h);var a=e[r];if(delete e[r],i.parentNode&&i.parentNode.removeChild(i),a&&a.forEach((e=>e(n))),t)return t(n)},h=setTimeout(p.bind(null,void 0,{type:"timeout",target:i}),12e4);i.onerror=p.bind(null,i.onerror),i.onload=p.bind(null,i.onload),l&&document.head.appendChild(i)}}})(),n.r=e=>{"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),n.p="/webai-demo/",(()=>{var e={792:0};n.f.j=(t,r)=>{var a=n.o(e,t)?e[t]:void 0;if(0!==a)if(a)r.push(a[2]);else{var s=new Promise(((n,r)=>a=e[t]=[n,r]));r.push(a[2]=s);var o=n.p+n.u(t),i=new Error;n.l(o,(r=>{if(n.o(e,t)&&(0!==(a=e[t])&&(e[t]=void 0),a)){var s=r&&("load"===r.type?"missing":r.type),o=r&&r.target&&r.target.src;i.message="Loading chunk "+t+" failed.\n("+s+": "+o+")",i.name="ChunkLoadError",i.type=s,i.request=o,a[1](i)}}),"chunk-"+t,t)}};var t=(t,r)=>{var a,s,o=r[0],i=r[1],l=r[2],u=0;if(o.some((t=>0!==e[t]))){for(a in i)n.o(i,a)&&(n.m[a]=i[a]);if(l)l(n)}for(t&&t(r);u<o.length;u++)s=o[u],n.o(e,s)&&e[s]&&e[s][0](),e[s]=0},r=self.webpackChunkwebai_demo=self.webpackChunkwebai_demo||[];r.forEach(t.bind(null,0)),r.push=t.bind(null,r.push.bind(r))})(),(()=>{"use strict";var e=n(5043),t=n(4391),r=n(579);const a=function(t){let{onComplete:n}=t;const[a,s]=(0,e.useState)(!1),o=(0,e.useRef)(null);return(0,e.useEffect)((()=>{if(o.current&&o.current.complete&&s(!0),a){const e=setTimeout((()=>{n&&n()}),3e3);return()=>clearTimeout(e)}}),[n,a]),(0,r.jsx)("div",{className:"splash-container",children:(0,r.jsx)("img",{ref:o,src:"/webai-demo/splash-image.jpg",alt:"Splash Screen",className:"splash-image",onLoad:()=>{s(!0)}})})};const s=function(e){let{setActivePage:t}=e;return(0,r.jsxs)("div",{className:"container",children:[(0,r.jsxs)("div",{className:"sidebar",children:[(0,r.jsxs)("div",{className:"sidebar-item active",onClick:()=>t("intro"),children:[(0,r.jsx)("div",{className:"icon",children:(0,r.jsx)("span",{children:"i"})}),(0,r.jsx)("div",{className:"label",children:"Intro"})]}),(0,r.jsxs)("div",{className:"sidebar-item",onClick:()=>t("techstack"),children:[(0,r.jsx)("div",{className:"icon",children:(0,r.jsx)("span",{children:"</>"})}),(0,r.jsx)("div",{className:"label",children:"Tech Stack"})]}),(0,r.jsxs)("div",{className:"sidebar-item",onClick:()=>t("demo"),children:[(0,r.jsx)("div",{className:"icon",children:(0,r.jsx)("span",{children:"\u25b6"})}),(0,r.jsx)("div",{className:"label",children:"Demo"})]})]}),(0,r.jsxs)("div",{className:"main-content",children:[(0,r.jsx)("div",{className:"flow-diagram",children:(0,r.jsxs)("svg",{width:"600",height:"350",viewBox:"0 0 600 350",children:[(0,r.jsx)("rect",{x:"40",y:"110",width:"120",height:"60",rx:"10",ry:"10",fill:"#b8d6f2"}),(0,r.jsx)("text",{x:"100",y:"145",textAnchor:"middle",fill:"black",children:"Camera"}),(0,r.jsx)("rect",{x:"40",y:"230",width:"120",height:"60",rx:"10",ry:"10",fill:"#b8d6f2"}),(0,r.jsx)("text",{x:"100",y:"265",textAnchor:"middle",fill:"black",children:"Image"}),(0,r.jsx)("rect",{x:"230",y:"160",width:"140",height:"80",rx:"10",ry:"10",fill:"#4382c9"}),(0,r.jsx)("text",{x:"300",y:"205",textAnchor:"middle",fill:"white",children:"Frontend"}),(0,r.jsx)("rect",{x:"430",y:"160",width:"140",height:"80",rx:"10",ry:"10",fill:"#7b68b8"}),(0,r.jsx)("text",{x:"500",y:"195",textAnchor:"middle",fill:"white",children:"Cloud"}),(0,r.jsx)("text",{x:"500",y:"215",textAnchor:"middle",fill:"white",children:"model"}),(0,r.jsx)("rect",{x:"240",y:"290",width:"120",height:"60",rx:"10",ry:"10",fill:"#b8d6f2"}),(0,r.jsx)("text",{x:"300",y:"325",textAnchor:"middle",fill:"black",children:"Output"}),(0,r.jsx)("path",{d:"M160,140 C190,140 200,180 230,200",stroke:"#4382c9",strokeWidth:"2",fill:"none"}),(0,r.jsx)("path",{d:"M230,200 L220,195 L220,205 Z",fill:"#4382c9"}),(0,r.jsx)("path",{d:"M160,260 C190,260 200,220 230,200",stroke:"#4382c9",strokeWidth:"2",fill:"none"}),(0,r.jsx)("path",{d:"M230,200 L220,195 L220,205 Z",fill:"#4382c9"}),(0,r.jsx)("path",{d:"M370,200 L430,200",stroke:"#4382c9",strokeWidth:"2",fill:"none"}),(0,r.jsx)("path",{d:"M430,200 L420,195 L420,205 Z",fill:"#4382c9"}),(0,r.jsx)("path",{d:"M300,240 C300,260 300,270 300,290",stroke:"#4382c9",strokeWidth:"2",fill:"none"}),(0,r.jsx)("path",{d:"M300,290 L295,280 L305,280 Z",fill:"#4382c9"})]})}),(0,r.jsxs)("div",{className:"content-text",children:[(0,r.jsx)("h1",{children:"Web AI Hybrid Application Overview"}),(0,r.jsx)("p",{children:"This week, we're exploring a hybrid Web AI application that leverages TensorFlow.js on the frontend, running an object detection model directly in the browser."}),(0,r.jsx)("p",{children:"When an object is detected, the frontend sends the result to a backend server, which:"}),(0,r.jsxs)("ul",{children:[(0,r.jsx)("li",{children:"Stores the API key securely,"}),(0,r.jsx)("li",{children:"Connects to a cloud-based model, and"}),(0,r.jsx)("li",{children:"Returns detailed information about the detected objects."})]}),(0,r.jsx)("h2",{children:"Synthetic Data Generation"}),(0,r.jsx)("p",{children:"This setup allows us to generate fully synthetic data on the fly. Alternatively, you can inject ground truth labels to produce augmented synthetic data."}),(0,r.jsx)("p",{children:"In this demo, the data is streamed to a dynamic card within the application UI. However, in production \u2014 especially with a fixed set of known objects \u2014 this process could be precomputed, allowing you to eliminate the backend entirely."}),(0,r.jsx)("h2",{children:"Customization Potential"}),(0,r.jsx)("p",{children:"The frontend model can also be fine-tuned to detect custom objects beyond the standard COCO dataset, making it adaptable for domain-specific applications."})]})]})]})};const o=function(e){let{setActivePage:t}=e;return(0,r.jsxs)("div",{className:"container",children:[(0,r.jsxs)("div",{className:"sidebar",children:[(0,r.jsxs)("div",{className:"sidebar-item",onClick:()=>t("intro"),children:[(0,r.jsx)("div",{className:"icon",children:(0,r.jsx)("span",{children:"i"})}),(0,r.jsx)("div",{className:"label",children:"Intro"})]}),(0,r.jsxs)("div",{className:"sidebar-item active",onClick:()=>t("techstack"),children:[(0,r.jsx)("div",{className:"icon",children:(0,r.jsx)("span",{children:"</>"})}),(0,r.jsx)("div",{className:"label",children:"Tech Stack"})]}),(0,r.jsxs)("div",{className:"sidebar-item",onClick:()=>t("demo"),children:[(0,r.jsx)("div",{className:"icon",children:(0,r.jsx)("span",{children:"\u25b6"})}),(0,r.jsx)("div",{className:"label",children:"Demo"})]})]}),(0,r.jsx)("div",{className:"main-content",children:(0,r.jsxs)("div",{className:"tech-stack-container",children:[(0,r.jsx)("h1",{children:"Technology Stack"}),(0,r.jsxs)("div",{className:"tech-section",children:[(0,r.jsx)("h2",{children:"Frontend Technologies"}),(0,r.jsxs)("div",{className:"tech-cards",children:[(0,r.jsxs)("div",{className:"tech-card",children:[(0,r.jsx)("h3",{children:"React"}),(0,r.jsx)("p",{children:"Modern JavaScript library for building user interfaces with component-based architecture."})]}),(0,r.jsxs)("div",{className:"tech-card",children:[(0,r.jsx)("h3",{children:"TensorFlow.js"}),(0,r.jsx)("p",{children:"Machine learning framework that runs directly in the browser for client-side inference."})]}),(0,r.jsxs)("div",{className:"tech-card",children:[(0,r.jsx)("h3",{children:"COCO-SSD Model"}),(0,r.jsx)("p",{children:"Pre-trained object detection model capable of identifying 80 different object classes."})]})]})]}),(0,r.jsxs)("div",{className:"tech-section",children:[(0,r.jsx)("h2",{children:"Backend Technologies"}),(0,r.jsxs)("div",{className:"tech-cards",children:[(0,r.jsxs)("div",{className:"tech-card",children:[(0,r.jsx)("h3",{children:"Node.js"}),(0,r.jsx)("p",{children:"JavaScript runtime built on Chrome's V8 engine for building scalable server-side applications."})]}),(0,r.jsxs)("div",{className:"tech-card",children:[(0,r.jsx)("h3",{children:"Express"}),(0,r.jsx)("p",{children:"Fast, unopinionated, minimalist web framework for Node.js to build RESTful APIs."})]}),(0,r.jsxs)("div",{className:"tech-card",children:[(0,r.jsx)("h3",{children:"Google Cloud"}),(0,r.jsx)("p",{children:"Cloud computing services for deploying and scaling the application with managed infrastructure."})]})]})]}),(0,r.jsxs)("div",{className:"tech-section",children:[(0,r.jsx)("h2",{children:"Data Flow"}),(0,r.jsxs)("div",{className:"flow-diagram-ts",children:[(0,r.jsxs)("div",{className:"flow-step",children:[(0,r.jsx)("div",{className:"flow-icon",children:"1"}),(0,r.jsxs)("div",{className:"flow-description",children:[(0,r.jsx)("h3",{children:"Client-Side Detection"}),(0,r.jsx)("p",{children:"TensorFlow.js runs COCO-SSD model in the user's browser to detect objects in camera feed or uploaded images."})]})]}),(0,r.jsxs)("div",{className:"flow-step",children:[(0,r.jsx)("div",{className:"flow-icon",children:"2"}),(0,r.jsxs)("div",{className:"flow-description",children:[(0,r.jsx)("h3",{children:"API Request"}),(0,r.jsx)("p",{children:"Detection results are sent to the backend server for further processing and enhancement."})]})]}),(0,r.jsxs)("div",{className:"flow-step",children:[(0,r.jsx)("div",{className:"flow-icon",children:"3"}),(0,r.jsxs)("div",{className:"flow-description",children:[(0,r.jsx)("h3",{children:"Cloud Processing"}),(0,r.jsx)("p",{children:"Server connects to cloud-based AI models using securely stored API keys to get detailed analysis."})]})]}),(0,r.jsxs)("div",{className:"flow-step",children:[(0,r.jsx)("div",{className:"flow-icon",children:"4"}),(0,r.jsxs)("div",{className:"flow-description",children:[(0,r.jsx)("h3",{children:"Enhanced Response"}),(0,r.jsx)("p",{children:"Detailed information is returned to the frontend and displayed as dynamic cards in the UI."})]})]})]})]}),(0,r.jsxs)("div",{className:"tech-section",children:[(0,r.jsx)("h2",{children:"Security Considerations"}),(0,r.jsxs)("ul",{className:"security-list",children:[(0,r.jsx)("li",{children:"API keys are stored securely on the server, never exposed to client-side code"}),(0,r.jsx)("li",{children:"Environment variables used for configuration management"}),(0,r.jsx)("li",{children:"Cross-Origin Resource Sharing (CORS) configured to restrict access"}),(0,r.jsx)("li",{children:"Input validation for all data received from clients"}),(0,r.jsx)("li",{children:"Google Cloud Secret Manager for sensitive information in production"})]})]})]})})]})};var i=n(3915);n(5954),n(5284);const l=function(t){let{setActivePage:a}=t;const[s,o]=(0,e.useState)(!0),[l,u]=(0,e.useState)(null),[c,d]=(0,e.useState)(null),[p,h]=(0,e.useState)([]),[f,m]=(0,e.useState)([]),[g,y]=(0,e.useState)(!1),[b,v]=(0,e.useState)(null),[x,k]=(0,e.useState)("camera"),[w,S]=(0,e.useState)(!1),T=(0,e.useRef)(null),N=(0,e.useRef)(null),I=(0,e.useRef)(null),C=(0,e.useRef)(null);(0,e.useEffect)((()=>((async()=>{try{o(!0);try{await Promise.resolve().then(n.bind(n,5954)),await Promise.resolve().then(n.bind(n,5284));const e=await Promise.all([n.e(773),n.e(779)]).then(n.bind(n,1773));await e.setBackend("webgl"),console.log("Using WebGL backend")}catch(e){console.warn("Failed to set WebGL backend, falling back to CPU",e);const t=await Promise.all([n.e(773),n.e(779)]).then(n.bind(n,1773));await t.setBackend("cpu"),console.log("Using CPU backend")}const t=await i.load();console.log("COCO-SSD Model loaded successfully"),u(t),o(!1)}catch(t){console.error("Error loading COCO-SSD model:",t),o(!1)}})(),()=>{c&&c.getTracks().forEach((e=>e.stop())),C.current&&cancelAnimationFrame(C.current)})),[]),(0,e.useEffect)((()=>(!s&&l&&"camera"===x&&E(),()=>{c&&"camera"!==x&&c.getTracks().forEach((e=>e.stop()))})),[s,l,x,c]);const E=async()=>{try{const e={video:{width:640,height:480,facingMode:"environment"}},t=await navigator.mediaDevices.getUserMedia(e);d(t),T.current&&(T.current.srcObject=t)}catch(e){console.error("Error starting webcam:",e)}},$=function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const n=N.current;if(!n)return;const r=n.getContext("2d");r.clearRect(0,0,n.width,n.height),t&&I.current?(n.width=I.current.width,n.height=I.current.height,r.drawImage(I.current,0,0,n.width,n.height)):T.current&&(n.width=T.current.videoWidth,n.height=T.current.videoHeight,r.drawImage(T.current,0,0,n.width,n.height)),e.forEach((e=>{const[t,n,a,s]=e.bbox,o=`${e.class} ${Math.round(100*e.score)}%`;r.strokeStyle="#00FFFF",r.lineWidth=2,r.strokeRect(t,n,a,s),r.fillStyle="#00FFFF";const i=r.measureText(o).width;r.fillRect(t,n-25,i+10,25),r.fillStyle="#000000",r.font="18px Arial",r.fillText(o,t+5,n-7)}))},A=async()=>{if(l&&T.current&&N.current&&w)if(4===T.current.readyState&&0!==T.current.videoWidth&&0!==T.current.videoHeight)try{const e=await l.detect(T.current,.4);e&&e.length>0&&(console.log("Detected objects:",e),h(e),$(e)),w&&(C.current=requestAnimationFrame(A))}catch(e){console.error("Error in object detection:",e),w&&setTimeout((()=>{C.current=requestAnimationFrame(A)}),1e3)}else C.current=requestAnimationFrame(A)},_=async()=>{if(l&&I.current){if(!I.current.complete||0===I.current.naturalWidth||0===I.current.naturalHeight)return console.log("Image not fully loaded yet, waiting..."),void setTimeout(_,100);try{const e=await l.detect(I.current,.4);console.log("Image detection results:",e),h(e),$(e,!0)}catch(e){console.error("Error detecting objects in image:",e)}}};(0,e.useEffect)((()=>{if(b&&I.current&&l&&"image"===x){const e=I.current;e.complete?_():e.onload=_}}),[b,l,x]);const R=e=>{e!==x&&(C.current&&(cancelAnimationFrame(C.current),C.current=null),k(e),h([]),m([]),S(!1),"camera"!==e||c?"image"===e&&c&&(c.getTracks().forEach((e=>e.stop())),d(null)):E())};return(0,r.jsxs)("div",{className:"container",children:[(0,r.jsxs)("div",{className:"sidebar",children:[(0,r.jsxs)("div",{className:"sidebar-item",onClick:()=>a("intro"),children:[(0,r.jsx)("div",{className:"icon",children:(0,r.jsx)("span",{children:"i"})}),(0,r.jsx)("div",{className:"label",children:"Intro"})]}),(0,r.jsxs)("div",{className:"sidebar-item",onClick:()=>a("techstack"),children:[(0,r.jsx)("div",{className:"icon",children:(0,r.jsx)("span",{children:"</>"})}),(0,r.jsx)("div",{className:"label",children:"Tech Stack"})]}),(0,r.jsxs)("div",{className:"sidebar-item active",onClick:()=>a("demo"),children:[(0,r.jsx)("div",{className:"icon",children:(0,r.jsx)("span",{children:"\u25b6"})}),(0,r.jsx)("div",{className:"label",children:"Demo"})]})]}),(0,r.jsx)("div",{className:"main-content",children:(0,r.jsxs)("div",{className:"demo-container",children:[(0,r.jsx)("h1",{children:"Object Detection Demo"}),s?(0,r.jsxs)("div",{className:"loading-container",children:[(0,r.jsx)("p",{children:"Loading TensorFlow.js model..."}),(0,r.jsx)("div",{className:"loading-spinner"})]}):(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)("div",{className:"mode-switcher",children:[(0,r.jsx)("button",{className:"mode-button "+("camera"===x?"active":""),onClick:()=>R("camera"),children:"Camera"}),(0,r.jsx)("button",{className:"mode-button "+("image"===x?"active":""),onClick:()=>R("image"),children:"Image Upload"})]}),(0,r.jsxs)("div",{className:"detection-container",children:[(0,r.jsxs)("div",{className:"video-container",children:["camera"===x?(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)("video",{ref:T,autoPlay:!0,playsInline:!0,muted:!0,onPlay:()=>{if(N.current&&T.current&&l)if(T.current.readyState>=2)S(!0),A();else{console.log("Waiting for video to be ready...");const e=()=>{T.current&&T.current.readyState>=2?(S(!0),A()):setTimeout(e,100)};e()}}}),(0,r.jsx)("div",{className:"control-overlay",children:(0,r.jsx)("button",{className:"control-button "+(w?"active":""),onClick:()=>{w?(S(!1),C.current&&cancelAnimationFrame(C.current)):"camera"===x&&T.current&&l&&(S(!0),setTimeout(A,0))},children:w?"Pause Detection":"Start Detection"})})]}):(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)("input",{type:"file",accept:"image/*",onChange:e=>{const t=e.target.files[0];if(!t)return;const n=new FileReader;n.onload=e=>{v(e.target.result),k("image")},n.readAsDataURL(t)},className:"image-upload-input"}),b&&(0,r.jsx)("img",{ref:I,src:b,alt:"Uploaded",className:"uploaded-image"})]}),(0,r.jsx)("canvas",{ref:N,className:"detection-canvas"})]}),(0,r.jsxs)("div",{className:"results-container",children:[(0,r.jsx)("h2",{children:"Detection Results"}),p.length>0&&(0,r.jsxs)("div",{className:"server-processing-controls",children:[(0,r.jsx)("button",{className:"cloud-process-button",onClick:async()=>{if(0!==p.length){y(!0);try{const e={detections:p,imageContext:{width:N.current.width,height:N.current.height,timestamp:(new Date).toISOString()}},t=await fetch("https://webai-server-44469913499.us-central1.run.app/api/process-detection",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)});if(!t.ok)throw new Error(`Server responded with status: ${t.status}`);const n=await t.json();n.enhancedDetections&&m(n.enhancedDetections)}catch(e){console.error("Error processing detections with backend:",e);const t=p.map((e=>({...e,enhanced:{detailedDescription:`${e.class.charAt(0).toUpperCase()+e.class.slice(1)} typically found in everyday environments.`,objectInfo:{purpose:"Common object used by people for specific functions",capabilities:"Performs tasks related to its design and purpose",features:"Has distinctive characteristics typical of this category"}}})));m(t)}finally{y(!1)}}else alert("No objects detected to process.")},disabled:g,children:g?"Processing...":"Send to Cloud AI"}),(0,r.jsxs)("p",{className:"detection-count",children:[p.length," object",1!==p.length?"s":""," detected"]})]}),g&&(0,r.jsxs)("div",{className:"processing-indicator",children:[(0,r.jsx)("div",{className:"loading-spinner small"}),(0,r.jsx)("span",{children:"Processing with cloud model..."})]}),f.length>0?(0,r.jsx)("div",{className:"detection-cards",children:f.map(((e,t)=>(0,r.jsxs)("div",{className:"detection-card",children:[(0,r.jsx)("h3",{children:e.class}),(0,r.jsx)("div",{className:"card-content",children:(0,r.jsxs)("div",{className:"detection-info",children:[(0,r.jsxs)("p",{children:[(0,r.jsx)("strong",{children:"Confidence:"})," ",Math.round(100*e.score),"%"]}),e.enhanced&&(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)("p",{children:[(0,r.jsx)("strong",{children:"Description:"})," ",e.enhanced.detailedDescription]}),e.enhanced.objectInfo&&(0,r.jsxs)("div",{className:"object-info",children:[(0,r.jsx)("h4",{children:"Object Information:"}),(0,r.jsx)("ul",{children:Object.entries(e.enhanced.objectInfo).map(((e,t)=>{let[n,a]=e;return(0,r.jsxs)("li",{children:[(0,r.jsxs)("strong",{children:[n.replace(/([A-Z])/g," $1").replace(/^./,(e=>e.toUpperCase())),":"]})," ",a]},t)}))})]})]})]})})]},t)))}):(0,r.jsx)("div",{className:"no-detections",children:0===p.length?(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)("p",{children:"No objects detected. Try pointing the camera at an object or uploading a different image."}),(0,r.jsx)("p",{className:"tip",children:"Tip: Make sure objects are clearly visible with good lighting. The model works best with common objects like people, cars, furniture, and animals."})]}):(0,r.jsx)("p",{children:'Click "Send to Cloud AI" to get enhanced information about detected objects.'})})]})]})]}),(0,r.jsxs)("div",{className:"demo-info",children:[(0,r.jsx)("h2",{children:"How It Works"}),(0,r.jsx)("p",{children:'This demo uses TensorFlow.js to run object detection directly in your browser. When you click "Send to Cloud AI", the detection information is sent to our backend server which:'}),(0,r.jsxs)("ol",{children:[(0,r.jsx)("li",{children:"Securely stores and manages the API key"}),(0,r.jsx)("li",{children:"Connects to Google's Gemini AI model for enhanced analysis"}),(0,r.jsx)("li",{children:"Returns detailed information about the detected objects"})]}),(0,r.jsx)("p",{children:"The enhanced data includes detailed descriptions, attribute estimations, and practical information about the objects that demonstrates how this system could be used in a production environment."})]})]})})]})};const u=function(){const[t,n]=(0,e.useState)(!0),[i,u]=(0,e.useState)("intro");return(0,e.useEffect)((()=>{n(!0);const e=setTimeout((()=>{n(!1)}),3500);return()=>clearTimeout(e)}),[]),(0,r.jsx)(r.Fragment,{children:t?(0,r.jsx)(a,{onComplete:()=>{}}):(()=>{switch(i){case"intro":default:return(0,r.jsx)(s,{setActivePage:u});case"techstack":return(0,r.jsx)(o,{setActivePage:u});case"demo":return(0,r.jsx)(l,{setActivePage:u})}})()})},c=e=>{e&&e instanceof Function&&n.e(453).then(n.bind(n,6453)).then((t=>{let{getCLS:n,getFID:r,getFCP:a,getLCP:s,getTTFB:o}=t;n(e),r(e),a(e),s(e),o(e)}))};t.createRoot(document.getElementById("root")).render((0,r.jsx)(e.StrictMode,{children:(0,r.jsx)(u,{})})),c()})()})();
//# sourceMappingURL=main.c00d1159.js.map